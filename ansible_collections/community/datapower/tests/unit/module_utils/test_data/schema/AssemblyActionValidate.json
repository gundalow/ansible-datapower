{
    "schema": {
        "types": [
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmAdminState"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmAdminState"
                    }
                },
                "type": {
                    "cli-arg": "enabled | disabled",
                    "name": "dmAdminState",
                    "value-list": {
                        "value": [
                            {
                                "name": "enabled",
                                "display": "enabled"
                            },
                            {
                                "name": "disabled",
                                "display": "disabled"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                },
                "type": {
                    "cli-arg": "string",
                    "name": "dmString"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                },
                "type": {
                    "cli-arg": "on | off",
                    "name": "dmToggle",
                    "value-list": {
                        "value": [
                            {
                                "name": "on",
                                "display": "on"
                            },
                            {
                                "name": "off",
                                "display": "off"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmValidateAgainstType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmValidateAgainstType"
                    }
                },
                "type": {
                    "display": "Type of Schema to Validate Against",
                    "name": "dmValidateAgainstType",
                    "value-list": {
                        "value": [
                            {
                                "display": "URL",
                                "description": "Indicates that the assembly validate action uses a specified JSON, XML, GraphQL, or WSDL schema to validate payloads.",
                                "name": "url"
                            },
                            {
                                "display": "WSDL",
                                "description": "Indicates the XML schema in the WSDL file associated with the API. JSON payloads are rejected.",
                                "name": "wsdl"
                            },
                            {
                                "display": "Body Parameter",
                                "description": "Indicates the schema that is associated with the body parameter of the request. The assembly validate action uses the XML or JSON request schema associated with the API operation or the API path. If a request schema is defined for the API operation, it overrides the request schema defined for the API path, if any.",
                                "name": "body-param"
                            },
                            {
                                "display": "Response Parameter",
                                "description": "Indicates the transaction response associated with the response parameter. The assembly validate action uses the transaction response based on the response status code to choose the schema to validate payloads.",
                                "name": "response-param"
                            },
                            {
                                "display": "Definition",
                                "description": "Indicates one of the schemas defined in the API definition.",
                                "name": "definition"
                            },
                            {
                                "display": "GraphQL",
                                "description": "Indicates the GraphQL schema associated with the API. XML and WSDL payloads are rejected.",
                                "name": "graphql"
                            }
                        ]
                    },
                    "summary": "The type of schema to validate against"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                },
                "type": {
                    "cli-arg": "object",
                    "name": "dmReference"
                }
            }
        ],
        "metadata": {
            "object": {
                "licensed-feature": "IDG",
                "name": "AssemblyActionValidate",
                "display": "Assembly Validate Action",
                "uri": "assembly/validate",
                "summary": "Validate JSON and XML payload",
                "cmd-group": "assembly",
                "cli-alias": "assembly-validate",
                "properties": {
                    "property": [
                        {
                            "name": "mAdminState",
                            "default": "enabled",
                            "type": {
                                "href": "/mgmt/types/default/dmAdminState"
                            },
                            "label": "Enable administrative state",
                            "summary": "Set the administrative state of this configuration.",
                            "cli-alias": "admin-state",
                            "display": "Administrative state",
                            "hoverhelp": "&lt;p>Set the administrative state of the configuration.&lt;/p>&lt;ul>&lt;li>To make active, set the check box.&lt;/li>&lt;li>To make inactive, clear the check box.&lt;/li>&lt;/ul>",
                            "description": "&lt;p>The administrative state of the configuration.&lt;/p>&lt;ul>&lt;li>To make active, set to enabled.&lt;/li>&lt;li>To make inactive, set to disabled.&lt;/li>&lt;/ul>"
                        },
                        {
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Comments",
                            "cli-alias": "summary",
                            "name": "UserSummary",
                            "summary": "Brief summary for Assembly action."
                        },
                        {
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Title",
                            "cli-alias": "title",
                            "name": "Title",
                            "summary": "The title for Assembly action."
                        },
                        {
                            "description": "The correlation path specifies the part of the API definition that correlates with the assembly action. This path is exposed in the debug data by the API Gateway for use by debugging tools. For example, for an API configuration that is retrieved from API Connect and specified in an OpenAPI (Swagger 2.0) document with IBM extensions, this path is the JSON path to the assembly policy in the IBM extensions section of the document. The path can be expressed in any form that the debugging tool can correlate to the API definition.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The path which correlates the assembly action to a specific part of the API specification.",
                            "cli-alias": "correlation-path",
                            "display": "Correlation path",
                            "name": "CorrelationPath"
                        },
                        {
                            "name": "ActionDebug",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Whether to enable GatewayScript debugger in assembly actions",
                            "cli-alias": "debug",
                            "display": "Enable debugging",
                            "description": "&lt;p>Controls whether to enable the GatewayScript debugger to troubleshoot the following GatewayScript file or script. &lt;ul>&lt;li>Troubleshoot the GatewayScript file that is called from the assembly GatewayScript action.&lt;/li>&lt;li>Troubleshoot the GatewayScript file that is invoked by the GatewayScript associated XSLT extension functions or elements, such as the &lt;tt>gatewayscript()&lt;/tt> extension function, from the assembly XSLT action.&lt;/li>&lt;li>Troubleshoot the GatewayScript script that is invoked through the &lt;tt>value&lt;/tt> or the &lt;tt>default&lt;/tt> property in the JSON file from the assembly map action.&lt;/li>&lt;/ul>&lt;/p>&lt;p>To debug a file or script, the following conditions must be met:&lt;/p>&lt;ul>&lt;li>The file contains one or more &lt;tt>debugger;&lt;/tt> statements at the points in your script where you want to start debugging.&lt;/li>&lt;li>The GatewayScript debugger is enabled.&lt;/li>&lt;/ul>&lt;p>Then you can run the &lt;tt>debug-action&lt;/tt> command to debug.&lt;/p>"
                        },
                        {
                            "name": "ValidateAgainst",
                            "default": "url",
                            "type": {
                                "href": "/mgmt/types/default/dmValidateAgainstType"
                            },
                            "summary": "How the schema is specified.",
                            "cli-alias": "validate-against",
                            "display": "Validate Against",
                            "description": "The type of schema to validate against."
                        },
                        {
                            "name": "Schema",
                            "required-when": {
                                "condition": {
                                    "property-name": "ValidateAgainst",
                                    "evaluation": "property-equals",
                                    "value": "url"
                                }
                            },
                            "summary": "The schema object to validate the message.",
                            "cli-alias": "schema",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/APISchema"
                                }
                            },
                            "display": "Schema",
                            "description": "The schema object to validate the message."
                        },
                        {
                            "name": "Input",
                            "default": "message",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The name of a variable in the API context. Data represented by the variable can be validated.",
                            "cli-alias": "input",
                            "display": "Input message",
                            "description": "The name of a variable in the API context. The content of the &lt;tt>body&lt;/tt> field of the variable is the input to validate. The default variable name is &lt;tt>message&lt;/tt> ."
                        },
                        {
                            "name": "Output",
                            "default": "",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The name of a variable in the API context where the result of validation data, with defaults added, is stored.",
                            "cli-alias": "output",
                            "display": "Output message",
                            "description": "&lt;p>The name of a variable in the API context. If the validation passes, the &lt;tt>body&lt;/tt> field of the output variable stores the output of the assembly validate action.&lt;/p>&lt;ul>&lt;li>If the schema to validate is a JSON schema, the validation also adds any default values that are missing from the payload.&lt;/li>&lt;li>If an output variable is not specified, the results of the validation are not stored. By default, no output variable is specified.&lt;/li>&lt;li>If the validation fails, no output is stored.&lt;/li>&lt;/ul>"
                        },
                        {
                            "name": "Definition",
                            "default": "",
                            "required-when": {
                                "condition": {
                                    "property-name": "ValidateAgainst",
                                    "evaluation": "property-equals",
                                    "value": "definition"
                                }
                            },
                            "summary": "The path to a schema in the API definition.",
                            "cli-alias": "definition",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Definition",
                            "description": "The path to a schema in the API definition. Use the format &lt;tt>#/definitions/mySchema&lt;/tt> or &lt;tt>mySchema&lt;/tt> to specify a previously defined schema to be used for validation."
                        }
                    ]
                },
                "description": "You use the assembly validate action to validate payloads against a schema."
            },
            "_links": {
                "doc": {
                    "href": "/mgmt/docs/metadata/AssemblyActionValidate"
                },
                "self": {
                    "href": "/mgmt/metadata/default/AssemblyActionValidate"
                }
            }
        }
    }
}