{
    "schema": {
        "types": [
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmAdminState"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmAdminState"
                    }
                },
                "type": {
                    "cli-arg": "enabled | disabled",
                    "name": "dmAdminState",
                    "value-list": {
                        "value": [
                            {
                                "name": "enabled",
                                "display": "enabled"
                            },
                            {
                                "name": "disabled",
                                "display": "disabled"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                },
                "type": {
                    "cli-arg": "string",
                    "name": "dmString"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                },
                "type": {
                    "cli-arg": "on | off",
                    "name": "dmToggle",
                    "value-list": {
                        "value": [
                            {
                                "name": "on",
                                "display": "on"
                            },
                            {
                                "name": "off",
                                "display": "off"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmTimeInterval"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmTimeInterval"
                    }
                },
                "type": {
                    "cli-arg": "seconds",
                    "minimum": 0,
                    "name": "dmTimeInterval",
                    "maximum": "0xFFFFFFFF"
                }
            }
        ],
        "metadata": {
            "object": {
                "licensed-feature": "IDG",
                "name": "AssemblyActionJWTGenerate",
                "display": "Assembly Generate JWT Action",
                "uri": "assembly/jwt-generate",
                "summary": "Configure and manage the generate JWT actions",
                "cmd-group": "assembly",
                "cli-alias": "assembly-jwt-generate",
                "properties": {
                    "property": [
                        {
                            "name": "mAdminState",
                            "default": "enabled",
                            "type": {
                                "href": "/mgmt/types/default/dmAdminState"
                            },
                            "label": "Enable administrative state",
                            "summary": "Set the administrative state of this configuration.",
                            "cli-alias": "admin-state",
                            "display": "Administrative state",
                            "hoverhelp": "&lt;p>Set the administrative state of the configuration.&lt;/p>&lt;ul>&lt;li>To make active, set the check box.&lt;/li>&lt;li>To make inactive, clear the check box.&lt;/li>&lt;/ul>",
                            "description": "&lt;p>The administrative state of the configuration.&lt;/p>&lt;ul>&lt;li>To make active, set to enabled.&lt;/li>&lt;li>To make inactive, set to disabled.&lt;/li>&lt;/ul>"
                        },
                        {
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Comments",
                            "cli-alias": "summary",
                            "name": "UserSummary",
                            "summary": "Brief summary for Assembly action."
                        },
                        {
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Title",
                            "cli-alias": "title",
                            "name": "Title",
                            "summary": "The title for Assembly action."
                        },
                        {
                            "description": "The correlation path specifies the part of the API definition that correlates with the assembly action. This path is exposed in the debug data by the API Gateway for use by debugging tools. For example, for an API configuration that is retrieved from API Connect and specified in an OpenAPI (Swagger 2.0) document with IBM extensions, this path is the JSON path to the assembly policy in the IBM extensions section of the document. The path can be expressed in any form that the debugging tool can correlate to the API definition.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The path which correlates the assembly action to a specific part of the API specification.",
                            "cli-alias": "correlation-path",
                            "display": "Correlation path",
                            "name": "CorrelationPath"
                        },
                        {
                            "name": "ActionDebug",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Whether to enable GatewayScript debugger in assembly actions",
                            "cli-alias": "debug",
                            "display": "Enable debugging",
                            "description": "&lt;p>Controls whether to enable the GatewayScript debugger to troubleshoot the following GatewayScript file or script. &lt;ul>&lt;li>Troubleshoot the GatewayScript file that is called from the assembly GatewayScript action.&lt;/li>&lt;li>Troubleshoot the GatewayScript file that is invoked by the GatewayScript associated XSLT extension functions or elements, such as the &lt;tt>gatewayscript()&lt;/tt> extension function, from the assembly XSLT action.&lt;/li>&lt;li>Troubleshoot the GatewayScript script that is invoked through the &lt;tt>value&lt;/tt> or the &lt;tt>default&lt;/tt> property in the JSON file from the assembly map action.&lt;/li>&lt;/ul>&lt;/p>&lt;p>To debug a file or script, the following conditions must be met:&lt;/p>&lt;ul>&lt;li>The file contains one or more &lt;tt>debugger;&lt;/tt> statements at the points in your script where you want to start debugging.&lt;/li>&lt;li>The GatewayScript debugger is enabled.&lt;/li>&lt;/ul>&lt;p>Then you can run the &lt;tt>debug-action&lt;/tt> command to debug.&lt;/p>"
                        },
                        {
                            "name": "JWT",
                            "default": "generated.jwt",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The variable to store the generated JWT",
                            "cli-alias": "jwt",
                            "display": "JWT output location",
                            "description": "Specifies the variable to store the generated JWT. The default value is &lt;tt>generated.jwt&lt;/tt> . When the variable is not set, the generated JWT is written to the Authorization Header as a Bearer token."
                        },
                        {
                            "name": "JWTIDClaims",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Whether to add a JWT ID claim to the JWT",
                            "cli-alias": "jti-claim",
                            "display": "JWT ID claims",
                            "description": "Controls whether to add a JWT ID (jti) claim to the JWT. When enabled, a UUID is generated and set as the value of the JWT ID claim."
                        },
                        {
                            "name": "IssuerClaim",
                            "default": "iss.claim",
                            "cli-alias": "iss-claim",
                            "required": "true",
                            "summary": "Where to retrieve the Issuer claim value",
                            "maximum-length": 256,
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Issuer claim",
                            "description": "Specifies the variable from which to retrieve the Issuer (iss) claim value. The default value is &lt;tt>iss.claim&lt;/tt> . The maximum length is 256 characters."
                        },
                        {
                            "name": "SubjectClaim",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Where to retrieve the Subject claim value",
                            "maximum-length": 256,
                            "cli-alias": "sub-claim",
                            "display": "Subject claim",
                            "description": "Specifies the variable from which to retrieve the Subject (sub) claim value. The maximum length is 256 characters."
                        },
                        {
                            "name": "AudienceClaim",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Where to retrieve the Audience claim value",
                            "maximum-length": 256,
                            "cli-alias": "aud-claim",
                            "display": "Audience claim",
                            "description": "Specifies the variable from which to retrieve the Audience (aud) claim value. The maximum length is 256 characters. The value of this variable can be a single string, a comma-separated string of values, or an array of one or more values when you set the variable with GatewayScript."
                        },
                        {
                            "name": "ValidityPeriod",
                            "default": 3600,
                            "cli-alias": "exp-claim",
                            "required": "true",
                            "maximum": 31622400,
                            "summary": "The validity period for calculating the expiration (exp) claim",
                            "minimum": 1,
                            "units": "seconds",
                            "type": {
                                "href": "/mgmt/types/default/dmTimeInterval"
                            },
                            "display": "Validity period",
                            "description": "Specifies the length of time, that is added to the current date and time, in which the JWT is considered valid. Enter a value in the range 1 - 31622400. The default value is 3600."
                        },
                        {
                            "name": "PrivateClaim",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Where to retrieve the private claim value",
                            "maximum-length": 256,
                            "cli-alias": "private-claims",
                            "display": "Private claim",
                            "description": "Specifies the variable from which to retrieve a valid set of JSON claims. These claims are added to any set of claims that are specified previously."
                        },
                        {
                            "description": "Specifies the context variable that contains the JWK to use to sign the JWT.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The context variable that contains the JWK to sign the JWT",
                            "cli-alias": "jws-jwk",
                            "display": "JWK for JWT signature",
                            "name": "SignJWK"
                        },
                        {
                            "description": "&lt;p>The cryptographic algorithm to use. Use one of the following values.&lt;/p>&lt;ul>&lt;li>&lt;tt>HS256&lt;/tt> - HMAC using SHA-256&lt;/li>&lt;li>&lt;tt>HS384&lt;/tt> - HMAC using SHA-384&lt;/li>&lt;li>&lt;tt>HS512&lt;/tt> - HMAC using SHA-512&lt;/li>&lt;li>&lt;tt>RS256&lt;/tt> - RSASSA-PKCS-v1_5 using SHA-256&lt;/li>&lt;li>&lt;tt>RS384&lt;/tt> - RSASSA-PKCS-v1_5 using SHA 384&lt;/li>&lt;li>&lt;tt>RS512&lt;/tt> - RSASSA-PKCS-v1_5 using SHA-512&lt;/li>&lt;li>&lt;tt>ES256&lt;/tt> - ECDSA using P-256 and SHA-256&lt;/li>&lt;li>&lt;tt>ES384&lt;/tt> - ECDSA using P-384 and SHA-384&lt;/li>&lt;li>&lt;tt>ES512&lt;/tt> - ECDSA using P-521 and SHA-512&lt;/li>&lt;li>&lt;tt>none&lt;/tt> - Do not sign the JWT, which is unsecured and provides no integrity protection but can be used for a nest JWT&lt;/li>&lt;li>An inline parameter to read at runtime&lt;/li>&lt;/ul>",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The cryptographic algorithm to use",
                            "cli-alias": "jws-alg",
                            "display": "Crypto algorithm for JWT signature",
                            "name": "CryptoAlgorithm"
                        },
                        {
                            "description": "Specifies the cryptographic object (a shared secret key or certificate) to use to sign the JWT.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The cryptographic object to sign the JWT",
                            "cli-alias": "jws-crypto",
                            "display": "Crypto object for JWT signature",
                            "name": "SignCrypto"
                        },
                        {
                            "description": "&lt;p>The encryption algorithm to use. Use one of the following values.&lt;/p>&lt;ul>&lt;li>&lt;tt>A128CBC-HS256&lt;/tt> - AES_128_CBC_HMAC_SHA_256 authenticated encryption algorithm&lt;/li>&lt;li>&lt;tt>A192CBC-HS384&lt;/tt> - AES_192_CBC_HMAC_SHA_384 authenticated encryption algorithm&lt;/li>&lt;li>&lt;tt>A256CBC-HS512&lt;/tt> - AES_256_CBC_HMAC_SHA_512 authenticated encryption algorithm&lt;/li>&lt;li>&lt;tt>A128GCM&lt;/tt> - AES GCM using 128-bit key&lt;/li>&lt;li>&lt;tt>A192GCM&lt;/tt> - AES GCM using 192-bit key&lt;/li>&lt;li>&lt;tt>A256GCM&lt;/tt> - AES GCM using 256-bit key&lt;/li>&lt;li>An inline parameter to read at runtime&lt;/li>&lt;/ul>",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The encryption algorithm to use",
                            "cli-alias": "jwe-enc",
                            "display": "Encrypt algorithm for JWT encryption",
                            "name": "EncryptAlgorithm"
                        },
                        {
                            "description": "Specifies the context variable that contains the JWK to use to encrypt the JWT.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The context variable that contains the JWK to encrypt the JWT",
                            "cli-alias": "jwe-jwk",
                            "display": "JWK for JWT encryption",
                            "name": "EncryptJWK"
                        },
                        {
                            "description": "&lt;p>The key encryption algorithm to use. Use one of the following values.&lt;/p>&lt;ul>&lt;li>&lt;tt>RSA1_5&lt;/tt> - RSAES-PKCS1-V1_5&lt;/li>&lt;li>&lt;tt>RSA-OAEP&lt;/tt> - RSAES OAEP using default parameters&lt;/li>&lt;li>&lt;tt>RSA-OAEP-256&lt;/tt> - RSAES OAEP using SHA-256 and MGF1 with SHA-256&lt;/li>&lt;li>&lt;tt>A128KW&lt;/tt> - AES Key Wrap with default initial value using 128 bit key&lt;/li>&lt;li>&lt;tt>A192KW&lt;/tt> - AES Key Wrap with default initial value using 192 bit key&lt;/li>&lt;li>&lt;tt>A256KW&lt;/tt> - AES Key Wrap with default initial value using 256 bit key&lt;/li>&lt;li>&lt;tt>dir&lt;/tt> - Direct use of a shared symmetric key as the CEK&lt;/li>&lt;li>An inline parameter to read at runtime&lt;/li>&lt;/ul>",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The key encryption algorithm to use",
                            "cli-alias": "jwe-alg",
                            "display": "Key encrypt algorithm for JWT encryption",
                            "name": "KeyEncryptAlgorithm"
                        },
                        {
                            "description": "Specifies the cryptographic object (a shared secret key or certificate) to use to encrypt the JWT.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The cryptographic object to encrypt the JWT",
                            "cli-alias": "jwe-crypto",
                            "display": "Crypto object for JWT encryption",
                            "name": "EncryptCrypto"
                        }
                    ]
                },
                "description": "&lt;p>The generate JSON Web Token (JWT) action generates JWT claims and specifies the cryptographic material for generating a JWT during API processing.&lt;/p>"
            },
            "_links": {
                "doc": {
                    "href": "/mgmt/docs/metadata/AssemblyActionJWTGenerate"
                },
                "self": {
                    "href": "/mgmt/metadata/default/AssemblyActionJWTGenerate"
                }
            }
        }
    }
}