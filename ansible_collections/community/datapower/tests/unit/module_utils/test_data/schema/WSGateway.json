{
    "schema": {
        "types": [
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmAdminState"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmAdminState"
                    }
                },
                "type": {
                    "cli-arg": "enabled | disabled",
                    "name": "dmAdminState",
                    "value-list": {
                        "value": [
                            {
                                "name": "enabled",
                                "display": "enabled"
                            },
                            {
                                "name": "disabled",
                                "display": "disabled"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                },
                "type": {
                    "cli-arg": "string",
                    "name": "dmString"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmSchedulerPriority"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmSchedulerPriority"
                    }
                },
                "type": {
                    "name": "dmSchedulerPriority",
                    "value-list": {
                        "value": [
                            {
                                "name": "unknown",
                                "display": "unknown"
                            },
                            {
                                "name": "high-min",
                                "display": "high-min"
                            },
                            {
                                "display": "High",
                                "description": "A service or transaction assigned this priority setting will receive above normal scheduling priority and resource allocation.",
                                "name": "high",
                                "summary": ""
                            },
                            {
                                "name": "high-max",
                                "display": "high-max"
                            },
                            {
                                "name": "normal-min",
                                "display": "normal-min"
                            },
                            {
                                "display": "Normal",
                                "description": "A service or transaction assigned this priority setting will receive normal scheduling priority and resource allocation.",
                                "name": "normal",
                                "summary": ""
                            },
                            {
                                "name": "normal-max",
                                "display": "normal-max"
                            },
                            {
                                "name": "low-min",
                                "display": "low-min"
                            },
                            {
                                "display": "Low",
                                "description": "A service or transaction assigned this priority setting will receive below normal scheduling priority and resource allocation.",
                                "name": "low",
                                "summary": ""
                            },
                            {
                                "name": "low-max",
                                "display": "low-max"
                            }
                        ]
                    },
                    "display": "Transaction Priority"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                },
                "type": {
                    "cli-arg": "object",
                    "name": "dmReference"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmSSLClientConfigType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmSSLClientConfigType"
                    }
                },
                "type": {
                    "name": "dmSSLClientConfigType",
                    "value-list": {
                        "value": [
                            {
                                "name": "proxy",
                                "display": "Proxy Profile"
                            },
                            {
                                "name": "client",
                                "display": "Client Profile"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmHeaderInjection"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmHeaderInjection"
                    }
                },
                "type": {
                    "name": "dmHeaderInjection",
                    "properties": {
                        "property": [
                            {
                                "display": "Direction",
                                "type": {
                                    "href": "/mgmt/types/default/dmHTTPHeaderLocationType"
                                },
                                "description": "Select the direction of the message.",
                                "name": "Direction",
                                "summary": "Direction of the message"
                            },
                            {
                                "display": "Header Name",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "Enter the name of the header to inject. Even though the headers are not defined in the original request, the device provides the specified headers to the backend server.",
                                "name": "HeaderTag",
                                "summary": "Name of the injected header"
                            },
                            {
                                "description": "Enter the value for the header tag.",
                                "required": "true",
                                "summary": "Value for the injected header",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "display": "Header Value",
                                "name": "HeaderTagValue"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmHeaderSuppression"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmHeaderSuppression"
                    }
                },
                "type": {
                    "name": "dmHeaderSuppression",
                    "properties": {
                        "property": [
                            {
                                "display": "Direction",
                                "type": {
                                    "href": "/mgmt/types/default/dmHTTPHeaderLocationType"
                                },
                                "description": "Select the direction of the message.",
                                "name": "Direction",
                                "summary": "Direction of the message"
                            },
                            {
                                "display": "Header Tag",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "Enter the name of the header to suppress. When these headers are defined in the original request, the device removes the specified headers before forwarding the request to the backend server.",
                                "name": "HeaderTag",
                                "summary": "Name of the suppressed header"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmStylesheetParameter"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmStylesheetParameter"
                    }
                },
                "type": {
                    "name": "dmStylesheetParameter",
                    "properties": {
                        "property": [
                            {
                                "display": "Parameter Name",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "&lt;p>Specify the name for the stylesheet parameter. The following list identifies common stylesheet parameters:&lt;/p>&lt;ul>&lt;li>decrypt-key: For decryption operations, the name of the Key object to be used.&lt;/li>&lt;li>keypair-key: For signing operations, the name of the Key object to be used.&lt;/li>&lt;li>keypair-cert: For signing operations, the name of the Certificate object to be used.&lt;/li>&lt;li>recipient: For encryption operations, the name of the Certificate object for the intended recipient.&lt;/li>&lt;li>valcred: For authentication, the name of the Validation Credentials object to be used.&lt;/li>&lt;/ul>",
                                "name": "ParameterName",
                                "summary": "Name of stylesheet parameter"
                            },
                            {
                                "description": "Specify the value for the parameter. Typically, the value is the name of a configuration object.",
                                "required": "true",
                                "summary": "Value for stylesheet parameter",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "display": "Parameter Value",
                                "name": "ParameterValue"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmURL"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmURL"
                    }
                },
                "type": {
                    "cli-arg": "url",
                    "name": "dmURL"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                },
                "type": {
                    "cli-arg": "on | off",
                    "name": "dmToggle",
                    "value-list": {
                        "value": [
                            {
                                "name": "on",
                                "display": "on"
                            },
                            {
                                "name": "off",
                                "display": "off"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmMonitorProcessingPolicy"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmMonitorProcessingPolicy"
                    }
                },
                "type": {
                    "display": "Monitors Processing Policy",
                    "name": "dmMonitorProcessingPolicy",
                    "value-list": {
                        "value": [
                            {
                                "display": "Terminate at First Throttle",
                                "description": "Monitors execute in the order in which they are listed. After any monitor either shapes (buffers to delay) or rejects a message, no further monitors will execute. If there are six monitors and the second monitor executes and rejects the message, the remaining monitors (three to six) do not execute.",
                                "name": "terminate-at-first-throttle"
                            },
                            {
                                "display": "Terminate at First Match",
                                "description": "Monitors execute in the order in which they are listed. After any monitor matches a message and takes any action at all, no further monitors will execute. If there are six monitors and the second monitor executes and logs the message, the remaining monitors (three to six) do not execute.",
                                "name": "terminate-at-first-match"
                            }
                        ]
                    },
                    "summary": "Monitors Processing Policy"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmAttachmentMode"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmAttachmentMode"
                    }
                },
                "type": {
                    "display": "Attachment Processing Mode",
                    "name": "dmAttachmentMode",
                    "value-list": {
                        "value": [
                            {
                                "display": "Strip",
                                "name": "strip",
                                "summary": "Strip attachments before processing"
                            },
                            {
                                "display": "Reject",
                                "name": "reject",
                                "summary": "Reject messages with attachments"
                            },
                            {
                                "display": "Allow",
                                "name": "allow",
                                "summary": "Allow attachments and process intact"
                            },
                            {
                                "display": "Streaming",
                                "description": "Allows messages attachments in streaming mode, but provides limited processing. Client requests in the form of a SOAP message package (that is, a SOAP message transmitted together with accompanying attachments) are supported. Processing can be applied to each attachment individually. The system will not build a manifest of all attachments and attachments must be accessed and processed in the order in which they appear in the document.",
                                "name": "streaming",
                                "summary": "Allow attachements, but limit processing"
                            },
                            {
                                "display": "Unprocessed",
                                "description": "Allows messages with attachements but but does not process the attachments. This option permits forwarding of large attachments. root part of the message (typically containing a SOAP message) is subject to filter or transform actions. Accompanying documents can be passed intact to the server. No processing on parts other than the root part is possible.",
                                "name": "unprocessed",
                                "summary": "Allow attachments, but unprocessed"
                            }
                        ]
                    },
                    "summary": "Attachment Processing Mode"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmRootPartNotFirstAction"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmRootPartNotFirstAction"
                    }
                },
                "type": {
                    "display": "Root Part Not First Action",
                    "name": "dmRootPartNotFirstAction",
                    "value-list": {
                        "value": [
                            {
                                "display": "Process In Order",
                                "name": "process-in-order",
                                "summary": "Process the attachments and root part in the order they appear in the original message. All parts are still processed in streaming mode even though only attachments after the root will be streamed from the network."
                            },
                            {
                                "display": "Buffer To Root",
                                "name": "buffer",
                                "summary": "Buffer attachments before the root into memory. Then process the root part, buffered attachments, and subsequent attachments."
                            },
                            {
                                "display": "Abort",
                                "name": "abort",
                                "summary": "Abort the transaction and return an error"
                            }
                        ]
                    },
                    "summary": "Action to take when MIME message root part is not first"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmGatewayAttachmentFormat"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmGatewayAttachmentFormat"
                    }
                },
                "type": {
                    "display": "Attachment Processing Format",
                    "name": "dmGatewayAttachmentFormat",
                    "value-list": {
                        "value": [
                            {
                                "display": "Dynamic",
                                "name": "dynamic",
                                "summary": "Deduce attachment format (MIME or DIME) from content"
                            },
                            {
                                "display": "MIME",
                                "name": "mime",
                                "summary": "MIME encapsulated document"
                            },
                            {
                                "display": "DIME",
                                "name": "dime",
                                "summary": "DIME encapsulated document"
                            },
                            {
                                "display": "Detect",
                                "name": "detect",
                                "summary": "Detect attachment format from the message data"
                            }
                        ]
                    },
                    "summary": "Attachment Processing Format"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmQuarantineMode"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmQuarantineMode"
                    }
                },
                "type": {
                    "name": "dmQuarantineMode",
                    "value-list": {
                        "value": [
                            {
                                "display": "Buffer Messages",
                                "description": "Buffers submitted messages until all processing is verified as complete. When verified, forward the messages.",
                                "name": "buffer-until-verification",
                                "summary": "Buffer messages until processing is complete"
                            },
                            {
                                "display": "Stream Messages",
                                "description": "&lt;p>Forwards messages before all processing is verified as complete. This setting can potentially increase speed.&lt;/p>&lt;p>If the XML Manager associated with this service has streaming enabled, select this option to be certain that the device will stream messages end-to-end.&lt;/p>&lt;p>If streaming of attachments is enabled, select this option.&lt;/p>",
                                "name": "stream-until-infraction",
                                "summary": "Send messages during processing"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmUInt32"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmUInt32"
                    }
                },
                "type": {
                    "cli-arg": "number",
                    "minimum": 0,
                    "name": "dmUInt32",
                    "maximum": "0xFFFFFFFF"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmUInt16"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmUInt16"
                    }
                },
                "type": {
                    "cli-arg": "number",
                    "minimum": 0,
                    "name": "dmUInt16",
                    "maximum": "0xFFFF"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmExternalRefHandling"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmExternalRefHandling"
                    }
                },
                "type": {
                    "name": "dmExternalRefHandling",
                    "value-list": {
                        "value": [
                            {
                                "display": "Forbid",
                                "description": "The parser forbids external references. An external reference causes the XML parser to stop when the document contains external references. This setting is the default value.",
                                "name": "forbid"
                            },
                            {
                                "display": "Ignore",
                                "description": "The parser accesses and resolves external references, but replaces each for further processing with an empty string. This setting can be a security risk.",
                                "name": "ignore"
                            },
                            {
                                "display": "Allow",
                                "description": "The parser allows and resolves external references. This setting is a security risk.",
                                "name": "allow"
                            }
                        ]
                    },
                    "display": "XML External Reference Handling"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmDebugMode"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmDebugMode"
                    }
                },
                "type": {
                    "value-list": {
                        "value": [
                            {
                                "display": "On",
                                "description": "Enables the probe to contain the number of transactions that is defined by the debug history.",
                                "name": "on",
                                "summary": "Enables the probe to contain a specified number of transactions"
                            },
                            {
                                "display": "Off",
                                "description": "Disables the probe.",
                                "name": "off",
                                "summary": "Disables the probe"
                            },
                            {
                                "display": "Unbounded",
                                "description": "Enables the probe to contain 250 transactions. This property is equivalent to specifying a debug history value of 250 transactions.",
                                "name": "unbounded",
                                "summary": "Enables the probe to contain 250 transactions"
                            }
                        ]
                    },
                    "display": "Multistep Probe",
                    "description": "Select the behavior of the probe.",
                    "name": "dmDebugMode",
                    "summary": "Controls for Multistep Probe"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmMSDebugTriggerType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmMSDebugTriggerType"
                    }
                },
                "type": {
                    "properties": {
                        "property": [
                            {
                                "display": "Client-IP Match",
                                "type": {
                                    "href": "/mgmt/types/default/dmPCRE"
                                },
                                "description": "Specify a PCRE to match against client IP addresses. Requests from clients with matching IP addresses will trigger the probe. To create a match for all IP addresses, specify .* instead of * as the PCRE.",
                                "name": "ClientIP",
                                "summary": "PCRE to match client IP addresses"
                            },
                            {
                                "display": "Inbound URL Match",
                                "type": {
                                    "href": "/mgmt/types/default/dmPCRE"
                                },
                                "description": "Specify a PCRE to match against the inbound URLs. Requests from clients with matching URLs will trigger the probe. To create a match for all URLs, specify .* instead of * as the PCRE.",
                                "name": "InURLMatch",
                                "summary": "PCRE to match inbound URL requests"
                            },
                            {
                                "display": "Outbound URL Match",
                                "type": {
                                    "href": "/mgmt/types/default/dmPCRE"
                                },
                                "description": "Specify a PCRE to match against the outbound URLs. Responses from servers with matching URLs will trigger the probe. To create a match for all URLs, specify .* instead of * as the PCRE.",
                                "name": "OutURLMatch",
                                "summary": "PCRE to match outbound URL responses"
                            },
                            {
                                "display": "Processing Type",
                                "type": {
                                    "href": "/mgmt/types/default/dmProcessingType"
                                },
                                "description": "Select the rule direction or type that will trigger the probe.",
                                "name": "RuleType",
                                "summary": "Processing rules direction or type to match"
                            },
                            {
                                "display": "Processing Rule Match",
                                "type": {
                                    "href": "/mgmt/types/default/dmPCRE"
                                },
                                "description": "Specify a PCRE to match against names of processing rules. Rules with matching names will trigger the probe. To create a match for all names, specify .* instead of * as the PCRE.",
                                "name": "RuleMatch",
                                "summary": "PCRE to match names of processing rules"
                            },
                            {
                                "display": "XPath Expression Match",
                                "type": {
                                    "href": "/mgmt/types/default/dmXPathExpr"
                                },
                                "description": "Specify an XPath expression of use the XPath Tool to define an XPath expression to match against messages. Messages that contain the expression will trigger the probe.",
                                "name": "XPath",
                                "summary": "XPath expression to match element in message"
                            }
                        ]
                    },
                    "display": "Debug Triggers",
                    "name": "dmMSDebugTriggerType"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmTimeInterval"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmTimeInterval"
                    }
                },
                "type": {
                    "cli-arg": "seconds",
                    "minimum": 0,
                    "name": "dmTimeInterval",
                    "maximum": "0xFFFFFFFF"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmHTTPVersion"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmHTTPVersion"
                    }
                },
                "type": {
                    "display": "HTTP Version",
                    "name": "dmHTTPVersion",
                    "value-list": {
                        "value": [
                            {
                                "display": "HTTP 1.0",
                                "name": "HTTP/1.0",
                                "summary": "HTTP version 1.0"
                            },
                            {
                                "display": "HTTP 1.1",
                                "name": "HTTP/1.1",
                                "summary": "HTTP version 1.1"
                            }
                        ]
                    },
                    "summary": "HTTP Version"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmGatewayInOrderMode"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmGatewayInOrderMode"
                    }
                },
                "type": {
                    "display": "In-order mode",
                    "name": "dmGatewayInOrderMode",
                    "value-list": {
                        "value": [
                            {
                                "display": "Request rule in order",
                                "description": "Enforces serial processing of the actions defined for request processing, excluding serial transmission of messages to the backend request queue. An action always sends messages to queue-based destinations in the order that they were pulled from the front-side request queue. If a later message arrives for processing by the action before an earlier message, the service buffers this message until after the action completes processing for the earlier message.",
                                "name": "Request",
                                "summary": "Runs actions in request rule in order"
                            },
                            {
                                "display": "Backend in order",
                                "description": "Enforces serial transmission of messages to the backend request queue. The output of request processing always sends messages to the backend request queue in the order that they were pulled from the front-side request queue. If a later message arrives for transmission before an earlier message, the service buffers this message until after transmitting the earlier message.",
                                "name": "Backend",
                                "summary": "Transmits to backend in order"
                            },
                            {
                                "display": "Response rule in order",
                                "description": "&lt;p>Enforces serial processing of the actions defined for response processing, including serial transmission of messages to the front-side reply queue.&lt;/p>&lt;ul>&lt;li>An action always sends messages to queue-based destinations in the order that were pulled from the backend reply queue.&lt;/li>&lt;li>The output of response processing always sends messages to the front-side reply queue in the order that were pulled from the backend reply queue.&lt;/li>&lt;/ul>&lt;p>If a later message arrives for processing by the action before an earlier message or a later message arrives for transmission to the front-side reply queue before an earlier message, the service buffers the message at this point until after processing the earlier message.&lt;/p>",
                                "name": "Response",
                                "summary": "Runs actions in response rule in order"
                            }
                        ]
                    },
                    "summary": "In-order mode"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSAModeType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSAModeType"
                    }
                },
                "type": {
                    "display": "WS-Addressing Behavior",
                    "name": "dmWSAModeType",
                    "value-list": {
                        "value": [
                            {
                                "display": "WS-Addressing to Traditional",
                                "description": "Mediates transport of messages between host devices that use WS-Addressing to server devices that use traditional addressing. The host device messaging is fully processed as WS-Addressing. You can strip the WS-Addressing headers, or use rewrite rules to modify them.",
                                "name": "wsa2sync",
                                "summary": "Mediate transport from WS-Addressing to traditional addressing"
                            },
                            {
                                "display": "Traditional to WS-Addressing",
                                "description": "Mediates transport of messages between host devices using traditional addressing to server devices using WS-Addressing. The host device message is handled in normal synchronous mode. The communication to the server will include WS-Addressing headers.",
                                "name": "sync2wsa",
                                "summary": "Mediate transport from traditional addressing to WS-Addressing"
                            },
                            {
                                "display": "WS-Addressing to WS-Addressing",
                                "description": "&lt;p>Mediates transport of messages between host devices using WS-Addressing to server devices using WS-Addressing. Note that all messages between the host and server are terminated and re-originated. The received client WS-Addressing is replaced by new WS-Addressing for the communication to the server. You must provide rewrite rules for the &lt;tt>To&lt;/tt> , &lt;tt>ReplyTo&lt;/tt> , and &lt;tt>FaultTo&lt;/tt> elements. The &lt;tt>To&lt;/tt> element needs to be rerouted to the server device, the &lt;tt>ReplyTo&lt;/tt> and &lt;tt>FaultTo&lt;/tt> elements must point back to the mediator from the server device.&lt;/p>",
                                "name": "wsa2wsa",
                                "summary": "Mediate transport between devices that use WS-Addressing"
                            },
                            {
                                "display": "No WS-Addressing Processing",
                                "description": "&lt;p>Disables WS-Addressing support. WS-Addressing SOAP headers are ignored. You can use XSLT to modify any WS-Addressing SOAP headers. This option provides minimal processing overhead but should not be selected if you require any asynchronous responses.&lt;/p>&lt;p>When selected, no additional configuration is required.&lt;/p>",
                                "name": "sync2sync",
                                "summary": "Disable support for processing of WS-Addressing"
                            }
                        ]
                    },
                    "summary": "Select how WS-Addressing transactions should be transported"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSAOriginatedRequestType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSAOriginatedRequestType"
                    }
                },
                "type": {
                    "display": "WS-Addressing Message Exchange Model",
                    "description": "Select how responses to WS-Addressing messages are returned to the DataPower device.",
                    "value-list": {
                        "value": [
                            {
                                "display": "Synchronous",
                                "description": "Indicates a synchronous exchange model. The server response is received over the same communication channel that the DataPower service uses to convey the client request.",
                                "name": "sync",
                                "summary": "Responses are returned synchronously to the device"
                            },
                            {
                                "display": "Asynchronous",
                                "description": "&lt;p>Indicates an asynchronous exchange model. The server response is received over a different communication channel than the one that was used by the DataPower service to convey the client request.&lt;/p>&lt;p>When selected, use the WS-Addressing Reply Point property to identify the handler to convey the responses to the originating client, and use the WS-Addressing asynchronous reply timeout property to define the maximum time to allow for a server response.&lt;/p>",
                                "name": "async",
                                "summary": "Responses are returned asynchronously to the device"
                            },
                            {
                                "display": "Out-of-Band",
                                "description": "&lt;p>Indicates an out-of-band exchange model. The routing of the response to the originating client is handled by the target server. The response bypasses the DataPower device.&lt;/p>&lt;p>When selected, the values for the client-supplied &lt;tt>ReplyTo&lt;/tt> and &lt;tt>FaultTo&lt;/tt> elements must be explicit (non-anonymous). The DataPower service preserves these values and passes them intact to the target server.&lt;/p>",
                                "name": "oob",
                                "summary": "Responses bypass the device"
                            }
                        ]
                    },
                    "name": "dmWSAOriginatedRequestType"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmXMLReqRespType1"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmXMLReqRespType1"
                    }
                },
                "type": {
                    "display": "XML Firewall Request-Response Type",
                    "name": "dmXMLReqRespType1",
                    "value-list": {
                        "value": [
                            {
                                "display": "SOAP",
                                "description": "The traffic is XML formatted in accordance with the SOAP schema standards. The service validates the message against SOAP schemas that are currently in use.",
                                "name": "soap"
                            },
                            {
                                "display": "XML",
                                "description": "The traffic is formatted in XML. The service validates the message against XML schemas that are currently in use.",
                                "name": "xml"
                            },
                            {
                                "display": "Pass through",
                                "description": "The traffic is passed unaltered.",
                                "name": "unprocessed"
                            },
                            {
                                "display": "Non-XML",
                                "description": "The traffic can be any format. However, for traffic that is flat file text or binary, you must use this option. The service passes the contents of the message unaltered. Document processing will not operate directly on the message content, but actions that authenticate and authorize access, set a destination, or attach variables to the context can be performed.",
                                "name": "preprocessed"
                            }
                        ]
                    },
                    "summary": "XML Firewall Request-Response Type"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSGatewayType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSGatewayType"
                    }
                },
                "type": {
                    "display": "Proxy Type",
                    "name": "dmWSGatewayType",
                    "value-list": {
                        "value": [
                            {
                                "display": "Static Backend",
                                "description": "The proxy sends all requests to the URL that is defined by the backend URL. The format of the URL determines the protocol that is used for the backend (server) communication.",
                                "name": "static-backend"
                            },
                            {
                                "display": "Dynamic Backend",
                                "description": "The proxy determines the URL of the backend server dynamically during request processing. The URL determines the protocol that is used for backend communication. Use this mode if any of the handlers is Stateful Raw XML.",
                                "name": "dynamic-backend"
                            },
                            {
                                "display": "Static from WSDL",
                                "description": "Creates a static backend URL by rewriting the wsdl:service address using the remote endpoint rewrite at configuration and refresh time.",
                                "name": "static-from-wsdl"
                            }
                        ]
                    },
                    "summary": "Proxy Type"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmSSLConfigType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmSSLConfigType"
                    }
                },
                "type": {
                    "name": "dmSSLConfigType",
                    "value-list": {
                        "value": [
                            {
                                "name": "proxy",
                                "display": "Proxy Profile"
                            },
                            {
                                "name": "server",
                                "display": "Server Profile"
                            },
                            {
                                "name": "sni",
                                "display": "SNI Server Profile"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmNetworkRetry"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmNetworkRetry"
                    }
                },
                "type": {
                    "name": "dmNetworkRetry",
                    "properties": {
                        "property": [
                            {
                                "name": "AutomaticRetry",
                                "default": "off",
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                },
                                "summary": "Advanced recovery after network error.",
                                "cli-alias": "auto-retry",
                                "display": "Automatic Retry",
                                "description": "The device can automatically retry connecting to the remote host when a TCP connection failure occurs."
                            },
                            {
                                "name": "RetryInterval",
                                "default": 1,
                                "cli-alias": "retry-interval",
                                "summary": "Seconds to wait between retrying failing connections.",
                                "minimum": 1,
                                "units": "seconds",
                                "type": {
                                    "href": "/mgmt/types/default/dmUInt32"
                                },
                                "display": "Retry Interval",
                                "description": "This sets the number of seconds to wait between attempting to retry failed connections to a remote host."
                            },
                            {
                                "name": "ReportingInterval",
                                "default": 1,
                                "cli-alias": "reporting-interval",
                                "summary": "Only log a failure as an error at this interval.",
                                "minimum": 1,
                                "units": "retries",
                                "type": {
                                    "href": "/mgmt/types/default/dmUInt32"
                                },
                                "display": "Reporting Interval",
                                "description": "The number of failed retries between creation of error log messages."
                            },
                            {
                                "name": "TotalRetries",
                                "default": 1,
                                "cli-alias": "total-retries",
                                "summary": "Total number of times to retry.",
                                "minimum": 1,
                                "units": "retries",
                                "type": {
                                    "href": "/mgmt/types/default/dmUInt32"
                                },
                                "display": "Total Retries",
                                "description": "Total number of times to retry before giving up."
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSDLCachePolicy"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSDLCachePolicy"
                    }
                },
                "type": {
                    "name": "dmWSDLCachePolicy",
                    "properties": {
                        "property": [
                            {
                                "display": "URL Match expression",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "Provide a literal or wildcard expression to define a URL set included in this cache policy.",
                                "name": "Match",
                                "summary": "URL Match regular expression"
                            },
                            {
                                "name": "TTL",
                                "default": 900,
                                "maximum": 86400,
                                "summary": "Document lifetime",
                                "minimum": 5,
                                "units": "seconds",
                                "type": {
                                    "href": "/mgmt/types/default/dmUInt32"
                                },
                                "display": "TTL",
                                "description": "Configures lifetime in seconds of document. Enter an integer between 5 and 86400. The default value is 900."
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSBaseWSDL"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSBaseWSDL"
                    }
                },
                "type": {
                    "name": "dmWSBaseWSDL",
                    "properties": {
                        "property": [
                            {
                                "description": "Specify the exact location (URL) of the WSDL file. The WSDL file can be stored on the device or on a remote server. For example, an on-device location might be \"local:///searchservice.wsdl\".",
                                "required": "true",
                                "summary": "Location of the WSDL file",
                                "type": {
                                    "href": "/mgmt/types/default/dmURL"
                                },
                                "display": "WSDL Source Location",
                                "name": "WSDLSourceLocation"
                            },
                            {
                                "description": "Specify a mnemonic for this WSDL file. The mnemonic can be be the filename (for example \"searchservice.wsdl\") or an alias (for example \"searchsvc\").",
                                "required": "true",
                                "summary": "Mnemonic for the WSDL file.",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "display": "Local Name",
                                "name": "WSDLName"
                            },
                            {
                                "display": "Policy Attachments",
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/PolicyAttachments"
                                    }
                                },
                                "description": "Select an existing policy attachment object to configure the handling of XML element attached policies and to create external policy attachments to this web service.",
                                "name": "PolicyAttachments",
                                "summary": "Configuration for policies associated with this WSDL"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSUserToggles"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSUserToggles"
                    }
                },
                "type": {
                    "name": "dmWSUserToggles",
                    "properties": {
                        "property": [
                            {
                                "display": "WSDL file",
                                "required": "true",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "WSDL file name or \"*\" to match all files. This is the local name of the WSDL file, as defined on the WSDL tab.",
                                "name": "WSDLName"
                            },
                            {
                                "display": "Service",
                                "required": "true",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "Matches wsdl:service/@name using the format {serviceNamespace}/name. Enter \"*\" to match all bindings.",
                                "name": "ServiceName"
                            },
                            {
                                "display": "Port",
                                "required": "true",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "Matches wsdl:service/wsdl:port/@name using the format {serviceNamespace}/name. Enter \"*\" to match all ports.",
                                "name": "ServicePortName"
                            },
                            {
                                "display": "PortType",
                                "required": "true",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "Matches wsdl:portType/@name using the format {portTypeNamespace}name. Enter \"*\" to match all bindings.",
                                "name": "PortTypeName"
                            },
                            {
                                "display": "Binding",
                                "required": "true",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "Matches wsdl:binding/@name using the format {bindingNamespace}name. Enter \"*\" to match all bindings.",
                                "name": "BindingName"
                            },
                            {
                                "display": "Operation",
                                "required": "true",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "Matches wsdl:binding/operation/@name using the format {bindingNamespace}name or wsdl:service/wsdl:port when formatted {serviceNamespace}port-name/operation-name. Enter \"*\" to match all operations.",
                                "name": "OperationName"
                            },
                            {
                                "description": "Select the policy (availability and behavior) of the component made available by the Web Service Proxy. The established policy cascade (applies to all components that are contained by the current component).",
                                "default": "0x7",
                                "summary": "Policy Toggles",
                                "type": {
                                    "href": "/mgmt/types/default/dmWSDLUserPolicyToggles"
                                },
                                "display": "Policy Toggles",
                                "name": "Toggles"
                            },
                            {
                                "display": "Subscription",
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "base-class": "WebServiceSubscription"
                                    }
                                },
                                "description": "Matches all of the services obtained via the selected subscription. The selection may be further narrowed by configuring matches against specific wsdl components.",
                                "name": "Subscription"
                            },
                            {
                                "name": "UseFragmentID",
                                "default": "off",
                                "type": {
                                    "href": "/mgmt/types/default/dmToggle"
                                },
                                "summary": "Enable or disable the use of Fragment ID",
                                "cli-alias": "use-fragid",
                                "display": "Use Fragment ID",
                                "description": "Toggle to enable or disable the use of Fragment ID"
                            },
                            {
                                "display": "Fragment Identifier",
                                "type": {
                                    "href": "/mgmt/types/default/dmFragmentID"
                                },
                                "description": "Matches Fragment Identifier",
                                "name": "FragmentID"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmSOAPActionMatchPolicy"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmSOAPActionMatchPolicy"
                    }
                },
                "type": {
                    "display": "SOAPAction Policy",
                    "name": "dmSOAPActionMatchPolicy",
                    "value-list": {
                        "value": [
                            {
                                "display": "Lax",
                                "description": "Allow the SOAPAction header to be an empty header or a header that contains an empty string. The SOAPAction header in the client request can be quoted. For example, SOAPAction: \"\" would be a match.",
                                "name": "lax",
                                "summary": "Consider empty headers as matches"
                            },
                            {
                                "display": "Strict",
                                "description": "Require that the client provides the exact header as specified in the WSDL. The client can quote the SOAPAction header.",
                                "name": "strict",
                                "summary": "An exact match is required"
                            },
                            {
                                "display": "Off",
                                "description": "Ignore the SOAPAction header when issued by clients. The header is never compared against the contents in the WSDL.",
                                "name": "off",
                                "summary": "Ignores SOAPAction"
                            }
                        ]
                    },
                    "summary": "Designate if SOAPAction is used"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmUDDIWSDLSource"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmUDDIWSDLSource"
                    }
                },
                "type": {
                    "name": "dmUDDIWSDLSource",
                    "properties": {
                        "property": [
                            {
                                "display": "Subscription",
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/UDDISubscription"
                                    }
                                },
                                "description": "Select UDDI subscription (deprecated)",
                                "name": "UDDISubscription",
                                "summary": "Select UDDI subscription (deprecated)"
                            },
                            {
                                "display": "Policy Attachment",
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/PolicyAttachments"
                                    }
                                },
                                "description": "Select WS-Policy attachment",
                                "name": "UDDIAttachment",
                                "summary": "Select WS-Policy attachment"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSRRWSDLSource"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSRRWSDLSource"
                    }
                },
                "type": {
                    "name": "dmWSRRWSDLSource",
                    "properties": {
                        "property": [
                            {
                                "display": "Subscription",
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/WSRRSubscription"
                                    }
                                },
                                "description": "Select WSRR subscription",
                                "name": "WSRRSubscription",
                                "summary": "Select WSRR subscription"
                            },
                            {
                                "display": "Policy Attachment",
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/PolicyAttachments"
                                    }
                                },
                                "description": "Select WS-Policy attachment",
                                "name": "WSRRAttachment",
                                "summary": "Select WS-Policy attachment"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSRRSavedSearchWSDLSource"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSRRSavedSearchWSDLSource"
                    }
                },
                "type": {
                    "name": "dmWSRRSavedSearchWSDLSource",
                    "properties": {
                        "property": [
                            {
                                "display": "Saved Search Subscription",
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/WSRRSavedSearchSubscription"
                                    }
                                },
                                "description": "Specify a WSRR saved search subscription",
                                "name": "WSRRSavedSearchSubscription",
                                "summary": "WSRR saved search subscription"
                            },
                            {
                                "display": "Policy Attachment",
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/PolicyAttachments"
                                    }
                                },
                                "description": "Specify a WS-Policy attachment",
                                "name": "WSRRAttachment",
                                "summary": "WS-Policy attachment"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSOperationSchedulerPriority"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSOperationSchedulerPriority"
                    }
                },
                "type": {
                    "properties": {
                        "property": [
                            {
                                "description": "Service Priority",
                                "default": "normal",
                                "summary": "Service Priority",
                                "type": {
                                    "href": "/mgmt/types/default/dmSchedulerPriority"
                                },
                                "display": "Service Priority",
                                "name": "SchedulerPriority"
                            },
                            {
                                "name": "SchedulerPriorityWSDLComponentType",
                                "default": "all",
                                "required": "true",
                                "summary": "Type of WSDL component",
                                "type": {
                                    "href": "/mgmt/types/default/dmWSDLComponentType"
                                },
                                "display": "WSDL Component Type",
                                "description": "Select a type of WSDL Component. The default is All."
                            },
                            {
                                "description": "Enter the name of a WSDL-defined component of the type selected in the WSDL Component Type field.",
                                "summary": "The name of the WSDL Component",
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "SchedulerPriorityWSDLComponentType",
                                        "evaluation": "property-equals",
                                        "value": "subscription"
                                    }
                                },
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "display": "WSDL Component Value",
                                "name": "SchedulerPriorityWSDLComponentValue"
                            },
                            {
                                "name": "SchedulerPrioritySubscription",
                                "required-when": {
                                    "condition": {
                                        "property-name": "SchedulerPriorityWSDLComponentType",
                                        "evaluation": "property-equals",
                                        "value": "subscription"
                                    }
                                },
                                "summary": "Subscription",
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-true"
                                    }
                                },
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "base-class": "WebServiceSubscription"
                                    }
                                },
                                "display": "Subscription",
                                "description": "Select a subscription."
                            },
                            {
                                "display": "Fragment Identifier",
                                "type": {
                                    "href": "/mgmt/types/default/dmFragmentID"
                                },
                                "description": "Matches Fragment Identifier",
                                "name": "SchedulerPriorityFragmentID"
                            }
                        ]
                    },
                    "display": "WSDL Operation Scheduler Priority",
                    "name": "dmWSOperationSchedulerPriority",
                    "summary": "Control the scheduling priority and resource allocation for a specified web service operation"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSOperationConformancePolicy"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSOperationConformancePolicy"
                    }
                },
                "type": {
                    "properties": {
                        "property": [
                            {
                                "description": "Conformance Policy",
                                "required": "true",
                                "summary": "Conformance Policy",
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/ConformancePolicy"
                                    }
                                },
                                "display": "Conformance Policy",
                                "name": "ConformancePolicy"
                            },
                            {
                                "name": "ConformancePolicyWSDLComponentType",
                                "default": "all",
                                "required": "true",
                                "summary": "Type of WSDL component",
                                "type": {
                                    "href": "/mgmt/types/default/dmWSDLComponentType"
                                },
                                "display": "WSDL Component Type",
                                "description": "Select a type of WSDL Component. The default is All."
                            },
                            {
                                "description": "Enter the name of a WSDL-defined component of the type selected in the WSDL Component Type field.",
                                "summary": "The name of the WSDL Component",
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "ConformancePolicyWSDLComponentType",
                                        "evaluation": "property-equals",
                                        "value": "subscription"
                                    }
                                },
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "display": "WSDL Component Value",
                                "name": "ConformancePolicyWSDLComponentValue"
                            },
                            {
                                "name": "ConformancePolicySubscription",
                                "required-when": {
                                    "condition": {
                                        "property-name": "ConformancePolicyWSDLComponentType",
                                        "evaluation": "property-equals",
                                        "value": "subscription"
                                    }
                                },
                                "summary": "Subscription",
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-true"
                                    }
                                },
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "base-class": "WebServiceSubscription"
                                    }
                                },
                                "display": "Subscription",
                                "description": "Select a subscription."
                            },
                            {
                                "display": "Fragment Identifier",
                                "type": {
                                    "href": "/mgmt/types/default/dmFragmentID"
                                },
                                "description": "Matches Fragment Identifier",
                                "name": "ConformancePolicyFragmentID"
                            }
                        ]
                    },
                    "display": "WSDL Operation Conformance Policy",
                    "name": "dmWSOperationConformancePolicy",
                    "summary": "Configuration of conformance checking of received messages for a specified web service operation"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSOperationPolicySubjectOptOut"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSOperationPolicySubjectOptOut"
                    }
                },
                "type": {
                    "properties": {
                        "property": [
                            {
                                "description": "Ignored Subjects",
                                "default": "0x0",
                                "summary": "Ignored Subjects",
                                "type": {
                                    "href": "/mgmt/types/default/dmPolicySubjectBitmap"
                                },
                                "display": "Ignored Subjects",
                                "name": "IgnoredSubjects"
                            },
                            {
                                "name": "PolicySubjectOptOutWSDLComponentType",
                                "default": "all",
                                "required": "true",
                                "summary": "Type of WSDL component",
                                "type": {
                                    "href": "/mgmt/types/default/dmWSDLComponentType"
                                },
                                "display": "WSDL Component Type",
                                "description": "Select a type of WSDL Component. The default is All."
                            },
                            {
                                "description": "Enter the name of a WSDL-defined component of the type selected in the WSDL Component Type field.",
                                "summary": "The name of the WSDL Component",
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "PolicySubjectOptOutWSDLComponentType",
                                        "evaluation": "property-equals",
                                        "value": "subscription"
                                    }
                                },
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "display": "WSDL Component Value",
                                "name": "PolicySubjectOptOutWSDLComponentValue"
                            },
                            {
                                "name": "PolicySubjectOptOutSubscription",
                                "required-when": {
                                    "condition": {
                                        "property-name": "PolicySubjectOptOutWSDLComponentType",
                                        "evaluation": "property-equals",
                                        "value": "subscription"
                                    }
                                },
                                "summary": "Subscription",
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-true"
                                    }
                                },
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "base-class": "WebServiceSubscription"
                                    }
                                },
                                "display": "Subscription",
                                "description": "Select a subscription."
                            },
                            {
                                "display": "Fragment Identifier",
                                "type": {
                                    "href": "/mgmt/types/default/dmFragmentID"
                                },
                                "description": "Matches Fragment Identifier",
                                "name": "PolicySubjectOptOutFragmentID"
                            }
                        ]
                    },
                    "display": "Policy Subject Opt Out",
                    "name": "dmWSOperationPolicySubjectOptOut",
                    "summary": "Ignore a policy subject for a WSDL component"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSPolicyParameters"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSPolicyParameters"
                    }
                },
                "type": {
                    "properties": {
                        "property": [
                            {
                                "description": "Reference to policy parameter object.",
                                "required": "true",
                                "summary": "Parameterse",
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/PolicyParameters"
                                    }
                                },
                                "display": "Parameters",
                                "name": "PolicyParamParameters"
                            },
                            {
                                "name": "PolicyParamWSDLComponentType",
                                "default": "all",
                                "required": "true",
                                "summary": "Type of WSDL component",
                                "type": {
                                    "href": "/mgmt/types/default/dmWSDLComponentType"
                                },
                                "display": "WSDL Component Type",
                                "description": "Select a type of WSDL Component. The default is All."
                            },
                            {
                                "description": "Enter the name of a WSDL-defined component of the type selected in the WSDL Component Type field.",
                                "summary": "The name of the WSDL Component",
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "PolicyParamWSDLComponentType",
                                        "evaluation": "property-equals",
                                        "value": "subscription"
                                    }
                                },
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "display": "WSDL Component Value",
                                "name": "PolicyParamWSDLComponentValue"
                            },
                            {
                                "name": "PolicyParamSubscription",
                                "required-when": {
                                    "condition": {
                                        "property-name": "PolicyParamWSDLComponentType",
                                        "evaluation": "property-equals",
                                        "value": "subscription"
                                    }
                                },
                                "summary": "Subscription",
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-true"
                                    }
                                },
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "base-class": "WebServiceSubscription"
                                    }
                                },
                                "display": "Subscription",
                                "description": "Select a subscription."
                            },
                            {
                                "display": "Fragment Identifier",
                                "type": {
                                    "href": "/mgmt/types/default/dmFragmentID"
                                },
                                "description": "Matches Fragment Identifier",
                                "name": "PolicyParamFragmentID"
                            }
                        ]
                    },
                    "display": "WSDL Policy Parameters",
                    "name": "dmWSPolicyParameters",
                    "summary": "Associates policy parameters to a wsdl component"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSOperationReliableMessaging"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSOperationReliableMessaging"
                    }
                },
                "type": {
                    "properties": {
                        "property": [
                            {
                                "display": "Reliable Messaging Options",
                                "type": {
                                    "href": "/mgmt/types/default/dmWSRMPolicyBitmap"
                                },
                                "description": "Reliable Messaging Options",
                                "name": "Options",
                                "summary": "Reliable Messaging Options"
                            },
                            {
                                "description": "Reliable Messaging",
                                "default": "exactly-once",
                                "summary": "Reliable Messaging Delivery Assurance Type",
                                "type": {
                                    "href": "/mgmt/types/default/dmWSRMPolicyDeliveryAssurance"
                                },
                                "display": "Reliable Messaging Delivery Assurance Type",
                                "name": "DeliveryAssuranceType"
                            },
                            {
                                "name": "ReliableMessagingWSDLComponentType",
                                "default": "all",
                                "required": "true",
                                "summary": "Type of WSDL component",
                                "type": {
                                    "href": "/mgmt/types/default/dmWSDLComponentType"
                                },
                                "display": "WSDL Component Type",
                                "description": "Select a type of WSDL Component. The default is All."
                            },
                            {
                                "description": "Enter the name of a WSDL-defined component of the type selected in the WSDL Component Type field.",
                                "summary": "The name of the WSDL Component",
                                "ignored-when": {
                                    "condition": {
                                        "property-name": "ReliableMessagingWSDLComponentType",
                                        "evaluation": "property-equals",
                                        "value": "subscription"
                                    }
                                },
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "display": "WSDL Component Value",
                                "name": "ReliableMessagingWSDLComponentValue"
                            },
                            {
                                "name": "ReliableMessagingSubscription",
                                "required-when": {
                                    "condition": {
                                        "property-name": "ReliableMessagingWSDLComponentType",
                                        "evaluation": "property-equals",
                                        "value": "subscription"
                                    }
                                },
                                "summary": "Subscription",
                                "ignored-when": {
                                    "condition": {
                                        "evaluation": "logical-true"
                                    }
                                },
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "base-class": "WebServiceSubscription"
                                    }
                                },
                                "display": "Subscription",
                                "description": "Select a subscription."
                            },
                            {
                                "display": "Fragment Identifier",
                                "type": {
                                    "href": "/mgmt/types/default/dmFragmentID"
                                },
                                "description": "Matches Fragment Identifier",
                                "name": "ReliableMessagingFragmentID"
                            }
                        ]
                    },
                    "display": "WSDL Operation Reliable Messaging",
                    "name": "dmWSOperationReliableMessaging",
                    "summary": "Control reliable messaging properties for a specified web service operation"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSMPayloadCaptureMode"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSMPayloadCaptureMode"
                    }
                },
                "type": {
                    "name": "dmWSMPayloadCaptureMode",
                    "value-list": {
                        "value": [
                            {
                                "display": "None",
                                "description": "Captures no messages.",
                                "name": "none"
                            },
                            {
                                "display": "All",
                                "description": "Captures all messages.",
                                "name": "all-messages"
                            },
                            {
                                "display": "On-Error",
                                "description": "Captures messages on error or fault.",
                                "name": "on-error"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSRMPolicyBitmap"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSRMPolicyBitmap"
                    }
                },
                "type": {
                    "display": "Reliable Messaging Options",
                    "name": "dmWSRMPolicyBitmap",
                    "value-list": {
                        "value": [
                            {
                                "name": "Optional",
                                "display": "Reliable Messaging is optional"
                            },
                            {
                                "name": "SequenceTransportSecurity",
                                "display": "RM Sequence must be bound to underlying transport-level security protocol"
                            },
                            {
                                "name": "InOrder",
                                "display": "RM messages must be delivered in the same order as they have been sent by the source"
                            },
                            {
                                "name": "TwoWay",
                                "display": "Response messages require RM Sequence headers"
                            }
                        ]
                    },
                    "summary": "Reliable Messaging Options Selections"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSRMPolicyDeliveryAssurance"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSRMPolicyDeliveryAssurance"
                    }
                },
                "type": {
                    "display": "Reliable Messaging policy delivery assurance type",
                    "name": "dmWSRMPolicyDeliveryAssurance",
                    "value-list": {
                        "value": {
                            "display": "Message must be delivered exactly once",
                            "name": "exactly-once",
                            "summary": "Message must be delivered exactly once"
                        }
                    },
                    "summary": "Reliable Messaging policy delivery assurance type"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSDLComponentType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSDLComponentType"
                    }
                },
                "type": {
                    "name": "dmWSDLComponentType",
                    "value-list": {
                        "value": [
                            {
                                "display": "All",
                                "description": "Matches all input. Select all to include all component types in the matching criteria. If all is chosen (the default), the WSDL Component Value field is blank (the default). This combination eliminates the WSDL Component from consideration when selecting a Processing Rule.",
                                "name": "all"
                            },
                            {
                                "display": "Subscription",
                                "description": "Matches UDDI subscription key.",
                                "name": "subscription"
                            },
                            {
                                "display": "WSDL",
                                "description": "The selected Processing Rule will be run only when the operation requested in the current transaction is defined in the WSDL file that is identified by the WSDL Component Value field.",
                                "name": "wsdl"
                            },
                            {
                                "display": "Service",
                                "description": "The selected Processing Rule will be run only when the operation requested in the current transaction is included in the WSDL service that is identified by the WSDL Component Value field. Matches wsdl:service/@name formatted {serviceNamespace}name",
                                "name": "service"
                            },
                            {
                                "display": "Port",
                                "description": "Matches wsdl:service/wsdl:port/@name formatted {serviceNamespace}port-name",
                                "name": "port"
                            },
                            {
                                "display": "Operation",
                                "description": "The selected Processing Rule will be run only when the operation requested in the current transaction is the operation that is identified by the WSDL Component Value field. Matches wsdl:binding/operation/@name formatted {bindingNamespace}name or via wsdl:service/wsdl:port when formatted {serviceNamespace}port-name/operation-name.",
                                "name": "operation"
                            },
                            {
                                "display": "Fragment Identifier",
                                "description": "Match the Fragment Identifier",
                                "name": "fragmentid"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmFragmentID"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmFragmentID"
                    }
                },
                "type": {
                    "cli-arg": "fragmentid",
                    "display": "WSDL Fragment Identifier",
                    "description": "Set the WSDL Fragment Identifier",
                    "name": "dmFragmentID",
                    "summary": "The WSDL Fragment Identifier"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmPolicySubjectBitmap"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmPolicySubjectBitmap"
                    }
                },
                "type": {
                    "display": "Policy Subjects",
                    "name": "dmPolicySubjectBitmap",
                    "value-list": {
                        "value": [
                            {
                                "name": "Service",
                                "display": "Service Subject"
                            },
                            {
                                "name": "Endpoint",
                                "display": "Endpoint Subject"
                            },
                            {
                                "name": "Operation",
                                "display": "Operation Subject"
                            },
                            {
                                "name": "MessageIn",
                                "display": "Message Input Subject"
                            },
                            {
                                "name": "MessageOut",
                                "display": "Message Output Subject"
                            }
                        ]
                    },
                    "summary": "Policy Subject Selections"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmWSDLUserPolicyToggles"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmWSDLUserPolicyToggles"
                    }
                },
                "type": {
                    "display": "User Toggles",
                    "name": "dmWSDLUserPolicyToggles",
                    "value-list": {
                        "value": [
                            {
                                "display": "Enable this component",
                                "description": "Allows (selected) or disallows (unselected) requests for the operations and services included by this component level. A WSDL component, for example, includes all ports, services, and operation that are defined in the WSDL file.",
                                "name": "Enable"
                            },
                            {
                                "display": "Publish in WSDL",
                                "description": "Includes (selected) the component in any WSDL file that is published to external directories or returned in the WSDL file that is produced by the Web Service Proxy in response to requests by external clients. It is possible to enable an operation but not publish it until some other time. Also, it is possible to discontinue publishing an operation after a sunset period.",
                                "name": "Publish"
                            },
                            {
                                "display": "Schema validate faults messages",
                                "description": "Validates (selected) fault messages against the schema that is contained in the corresponding WSDL file. Not all WSDL files contain schema information for faults. For this reason, the Web Service Proxy can be configured to allow fault messages to pass when no fault schema information is available. When selected and the WSDL file contains fault schema information, fault messages are checked against that schema and rejected if they do not validate.",
                                "name": "VerifyFaults"
                            },
                            {
                                "display": "Schema validate SOAP headers",
                                "description": "Validates (selected) SOAP headers. A WSDL file can contain schema information about SOAP headers.",
                                "name": "VerifyHeaders"
                            },
                            {
                                "display": "No Request Validation",
                                "description": "Does not validate (selected) request messages against the schema that is contained in the corresponding WSDL file.",
                                "name": "NoRequestValidation"
                            },
                            {
                                "display": "No Response Validation",
                                "description": "Does not validate (selected) response messages against the schema that is contained in the corresponding WSDL file.",
                                "name": "NoResponseValidation"
                            },
                            {
                                "display": "Strict Fault Document Style",
                                "description": "When enabled, schema for fault messages disallows RPC operation wrapper. This setting applies to the full selected WSDLs.",
                                "name": "SuppressFaultsElementsForRPCWrappers"
                            },
                            {
                                "display": "Opt out of WS-Addressing",
                                "description": "Opts out of any configured WS-Addressing.",
                                "name": "NoWSA"
                            },
                            {
                                "display": "Opt out of WS-ReliableMessaging",
                                "description": "Opts out of any configured WS-ReliableMessaging.",
                                "name": "NoWSRM"
                            },
                            {
                                "display": "Accept MTOM/XOP Optimized Messages",
                                "description": "&lt;p>When selected, this option modifies message validation to accept messages where base64-encoded binary content was optimized according to the MTOM/XOP specifications. XOP binary-optimization replaces base64-encoded binary data with an xop:Include reference element that references the unencoded binary data located in an attachment.&lt;/p>&lt;ul>&lt;li>When disabled, such optimized messages are rejected by validation of the optimized form. Rejection occurs because the schema specifies a simple type that accepts base64-encoded data, such as xs:base64Binary or xs:string, but the message contains an xop:Include element instead.&lt;/li>&lt;li>When enabled, an xop:Include element can optionally appear in place of content for any XML Schema simple type that validates base64-encoded binary data. The xop:Include element itself is validated according to the built-in schema in store:///schemas/xop.xsd.&lt;/li>&lt;/ul>&lt;p>This option is enabled by default.&lt;/p>",
                                "name": "AllowXOPInclude"
                            }
                        ]
                    },
                    "summary": "User Toggles"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmPCRE"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmPCRE"
                    }
                },
                "type": {
                    "cli-arg": "pcre",
                    "name": "dmPCRE"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmProcessingType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmProcessingType"
                    }
                },
                "type": {
                    "name": "dmProcessingType",
                    "value-list": {
                        "value": [
                            {
                                "name": "all",
                                "display": "Any"
                            },
                            {
                                "display": "Response",
                                "name": "response",
                                "summary": "Response rule (server-originated)"
                            },
                            {
                                "display": "Request",
                                "name": "request",
                                "summary": "Request rule (client-originated)"
                            },
                            {
                                "display": "Call",
                                "name": "call",
                                "summary": "Call processing rule"
                            },
                            {
                                "display": "Error",
                                "name": "error",
                                "summary": "Error rule"
                            },
                            {
                                "display": "Scheduled",
                                "name": "scheduled",
                                "summary": "Scheduled processing rule"
                            },
                            {
                                "display": "Health",
                                "name": "lbhealth",
                                "summary": "Health-Check processing rule"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmXPathExpr"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmXPathExpr"
                    }
                },
                "type": {
                    "cli-arg": "xpath",
                    "name": "dmXPathExpr"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmHTTPHeaderLocationType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmHTTPHeaderLocationType"
                    }
                },
                "type": {
                    "display": "Message Direction",
                    "name": "dmHTTPHeaderLocationType",
                    "value-list": {
                        "value": [
                            {
                                "display": "Front",
                                "description": "The message travels from the DataPower device to the client.",
                                "name": "front",
                                "summary": "DataPower device to client"
                            },
                            {
                                "display": "Back",
                                "description": "The message travels from the DataPower device to the backend server.",
                                "name": "back",
                                "summary": "DataPower device to server"
                            }
                        ]
                    },
                    "summary": "The direction of the message"
                }
            }
        ],
        "metadata": {
            "object": {
                "licensed-feature": "IDG",
                "name": "WSGateway",
                "status-bindings": {
                    "status": {
                        "binding": {
                            "property": {
                                "name": "WSGateway",
                                "select": "dmObjectName"
                            }
                        },
                        "name": "WSGatewaySummary",
                        "display": {
                            "property": {
                                "name": "Quiesce",
                                "display": "Quiesce State"
                            }
                        }
                    }
                },
                "display": "Web Service Proxy",
                "property-group": [
                    {
                        "member": [
                            {
                                "name": "mAdminState"
                            },
                            {
                                "name": "UserSummary"
                            },
                            {
                                "name": "StylePolicy"
                            }
                        ],
                        "name": "summary"
                    },
                    {
                        "member": [
                            {
                                "name": "URLRewritePolicy"
                            },
                            {
                                "name": "SSLClientConfigType"
                            },
                            {
                                "name": "SSLProxy"
                            },
                            {
                                "name": "SSLClient"
                            },
                            {
                                "name": "FWCred"
                            },
                            {
                                "name": "DefaultParamNamespace"
                            },
                            {
                                "name": "QueryParamNamespace"
                            },
                            {
                                "name": "RequestAttachments"
                            },
                            {
                                "name": "RequestAttachmentsFlowControl"
                            },
                            {
                                "name": "ResponseAttachments"
                            },
                            {
                                "name": "ResponseAttachmentsFlowControl"
                            },
                            {
                                "name": "RootPartNotFirstAction"
                            },
                            {
                                "name": "FrontAttachmentFormat"
                            },
                            {
                                "name": "BackAttachmentFormat"
                            },
                            {
                                "name": "MIMEFrontHeaders"
                            },
                            {
                                "name": "MIMEBackHeaders"
                            },
                            {
                                "name": "StreamOutputToBack"
                            },
                            {
                                "name": "StreamOutputToFront"
                            },
                            {
                                "name": "RequestType"
                            },
                            {
                                "name": "ResponseType"
                            },
                            {
                                "name": "SOAPSchemaURL"
                            },
                            {
                                "name": "FrontTimeout"
                            },
                            {
                                "name": "BackTimeout"
                            },
                            {
                                "name": "FrontPersistentTimeout"
                            },
                            {
                                "name": "BackPersistentTimeout"
                            },
                            {
                                "name": "IncludeResponseTypeEncoding"
                            },
                            {
                                "name": "ProcessRespRulesOnOneWayMEP"
                            }
                        ],
                        "name": "Gateway",
                        "display": "Proxy Settings"
                    },
                    {
                        "member": [
                            {
                                "name": "BackHTTPVersion"
                            },
                            {
                                "name": "AllowCompression"
                            },
                            {
                                "name": "EnableCompressedPayloadPassthrough"
                            },
                            {
                                "name": "PersistentConnections"
                            },
                            {
                                "name": "LoopDetection"
                            },
                            {
                                "name": "FollowRedirects"
                            },
                            {
                                "name": "DoHostRewriting"
                            },
                            {
                                "name": "DoChunkedUpload"
                            },
                            {
                                "name": "ProcessHTTPErrors"
                            },
                            {
                                "name": "HTTPClientIPLabel"
                            },
                            {
                                "name": "HTTPLogCorIDLabel"
                            }
                        ],
                        "name": "HTTP",
                        "display": "HTTP Options"
                    },
                    {
                        "member": [
                            {
                                "name": "MaxMessageSize"
                            },
                            {
                                "name": "GatewayParserLimits"
                            },
                            {
                                "name": "ParserLimitsElementDepth"
                            },
                            {
                                "name": "ParserLimitsAttributeCount"
                            },
                            {
                                "name": "ParserLimitsMaxNodeSize"
                            },
                            {
                                "name": "ParserLimitsMaxPrefixes"
                            },
                            {
                                "name": "ParserLimitsMaxNamespaces"
                            },
                            {
                                "name": "ParserLimitsMaxLocalNames"
                            },
                            {
                                "name": "ParserLimitsExternalReferences"
                            },
                            {
                                "name": "ParserLimitsAttachmentByteCount"
                            },
                            {
                                "name": "ParserLimitsAttachmentPackageByteCount"
                            }
                        ],
                        "name": "ParserLimits",
                        "display": "Parser Limits"
                    },
                    {
                        "member": [
                            {
                                "name": "ServiceMonitors"
                            },
                            {
                                "name": "CountMonitors"
                            },
                            {
                                "name": "DurationMonitors"
                            },
                            {
                                "name": "MonitorProcessingPolicy"
                            }
                        ],
                        "name": "monitors",
                        "display": "Monitors"
                    },
                    {
                        "member": [
                            {
                                "name": "WSAMode"
                            },
                            {
                                "name": "WSARequireAAA"
                            },
                            {
                                "name": "WSARewriteReplyTo"
                            },
                            {
                                "name": "WSARewriteFaultTo"
                            },
                            {
                                "name": "WSARewriteTo"
                            },
                            {
                                "name": "WSAStrip"
                            },
                            {
                                "name": "WSADefaultReplyTo"
                            },
                            {
                                "name": "WSADefaultFaultTo"
                            },
                            {
                                "name": "WSAForce"
                            },
                            {
                                "name": "WSAGenStyle"
                            },
                            {
                                "name": "WSAHTTPAsyncResponseCode"
                            },
                            {
                                "name": "WSABackProtocol"
                            },
                            {
                                "name": "WSATimeout"
                            }
                        ],
                        "name": "wsa",
                        "display": "WS-Addressing"
                    },
                    {
                        "member": [
                            {
                                "name": "FrontProtocol"
                            },
                            {
                                "name": "AutoCreateSources"
                            },
                            {
                                "name": "SSLServerConfigType"
                            },
                            {
                                "name": "SSLServer"
                            },
                            {
                                "name": "SSLSNIServer"
                            },
                            {
                                "name": "LocalEndpointRewrite"
                            },
                            {
                                "name": "RemoteEndpointRewrite"
                            }
                        ],
                        "name": "dynamic_endpoints",
                        "display": "Dynamic Endpoints"
                    },
                    {
                        "member": [
                            {
                                "name": "WSRMEnabled"
                            },
                            {
                                "name": "WSRMSequenceExpiration"
                            },
                            {
                                "name": "WSRMAAAPolicy"
                            },
                            {
                                "name": "WSRMDestinationAcceptCreateSequence"
                            },
                            {
                                "name": "WSRMDestinationMaximumSequences"
                            },
                            {
                                "name": "WSRMDestinationInOrder"
                            },
                            {
                                "name": "WSRMDestinationMaximumInOrderQueueLength"
                            },
                            {
                                "name": "WSRMDestinationAlwaysAck"
                            },
                            {
                                "name": "WSRMDestinationAcceptOffers"
                            },
                            {
                                "name": "WSRMFrontForce"
                            },
                            {
                                "name": "WSRMBackForce"
                            },
                            {
                                "name": "WSRMBackCreateSequence"
                            },
                            {
                                "name": "WSRMFrontCreateSequence"
                            },
                            {
                                "name": "WSRMSourceMakeOffer"
                            },
                            {
                                "name": "WSRMUsesSequenceSSL"
                            },
                            {
                                "name": "WSRMFrontAcksTo"
                            },
                            {
                                "name": "WSRMBackAcksTo"
                            },
                            {
                                "name": "WSRMSourceMaximumSequences"
                            },
                            {
                                "name": "WSRMSourceRetransmissionInterval"
                            },
                            {
                                "name": "WSRMSourceExponentialBackoff"
                            },
                            {
                                "name": "WSRMSourceMaximumRetransmissions"
                            },
                            {
                                "name": "WSRMSourceMaximumQueueLength"
                            },
                            {
                                "name": "WSRMSourceRequestAckCount"
                            },
                            {
                                "name": "WSRMSourceInactivityClose"
                            }
                        ],
                        "on-glass": "WS-ReliableMessaging support is deprecated.",
                        "name": "wsrm",
                        "display": "WS-ReliableMessaging"
                    },
                    {
                        "member": [
                            {
                                "name": "DebugMode"
                            },
                            {
                                "name": "DebugHistory"
                            }
                        ],
                        "name": "Probe",
                        "display": "Probe Settings"
                    }
                ],
                "uri": "services/ws-proxy",
                "actions": {
                    "action": [
                        {
                            "name": "ServiceQuiesce",
                            "parameters": {
                                "parameter": [
                                    {
                                        "name": "type",
                                        "select": "dmObjectClass"
                                    },
                                    {
                                        "name": "name",
                                        "select": "dmObjectName"
                                    },
                                    {
                                        "name": "timeout"
                                    }
                                ]
                            }
                        },
                        {
                            "name": "ServiceUnquiesce",
                            "parameters": {
                                "parameter": [
                                    {
                                        "name": "type",
                                        "select": "dmObjectClass"
                                    },
                                    {
                                        "name": "name",
                                        "select": "dmObjectName"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "summary": "Web Service Proxy",
                "cmd-group": "webservice",
                "cli-alias": "wsgw",
                "properties": {
                    "property": [
                        {
                            "name": "mAdminState",
                            "default": "enabled",
                            "type": {
                                "href": "/mgmt/types/default/dmAdminState"
                            },
                            "label": "Enable administrative state",
                            "summary": "Set the administrative state of this configuration.",
                            "cli-alias": "admin-state",
                            "display": "Administrative state",
                            "hoverhelp": "&lt;p>Set the administrative state of the configuration.&lt;/p>&lt;ul>&lt;li>To make active, set the check box.&lt;/li>&lt;li>To make inactive, clear the check box.&lt;/li>&lt;/ul>",
                            "description": "&lt;p>The administrative state of the configuration.&lt;/p>&lt;ul>&lt;li>To make active, set to enabled.&lt;/li>&lt;li>To make inactive, set to disabled.&lt;/li>&lt;/ul>"
                        },
                        {
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Comments",
                            "cli-alias": "summary",
                            "name": "UserSummary",
                            "summary": "Brief summary for user annotation."
                        },
                        {
                            "name": "Priority",
                            "default": "normal",
                            "type": {
                                "href": "/mgmt/types/default/dmSchedulerPriority"
                            },
                            "summary": "Service scheduling priority",
                            "cli-alias": "priority",
                            "display": "Service Priority",
                            "description": "Control the service scheduling priority. When system resources are in high demand, \"high\" priority services will be favored over lower priority services."
                        },
                        {
                            "name": "FrontProtocol",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "base-class": "SourceProtocolHandler"
                                }
                            },
                            "summary": "Protocol handler",
                            "array": "true",
                            "cli-alias": "front-protocol",
                            "display": "Front Side Protocol",
                            "description": "Specify a protocol handler to determine the network communication protocol, address, port, and other protocol-specific settings."
                        },
                        {
                            "name": "XMLManager",
                            "default": "default",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/XMLManager"
                                }
                            },
                            "required": "true",
                            "summary": "XML manager",
                            "cli-alias": "xml-manager",
                            "display": "XML Manager",
                            "description": "&lt;p>An XML Manager manages the compilation and caching of style sheets, the caching of documents, and provides configuration constraints on the size and parsing depth of documents. You can enable streaming operation by configuring an XML Manager to use a Streaming Compile Option Policy.&lt;/p>&lt;p>Optionally, an XML Manager can employ a User Agent. The User Agent settings, in turn, can affect the behavior of the gateway when communicating with remote servers or with clients when sending back responses.&lt;/p>"
                        },
                        {
                            "description": "&lt;p>Define a URL Rewrite Policy that defines rules for the following rewrite and replacement operations:&lt;/p>&lt;ul>&lt;li>Rewrite the entire URL or a portion of the URL&lt;/li>&lt;li>Replace a header value in a message&lt;/li>&lt;li>Rewrite the HTTP POST body in a message&lt;/li>&lt;/ul>&lt;p>The rewrite rules are applied before document processing. Therefore, the evaluation criteria in the Matching Rule is against the rewritten value.&lt;/p>",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/URLRewritePolicy"
                                }
                            },
                            "summary": "URL rewrite policy",
                            "cli-alias": "urlrewrite-policy",
                            "display": "URL Rewrite Policy",
                            "name": "URLRewritePolicy"
                        },
                        {
                            "name": "SSLClientConfigType",
                            "default": "proxy",
                            "type": {
                                "href": "/mgmt/types/default/dmSSLClientConfigType"
                            },
                            "summary": "Set the TLS profile type to secure connections between the DataPower Gateway and its targets",
                            "cli-alias": "ssl-client-type",
                            "display": "TLS client type",
                            "description": "The TLS profile type to secure connections between the DataPower Gateway and its targets."
                        },
                        {
                            "name": "SSLProxy",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/SSLProxyProfile"
                                }
                            },
                            "summary": "The TLS proxy profile is deprecated. Use a TLS client profile.",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "SSLClientConfigType",
                                    "evaluation": "property-equals",
                                    "value": "client"
                                }
                            },
                            "cli-alias": "ssl",
                            "display": "TLS proxy profile (deprecated)",
                            "description": "The TLS proxy profile with the cryptographic profiles to secure connections."
                        },
                        {
                            "name": "SSLClient",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/SSLClientProfile"
                                }
                            },
                            "summary": "Set the TLS client profile to secure connections between the DataPower Gateway and its targets",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "SSLClientConfigType",
                                    "evaluation": "property-equals",
                                    "value": "proxy"
                                }
                            },
                            "cli-alias": "ssl-client",
                            "display": "TLS client profile",
                            "description": "The TLS client profile to secure connections between the DataPower Gateway and its targets."
                        },
                        {
                            "description": "Specify a credentials list for the service. The credentials specify which keys and certificates are available to support processing. In the absence of credentials, all locally-stored key and certificates are available to the service.",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/CryptoFWCred"
                                }
                            },
                            "summary": "Crypto Credentials list",
                            "cli-alias": "fwcred",
                            "display": "Crypto Credentials",
                            "name": "FWCred"
                        },
                        {
                            "type": {
                                "href": "/mgmt/types/default/dmHeaderInjection"
                            },
                            "array": "true",
                            "cli-alias": "inject",
                            "name": "HeaderInjection",
                            "display": "HTTP Header Injection"
                        },
                        {
                            "type": {
                                "href": "/mgmt/types/default/dmHeaderSuppression"
                            },
                            "array": "true",
                            "cli-alias": "suppress",
                            "name": "HeaderSuppression",
                            "display": "HTTP Header Suppression"
                        },
                        {
                            "description": "Style sheets used in processing policies can take stylesheet parameters. These parameters can be passed in by this object. You can define more than one parameter.",
                            "type": {
                                "href": "/mgmt/types/default/dmStylesheetParameter"
                            },
                            "array": "true",
                            "cli-alias": "parameter",
                            "display": "Stylesheet Parameter",
                            "name": "StylesheetParameters"
                        },
                        {
                            "description": "If a stylesheet parameter is defined without a namespace (or without explicitly specifying the null namespace), then this is the namespace into which the parameter will be assigned.",
                            "default": "http://www.datapower.com/param/config",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "cli-alias": "default-param-namespace",
                            "display": "Default parameter namespace",
                            "name": "DefaultParamNamespace"
                        },
                        {
                            "description": "The namespace in which to put all parameters that are specified in the URL query string.",
                            "default": "http://www.datapower.com/param/query",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "cli-alias": "query-param-namespace",
                            "display": "Query parameter namespace",
                            "name": "QueryParamNamespace"
                        },
                        {
                            "name": "BackendUrl",
                            "type": {
                                "href": "/mgmt/types/default/dmURL"
                            },
                            "label": "URL",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "static-backend"
                                }
                            },
                            "summary": "Backend address and port",
                            "cli-alias": "backend-url",
                            "display": "Backend URL",
                            "hoverhelp": "Specify the URL of the static destination. The format of the URL determines the protocol that is used for communicating with the destination.",
                            "description": "&lt;p>Specify the URL of the static backend server. The URL is parsed to determine the protocol to use.&lt;/p>&lt;p>To use a load balancer, specify the name of an existing Load Balancer Group instead of the address-port pair in the URL.&lt;/p>&lt;p>To use the on demand router, specify http://ODR-LBG instead of the address-port pair in the URL.&lt;/p>&lt;ul>&lt;li>When the URL starts with http://, the DataPower service uses the HTTP protocol.&lt;/li>&lt;li>When the URL starts with https://, the DataPower service uses the HTTPS protocol to secure connections.&lt;/li>&lt;li>When the URL starts with ftp://, the DataPower service uses the FTP protocol. &lt;ul>&lt;li>For a relative path to the login directory of the user, specify the URL in the ftp://user:password@host:port/path format.&lt;/li>&lt;li>For an absolute path to the root directory, specify the URL in the ftp://user:password@host/%2Fpath format. %2F is the URL encoding of a forward slash.&lt;/li>&lt;/ul>&lt;p>Include a password in the URL with caution. The use of user:/password@host results in a server connection. However, with this configuration, the connection could be unable to send multiple commands to the FTP server. For a stable connection, define a basic authentication policy in the user agent. The user agent is in the XML manager associated with the DataPower service.&lt;/p>&lt;/li>&lt;li>When the URL starts with sftp://, the DataPower service uses the SSH FTP protocol. &lt;ul>&lt;li>For an absolute path to the root directory, specify the URL in the sftp://host:port/path format.&lt;/li>&lt;li>For a relative path to the login directory of the user, specify the URL in the sftp://host:port/~/path format.&lt;/li>&lt;/ul>&lt;p>If password authentication is desired, specify the password in the SFTP Client Policy of the User Agent. If Public key authentication is desired, specify the user's private key in the SFTP Client Policy of the User Agent. When no SFTP Client Policy is specified, the Basic-Auth Policy and Pubkey-Auth Policy take effect.&lt;/p>&lt;/li>&lt;li>When the URL starts with dpnfs://, the DataPower service uses the NFS protocol. &lt;ul>&lt;li>For static mounts, specify the URL in the dpnfs://MountObjectName format, where MountObjectName is the name of an existing NFS mount.&lt;/li>&lt;li>For dynamic mounts, specify the URL in the dpnfs://host or dpnfs://host/path format.&lt;/li>&lt;/ul>&lt;/li>&lt;li>When the URL starts with dpmq://, the DataPower service uses the IBM MQ protocol. The IBM MQ Queue Manager that is referenced in the URL must exist in the current application domain. &lt;p>When the URL starts with mq://, the protocol is for a dynamic backend server.&lt;/p>&lt;/li>&lt;li>When the URL starts with dpwasjms://, the DataPower service uses the WebSphere JMS protocol to secure connections. The server object that is referenced in the URL must exist.&lt;/li>&lt;li>When the URL starts with dpims:// or dpimsssl://, the DataPower service uses the IMS protocol. &lt;p>These protocols are available with the IMS feature.&lt;/p>&lt;/li>&lt;li>When the URL starts with dptibems://, the DataPower service uses the TIBCO EMS protocol to secure connections. The server object that is referenced in the URL must exist. &lt;p>When the URL starts with tibems://, the protocol is for a dynamic backend server.&lt;/p>&lt;p>These protocols are available with the TIBCO EMS feature.&lt;/p>&lt;/li>&lt;/ul>&lt;p>For assistance in building a URL, click the appropriate Helper button.&lt;/p>"
                        },
                        {
                            "name": "PropagateURI",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Controls URI propagation",
                            "cli-alias": "propagate-uri",
                            "display": "Propagate URI",
                            "description": "&lt;p>URI propagation is meaningful only when:&lt;/p>&lt;ul>&lt;li>The service uses a static backend.&lt;/li>&lt;li>The service uses a dynamic backend and routing is set with a route with stylesheet (route-action) action. In this case, use dp:set-target() to define the backend server. &lt;p>For the other routing options that are available with route-action and route-set, the URI is absolute.&lt;/p>&lt;/li>&lt;/ul>&lt;p>When set to &lt;b>on&lt;/b>, the service rewrites the URI of the backend URL to the URI in the client request. If the client submits http://host/service and the backend URL is http://server/listener, the URL is rewritten to http://server/service.&lt;/p>&lt;p>If the backend URL employs IBM MQ, TIBCO EMS, or WebSphere JMS, set to &lt;b>off&lt;/b>.&lt;/p>"
                        },
                        {
                            "description": "Specifies a list of Web Services Monitors for the service. Web Services Monitors target Web Services endpoints. Use the Web Services wizard on the Control Panel to supply a WSDL and configure a Monitor for an endpoint. The Monitor collects statistics, establishes count and duration monitors and can take action when thresholds are met or exceeded. A Monitor must be included here to be activated. Note that this is not the same Monitor as a Service Level Monitor (SLM) that can be included in the Processing Policy of this service.",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/WebServiceMonitor"
                                }
                            },
                            "array": "true",
                            "cli-alias": "monitor-service",
                            "display": "Service Monitors",
                            "name": "ServiceMonitors"
                        },
                        {
                            "description": "Specify the count monitors to define messaging events and increment counters each time the event occurs. When a certain threshold is reached, the monitor can either post a notification to a log or block service for a configured amount of time.",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/CountMonitor"
                                }
                            },
                            "array": "true",
                            "cli-alias": "monitor-count",
                            "display": "Count Monitors",
                            "name": "CountMonitors"
                        },
                        {
                            "description": "Specify the duration monitors to watch for events that meet or exceed a configured duration. When a duration is met or exceeded, the monitor can either post a notification to a log or block service for a configured amount of time.",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/DurationMonitor"
                                }
                            },
                            "array": "true",
                            "cli-alias": "monitor-duration",
                            "display": "Duration Monitors",
                            "name": "DurationMonitors"
                        },
                        {
                            "name": "MonitorProcessingPolicy",
                            "default": "terminate-at-first-throttle",
                            "type": {
                                "href": "/mgmt/types/default/dmMonitorProcessingPolicy"
                            },
                            "summary": "Monitors evaluation method",
                            "cli-alias": "monitor-processing-policy",
                            "display": "Monitors evaluation method",
                            "description": "Select the way that the system behaves when more than one monitor is attached to a service."
                        },
                        {
                            "name": "RequestAttachments",
                            "default": "strip",
                            "type": {
                                "href": "/mgmt/types/default/dmAttachmentMode"
                            },
                            "summary": "Attachment processing mode for client requests",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "RequestType",
                                    "evaluation": "property-equals",
                                    "value": "unprocessed"
                                }
                            },
                            "cli-alias": "request-attachments",
                            "display": "Request attachment processing mode",
                            "description": "Select how to treat client requests with attachments. The default is strip."
                        },
                        {
                            "name": "ResponseAttachments",
                            "default": "strip",
                            "type": {
                                "href": "/mgmt/types/default/dmAttachmentMode"
                            },
                            "summary": "Attachment processing mode for server responses",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "ResponseType",
                                    "evaluation": "property-equals",
                                    "value": "unprocessed"
                                }
                            },
                            "cli-alias": "response-attachments",
                            "display": "Response attachment processing mode",
                            "description": "Select how to treat server responses with attachments. The default is strip."
                        },
                        {
                            "name": "RequestAttachmentsFlowControl",
                            "default": "off",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "RequestAttachments",
                                            "evaluation": "property-value-in-list",
                                            "value": "unprocessed"
                                        },
                                        {
                                            "property-name": "RequestType",
                                            "evaluation": "property-does-not-equal",
                                            "value": "unprocessed"
                                        }
                                    ]
                                }
                            },
                            "summary": "Flow control mode for client request attachments",
                            "cli-alias": "request-attachments-flow-control",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "display": "Request attachment flow control mode",
                            "description": "Specify whether to enable or disable flow control for attachments in requests to servers. The default is off."
                        },
                        {
                            "name": "ResponseAttachmentsFlowControl",
                            "default": "off",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "ResponseAttachments",
                                            "evaluation": "property-value-in-list",
                                            "value": "unprocessed"
                                        },
                                        {
                                            "property-name": "ResponseType",
                                            "evaluation": "property-does-not-equal",
                                            "value": "unprocessed"
                                        }
                                    ]
                                }
                            },
                            "summary": "Flow control mode for server response attachments",
                            "cli-alias": "response-attachments-flow-control",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "display": "Response attachment flow control mode",
                            "description": "Specify whether to enable or disable flow control for attachments in responses to clients. The default is off."
                        },
                        {
                            "name": "RootPartNotFirstAction",
                            "default": "process-in-order",
                            "type": {
                                "href": "/mgmt/types/default/dmRootPartNotFirstAction"
                            },
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "RequestAttachments",
                                            "evaluation": "property-does-not-equal",
                                            "value": "streaming"
                                        },
                                        {
                                            "property-name": "ResponseAttachments",
                                            "evaluation": "property-does-not-equal",
                                            "value": "streaming"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "root-part-not-first-action",
                            "display": "Action when required root part is not first",
                            "description": "When streaming MIME messages, the action to take when the root part is not the first part of the message. If the root part must be first (for example to do BSP conformance checking) and the action is set to \"process in order\" the DP device will buffer attachments up to the root."
                        },
                        {
                            "name": "FrontAttachmentFormat",
                            "default": "dynamic",
                            "type": {
                                "href": "/mgmt/types/default/dmGatewayAttachmentFormat"
                            },
                            "summary": "Attachment processing format for client requests",
                            "cli-alias": "front-attachment-format",
                            "display": "Front attachment processing format",
                            "description": "Select how to interpret client requests with attachments."
                        },
                        {
                            "name": "BackAttachmentFormat",
                            "default": "dynamic",
                            "type": {
                                "href": "/mgmt/types/default/dmGatewayAttachmentFormat"
                            },
                            "summary": "Output attachment processing format",
                            "cli-alias": "back-attachment-format",
                            "display": "Back attachment processing format",
                            "description": "Select the attachment output format to backend servers."
                        },
                        {
                            "name": "MIMEFrontHeaders",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Processing of MIME Package Headers",
                            "cli-alias": "mime-front-headers",
                            "display": "Front Side MIME Header Processing",
                            "description": "&lt;p>The body of a message (that is, the payload, independent of any protocol headers) can sometimes contain MIME headers before any preamble and before the first MIME boundary contained in the body of the message. These MIME headers can contain important information not available in the protocol headers, such as the string identifying the MIME boundary. If this property is set to on, then these MIME headers will be processed by the service.&lt;/p>&lt;p>Note that if this is on and there are no MIME headers contained in the message, the device will continue to try and parse the message, using the protocol header information, if available.&lt;/p>&lt;p>When this is off and MIME headers are present in the body of the message, these MIME headers will be considered part of the preamble and not used to parse out the message. If the protocol headers (such as HTTP) indicate the MIME boundaries, the device can parse and process individual attachments. If such information is not available, no attachments can be parsed from the body of the message.&lt;/p>"
                        },
                        {
                            "name": "MIMEBackHeaders",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Processing of MIME Package Headers",
                            "cli-alias": "mime-back-headers",
                            "display": "Back Side MIME Header Processing",
                            "description": "&lt;p>The body of a message (the payload independent of protocol headers) can sometimes contain MIME headers before any preamble and before the first MIME boundary in the body of the message. These MIME headers can contain important information that is not available in the protocol headers, such as a string that identifies the MIME boundary. If this property is set to on, these MIME headers are processed by the service.&lt;/p>&lt;p>When set to on and there are no MIME headers in the message, the device continues to try and parse the message, using the protocol header information, if available.&lt;/p>&lt;p>When set to off and MIME headers are present in the body of the message, these MIME headers are considered part of the preamble and not used to parse the message. If protocol headers, such as HTTP, indicate MIME boundaries, the device can parse and process individual attachments. If such information is not available, no attachments can be parsed from the body of the message.&lt;/p>"
                        },
                        {
                            "description": "Select the desired streaming behavior.",
                            "default": "buffer-until-verification",
                            "type": {
                                "href": "/mgmt/types/default/dmQuarantineMode"
                            },
                            "cli-alias": "stream-output-to-back",
                            "display": "Stream Output to Back",
                            "name": "StreamOutputToBack"
                        },
                        {
                            "description": "Select the desired streaming behavior.",
                            "default": "buffer-until-verification",
                            "type": {
                                "href": "/mgmt/types/default/dmQuarantineMode"
                            },
                            "cli-alias": "stream-output-to-front",
                            "display": "Stream Output to Front",
                            "name": "StreamOutputToFront"
                        },
                        {
                            "name": "MaxMessageSize",
                            "default": 0,
                            "cli-alias": "max-message-size",
                            "maximum": 2097151,
                            "summary": "The maximum allowable size in kilobytes of a message",
                            "minimum": 0,
                            "units": "KB",
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "Maximum Message Size",
                            "description": "&lt;p>Specifies the maximum allowable size in kilobytes of a message. Enter a value in the range 0 - 2097151. The default value is 0. A value of 0 specifies that no limit is enforced, and the message can be of unlimited size.&lt;/p>&lt;p>The maximum message size limit applies to JSON, SOAP, XML, and non-XML messages. If the message type is pass-through, no limit is enforced.&lt;/p>"
                        },
                        {
                            "name": "GatewayParserLimits",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Use service-defined parser limits instead of XML Manager parser limits.",
                            "cli-alias": "gateway-parser-limits",
                            "display": "Parser limits",
                            "description": "Use the server-defined parser limits instead of the parser limits in the XML manager for this DataPower service. Service-defined limits override XML Manager limits."
                        },
                        {
                            "name": "ParserLimitsElementDepth",
                            "default": 512,
                            "required-when": {
                                "condition": {
                                    "property-name": "GatewayParserLimits",
                                    "evaluation": "property-equals",
                                    "value": "on"
                                }
                            },
                            "summary": "XML parser maximum element depth",
                            "cli-alias": "element-depth",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmUInt16"
                            },
                            "display": "XML Element Depth",
                            "description": "Defines the maximum depth of element nesting in XML parser. If any of the parser limits are set in the DataPower service, they will override those on the XML Manager."
                        },
                        {
                            "name": "ParserLimitsAttributeCount",
                            "default": 128,
                            "required-when": {
                                "condition": {
                                    "property-name": "GatewayParserLimits",
                                    "evaluation": "property-equals",
                                    "value": "on"
                                }
                            },
                            "summary": "XML parser maximum attribute count",
                            "cli-alias": "attribute-count",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmUInt16"
                            },
                            "display": "XML Attribute Count",
                            "description": "Defines the maximum number of attributes of a given element. If any of the parser limits are set in the service, they will override those on the XML Manager."
                        },
                        {
                            "name": "ParserLimitsMaxNodeSize",
                            "default": 33554432,
                            "required-when": {
                                "condition": {
                                    "property-name": "GatewayParserLimits",
                                    "evaluation": "property-equals",
                                    "value": "on"
                                }
                            },
                            "maximum": 4294967295,
                            "summary": "XML parser maximum node size",
                            "cli-alias": "max-node-size",
                            "minimum": 1024,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "units": "bytes",
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "XML Maximum Node Size",
                            "description": "Defines the maximum size any one node may consume. The default is 32 MB. Sizes which are powers of two result in the best performance. If any of the parser limits are set in the DataPower service, they will override those on the XML Manager. Although you set an explicit value, the DataPower Gateway uses a value that is the rounded-down, largest power of two that is smaller than the defined value."
                        },
                        {
                            "name": "ParserLimitsForbidExternalReferences",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "XML parser forbid external references toggle",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "cli-alias": "forbid-external-references",
                            "display": "XML Forbid External References",
                            "description": "Defines if the XML parser will abort when an input document specifies to resolve an external reference such as an external entity or external DTD definition."
                        },
                        {
                            "name": "ParserLimitsExternalReferences",
                            "default": "forbid",
                            "required-when": {
                                "condition": {
                                    "property-name": "GatewayParserLimits",
                                    "evaluation": "property-equals",
                                    "value": "on"
                                }
                            },
                            "summary": "Special handling for external references in XML",
                            "cli-alias": "external-references",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmExternalRefHandling"
                            },
                            "display": "XML External Reference Handling",
                            "description": "Select the special handling for input documents that contain external references, such as an external entity or external DTD definition."
                        },
                        {
                            "name": "ParserLimitsMaxPrefixes",
                            "default": 1024,
                            "required-when": {
                                "condition": {
                                    "property-name": "GatewayParserLimits",
                                    "evaluation": "property-equals",
                                    "value": "on"
                                }
                            },
                            "summary": "XML parser maximum distinct prefixes",
                            "cli-alias": "max-prefixes",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "XML Maximum Distinct Prefixes",
                            "description": "Enter an integer that defines the maximum number of distinct XML namespace prefixes in a document. This limit counts multiple prefixes defined for the same namespace, but does not count multiple namespaces defined in different parts of the input document under a single prefix. Enter a value in the range 0 - 262143. The default value is 1024. A value of 0 indicates that the limit is 1024."
                        },
                        {
                            "name": "ParserLimitsMaxNamespaces",
                            "default": 1024,
                            "required-when": {
                                "condition": {
                                    "property-name": "GatewayParserLimits",
                                    "evaluation": "property-equals",
                                    "value": "on"
                                }
                            },
                            "summary": "XML parser maximum distinct namespaces",
                            "cli-alias": "max-namespaces",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "XML Maximum Distinct Namespaces",
                            "description": "Enter an integer that defines the maximum number of distinct XML namespace URIs in a document. This limit counts all XML namespaces, regardless of how many prefixes are used to declare them. Enter a value in the range 0 - 65535. The default value is 1024. A value of 0 indicates that the limit is 1024."
                        },
                        {
                            "name": "ParserLimitsMaxLocalNames",
                            "default": 60000,
                            "required-when": {
                                "condition": {
                                    "property-name": "GatewayParserLimits",
                                    "evaluation": "property-equals",
                                    "value": "on"
                                }
                            },
                            "summary": "XML parser maximum distinct local names",
                            "cli-alias": "max-local-names",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "XML Maximum Distinct Local Names",
                            "description": "Enter an integer that defines the maximum number of distinct XML local names in a document. This limit counts all local names, independent of the namespaces they are associated with. Enter a value in the range 0 - 1048575. The default value is 60000. A value of 0 indicates that the limit is 60000."
                        },
                        {
                            "name": "ParserLimitsAttachmentByteCount",
                            "default": 2000000000,
                            "required-when": {
                                "condition": {
                                    "property-name": "GatewayParserLimits",
                                    "evaluation": "property-equals",
                                    "value": "on"
                                }
                            },
                            "summary": "Maximum byte count per attachment",
                            "cli-alias": "attachment-byte-count",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "Attachment Byte Count Limit",
                            "description": "Defines the maximum number of bytes allowed in any single attachment. Attachments that exceed this size will result in a failure of the whole transaction. If this value is 0, no limit is enforced."
                        },
                        {
                            "name": "ParserLimitsAttachmentPackageByteCount",
                            "default": 0,
                            "required-when": {
                                "condition": {
                                    "property-name": "GatewayParserLimits",
                                    "evaluation": "property-equals",
                                    "value": "on"
                                }
                            },
                            "summary": "Maximum byte count for all parts",
                            "cli-alias": "attachment-package-byte-count",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "Attachment Package Byte Count Limit",
                            "description": "Defines the maximum number of bytes allowed for all parts of an attachment package, including the root part. Attachment packages that exceed this size will result in a failure of the whole transaction. If this value is 0, no limit is enforced."
                        },
                        {
                            "name": "DebugMode",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmDebugMode"
                            },
                            "summary": "Controls transaction diagnostic mode",
                            "cli-alias": "debug-mode",
                            "display": "Probe setting",
                            "description": "&lt;p>Select the diagnostic mode for processing policies. When enabled, you can view details about the state of variables and contexts for a captured transaction in the probe. The default value is &lt;tt>off&lt;/tt> .&lt;/p>&lt;p>Transaction diagnostic mode is not intended for use in a production environment. Transaction diagnostic mode consumes significant resources that can slow down transaction processing.&lt;/p>"
                        },
                        {
                            "name": "DebugHistory",
                            "default": 25,
                            "required-when": {
                                "condition": {
                                    "property-name": "DebugMode",
                                    "evaluation": "property-equals",
                                    "value": "on"
                                }
                            },
                            "maximum": 250,
                            "summary": "Set the number of records for transaction diagnostic mode in the probe",
                            "cli-alias": "debug-history",
                            "minimum": 10,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "Transaction History",
                            "description": "Set the number of records for transaction diagnostic mode in the probe. Enter a value in the range 10 - 250. The default value is 25."
                        },
                        {
                            "name": "DebugTrigger",
                            "type": {
                                "href": "/mgmt/types/default/dmMSDebugTriggerType"
                            },
                            "summary": "Probe Triggers",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "DebugMode",
                                    "evaluation": "property-does-not-equal",
                                    "value": "on"
                                }
                            },
                            "array": "true",
                            "cli-alias": "debug-trigger",
                            "display": "Probe Triggers",
                            "description": "The probe captures transactions that meet one or more of the conditions defined by the triggers. These triggers examine the direction or type of the message flow and examine the message for an XPath expression match. When a message meets one of these conditions, the transaction is captured in diagnostics mode and becomes part of the list of transactions that can be viewed."
                        },
                        {
                            "name": "FlowControl",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enables flow control on message bodies when in streaming mode.",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "RequestType",
                                            "evaluation": "property-value-in-list",
                                            "value": [
                                                "soap",
                                                "xml"
                                            ]
                                        },
                                        {
                                            "property-name": "ResponseType",
                                            "evaluation": "property-value-in-list",
                                            "value": [
                                                "soap",
                                                "xml"
                                            ]
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "flowcontrol",
                            "display": "Flow Control",
                            "description": "&lt;p>Use flow control to manage the transmission of large files when the front side and back end have different latencies and throughput while in streaming mode. This option is available when the request type and the response type are Pass-Thru or Non-XML. By default, flow control is disabled.&lt;/p>&lt;p>Note that the streaming behavior for output to back and output to front must be set to Stream Messages. Also, if either the front side or the back end will use the HTTP(S) protocol, allow chunked uploads must be set to on.&lt;/p>"
                        },
                        {
                            "name": "SOAPSchemaURL",
                            "default": "store:///schemas/soap-envelope.xsd",
                            "type": {
                                "href": "/mgmt/types/default/dmURL"
                            },
                            "summary": "Specifies which W3C XML Schema will be used to validate SOAP documents",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "RequestType",
                                            "evaluation": "property-does-not-equal",
                                            "value": "soap"
                                        },
                                        {
                                            "property-name": "ResponseType",
                                            "evaluation": "property-does-not-equal",
                                            "value": "soap"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "soap-schema-url",
                            "display": "SOAP Schema URL",
                            "description": "When a firewall is in SOAP mode, either on the request or response side, it will validate the incoming messages against a W3C Schema that defines what a SOAP message is supposed to look like. It is possible to customize which schema is used on a per-firewall basis by changing this property; this can be used to accommodate non-standard configurations or other special cases."
                        },
                        {
                            "name": "FrontTimeout",
                            "default": 120,
                            "cli-alias": "front-timeout",
                            "required": "true",
                            "maximum": 86400,
                            "summary": "Idle time a front side connection is allowed before being canceled during a transaction.",
                            "minimum": 1,
                            "units": "seconds",
                            "type": {
                                "href": "/mgmt/types/default/dmTimeInterval"
                            },
                            "display": "Front Side Timeout",
                            "description": "Controls the amount of time a front side client connection can be idle before being abandoned within a transaction."
                        },
                        {
                            "name": "BackTimeout",
                            "default": 120,
                            "cli-alias": "back-timeout",
                            "required": "true",
                            "maximum": 86400,
                            "summary": "Idle time a back side connection is allowed before being canceled during a transaction.",
                            "minimum": 1,
                            "units": "seconds",
                            "type": {
                                "href": "/mgmt/types/default/dmTimeInterval"
                            },
                            "display": "Back Side Timeout",
                            "description": "Controls the amount of time a back side client connection can be idle before being abandoned within a transaction."
                        },
                        {
                            "name": "FrontPersistentTimeout",
                            "default": 180,
                            "cli-alias": "front-persistent-timeout",
                            "required": "true",
                            "maximum": 86400,
                            "summary": "Maximum Idle Time Between Front Persistent Uses",
                            "minimum": 0,
                            "units": "seconds",
                            "type": {
                                "href": "/mgmt/types/default/dmTimeInterval"
                            },
                            "display": "Front Persistent Timeout",
                            "description": "Specify the maximum number of seconds that the service maintains an idle persistent TCP connection on the front side. Enter a value in the range 0 - 86400. The default value is 180."
                        },
                        {
                            "name": "BackPersistentTimeout",
                            "default": 180,
                            "cli-alias": "back-persistent-timeout",
                            "required": "true",
                            "maximum": 86400,
                            "summary": "Maximum maximum inter-transaction idle time for service-to-server connections",
                            "minimum": 0,
                            "units": "seconds",
                            "type": {
                                "href": "/mgmt/types/default/dmTimeInterval"
                            },
                            "display": "Back Persistent Timeout",
                            "description": "&lt;p>Specify the maximum inter-transaction idle time in seconds for service-to-server connections. Enter a value in the range 0 - 86400. The default value is 180.&lt;/p>&lt;p>This value is the maximum idle time between the completion of a TCP transaction and the initiation of a new TCP transaction on this connection. If the specified idle time is exceeded, the connection is torn down.&lt;/p>&lt;p>&lt;b>Note:&lt;/b> For HTTP GET and HEAD requests, the service attempts the connection again after the specified value, Therefore, the actual timeout is twice the specified value.&lt;/p>&lt;p>An idle TCP connection can remain in the idle state for 20 seconds after the expiration of the persistence timer.&lt;/p>"
                        },
                        {
                            "name": "IncludeResponseTypeEncoding",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Include the character set encoding in any content-type headers",
                            "cli-alias": "include-content-type-encoding",
                            "display": "Include charset in response-type",
                            "description": "Specify whether to enable or disable including the character set encoding in any content-type header or description produced. For example, when sending a UTF-8 encoded XML document: If this property is disabled, 'text/xml' will be sent. If this property is enabled, 'text/xml; charset=UTF-8' will be sent."
                        },
                        {
                            "name": "BackHTTPVersion",
                            "default": "HTTP/1.1",
                            "type": {
                                "href": "/mgmt/types/default/dmHTTPVersion"
                            },
                            "summary": "Server-side HTTP version",
                            "cli-alias": "http-server-version",
                            "display": "HTTP Version to Server",
                            "description": "Select the HTTP version to use on the server-side connection. The default is HTTP 1.1."
                        },
                        {
                            "name": "PersistentConnections",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enable/Disable persistent connections on backside",
                            "cli-alias": "persistent-connections",
                            "display": "Persistent Connections",
                            "description": "Specify whether to enable or disable persistent connections where appropriate on back side."
                        },
                        {
                            "name": "LoopDetection",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enable/Disable gateway loop detection",
                            "cli-alias": "loop-detection",
                            "display": "Loop Detection",
                            "description": "Some protocols provide a loop detection mechanism that can be used to detect gateway loops. This is a good policy, but it can cause each gateway to be publicly recorded in the transmitted message, which might be considered an information leak."
                        },
                        {
                            "name": "DoHostRewriting",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enable or disable rewriting of host names when accessing remote server",
                            "cli-alias": "host-rewriting",
                            "display": "Rewrite Host Names when Redirecting",
                            "description": "Some protocols have distinct name-based elements, separate from the URL, to demultiplex. HTTP uses the &lt;tt>Host&lt;/tt> header for this purposes. If this feature is enabled, the remote server will receive a request that reflects the final route; otherwise, it will receive a request that reflects the information as it arrived at the DataPower service. Web servers that issue redirects might want to disable this feature, as they often depend on the &lt;tt>Host&lt;/tt> header for the value of their redirect."
                        },
                        {
                            "name": "DoChunkedUpload",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enabled/Disable HTTP/1.1 Chunked Request Bodies",
                            "cli-alias": "chunked-uploads",
                            "display": "Allow Chunked Uploads",
                            "description": "Specify whether to enable (on) or disable (off) the ability to send Content-Type Chunked Encoded documents to the back end server. When the device employs the HTTP/1.1 protocol, the body of the document can be delimited by either Content-Length or chunked encodings. While all servers will understand how to interpret Content-Length, many applications will fail to understand Chunked encoding. For this reason, Content-Length is the standard method used. However doing so interferes with the ability of the device to fully stream. To stream full documents towards the back end server, this property should be turned on. However, the back end server must be RFC 2616 compatible, because this feature cannot be renegotiated at run time, unlike all other HTTP/1.1 features which can be negotiated down at runtime if necessary. This property can also be enabled by configuring a User Agent to enable it on a per-URL basis."
                        },
                        {
                            "name": "ProcessHTTPErrors",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Whether to continue processing after a non-successful response from the backend",
                            "cli-alias": "process-http-errors",
                            "display": "Process Backend Errors",
                            "description": "&lt;p>In some cases, the backend server returns a response code that indicates an error.&lt;/p>&lt;p>When enabled, the default, the service ignores the error condition and processes the response rule. If successful, returns the successful response to the client.&lt;/p>&lt;p>When disabled, the DataPower service notices the error condition and processes the error rule. If successful, propagates the response code from the backend server to the client.&lt;/p>"
                        },
                        {
                            "name": "HTTPClientIPLabel",
                            "default": "X-Client-IP",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "HTTP header label containing client IP address",
                            "cli-alias": "http-client-ip-label",
                            "display": "HTTP Client IP Label",
                            "description": "Enter the name of an HTTP Header to read to determine the IP address of the requesting client (for example X-Forwarded-For). This value defaults to X-Client-IP."
                        },
                        {
                            "name": "HTTPLogCorIDLabel",
                            "default": "X-Global-Transaction-ID",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "HTTP header label containing global transaction ID",
                            "cli-alias": "http-global-tranID-label",
                            "display": "HTTP Global Transaction ID Label",
                            "description": "Enter the name of an HTTP Header to read to determine the global transaction ID for chained services. This value defaults to X-Global-Transaction-ID."
                        },
                        {
                            "description": "Enter the name of an HTTP Header to use rather than a Client IP address when load balancing traffic to the back end servers using a hash algorithm. The value of the header identified here will be used to calculate a hash rather than the IP address. If blank, the client IP address will be used for hash calculation.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Header for Load Balancer Hash Algorithm",
                            "cli-alias": "load-balancer-hash-header",
                            "display": "Load Balancer Hash Header",
                            "name": "LoadBalancerHashHeader"
                        },
                        {
                            "description": "Enables in-order (serial) processing of queue-based messages during different parts of transactions through the service. When enabled the service respects the sequential order of the messages when writing them to queues.",
                            "type": {
                                "href": "/mgmt/types/default/dmGatewayInOrderMode"
                            },
                            "summary": "Enables in-order (serial) message processing",
                            "cli-alias": "inorder-mode",
                            "display": "Message Processing Modes",
                            "name": "InOrderMode"
                        },
                        {
                            "name": "WSAMode",
                            "default": "sync2sync",
                            "type": {
                                "href": "/mgmt/types/default/dmWSAModeType"
                            },
                            "summary": "Web Services Addressing Mode",
                            "cli-alias": "wsa-mode",
                            "display": "WS-Addressing Mode",
                            "description": "Select the mode of Web Services Addressing (WS-Addressing). The mode specifies the WS-Addressing support that is provided by the DataPower service. The level of support is determined by the associated client and server devices. Support for a particular mode of WS-Addressing does not preclude simultaneous support for traditional addressing formats. WS-Addressing requires SOAP messages. The default is No WS-Addressing."
                        },
                        {
                            "name": "WSARequireAAA",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Require that an AAA policy successfully execute before establishing any new channels specified by the message.",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSAMode",
                                            "evaluation": "property-value-not-in-list",
                                            "value": [
                                                "wsa2sync",
                                                "wsa2wsa",
                                                "sync2wsa"
                                            ]
                                        },
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "dynamic-backend"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "wsa-require-aaa",
                            "display": "Require AAA for WS-Addressing trust",
                            "description": "&lt;p>Require successful execution of an AAA policy before trusting the WS-Addressing &lt;tt>To&lt;/tt> SOAP header from the client to select the server URL to connect to.&lt;/p>&lt;p>This property is relevant when WS-Addressing is enabled and the type is a dynamic-backend (dynamic routing enabled). In this case, the &lt;tt>To&lt;/tt> SOAP header determines the default URL for connecting to the remote server.&lt;/p>&lt;p>When this property is off and the type is dynamic-backend, clients can route SOAP messages to &lt;em>any&lt;/em> remote server for this DataPower service, which can be a significant security risk. For this reason, the default is on.&lt;/p>&lt;p>When this property is on and the type is dynamic-backend, the follow behavior occurs based on the AAA policy. &lt;ul>&lt;li>If the AAA policy runs successfully, the &lt;tt>To&lt;/tt> address will be accepted.&lt;/li>&lt;li>If the AAA Policy fails (but continues processing) the back-end address determined from configuration will be used.&lt;/li>&lt;li>If there is no AAA Policy configured (or executed) in the processing rules, WS-Addressing processing will proceed as if the AAA Policy had executed and failed.&lt;/li>&lt;/ul>&lt;/p>"
                        },
                        {
                            "name": "WSARewriteReplyTo",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/URLRewritePolicy"
                                }
                            },
                            "summary": "Rewrite WS Addressing Reply To Header",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSAMode",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "wsa2sync",
                                        "wsa2wsa"
                                    ]
                                }
                            },
                            "cli-alias": "wsa-replyto-rewrite",
                            "display": "Rewrite WS Addressing Reply To Header",
                            "description": "&lt;p>Identifies the URL Rewrite Policy used to rewrite the contents of the WS-Addressing &lt;tt>ReplyTo&lt;/tt> header of the SOAP request, if present.&lt;/p>&lt;p>Use this property to modify the contents of an incoming WS-Addressing &lt;tt>ReplyTo&lt;/tt> SOAP header that identifies the recipient endpoint of response messages. This typically will be used to change the &lt;tt>ReplyTo&lt;/tt> address to one that will send the response to this service.&lt;/p>&lt;p>This property is relevant when the WS-Addressing Mode is WS-Addressing to Traditional or WS-Addressing to WS-Addressing.&lt;/p>&lt;p>Use the values-list to select the URL Rewrite Policy used to manipulate the contents of the original &lt;tt>ReplyTo&lt;/tt> header.&lt;/p>"
                        },
                        {
                            "name": "WSARewriteFaultTo",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/URLRewritePolicy"
                                }
                            },
                            "summary": "Rewrite WS Addressing Fault To Header",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSAMode",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "wsa2sync",
                                        "wsa2wsa"
                                    ]
                                }
                            },
                            "cli-alias": "wsa-faultto-rewrite",
                            "display": "Rewrite WS Addressing Fault To Header",
                            "description": "&lt;p>Identifies the URL Rewrite Policy used to rewrite the contents of the WS-Addressing &lt;tt>FaultTo&lt;/tt> header of the SOAP request, if present.&lt;/p>&lt;p>You can use this property to modify the contents of an incoming WS-Addressing &lt;tt>FaultTo&lt;/tt> SOAP header that identifies the recipient endpoint of fault messages. This typically will be used to change the &lt;tt>FaultTo&lt;/tt> address to one that will send the response to this service.&lt;/p>&lt;p>This property is relevant when the WS-Addressing Mode is WS-Addressing to Traditional, or WS-Addressing to WS-Addressing.&lt;/p>&lt;p>Use the values-list to specify the URL Rewrite Policy used to manipulate the contents of the original &lt;tt>FaultTo&lt;/tt> header.&lt;/p>"
                        },
                        {
                            "name": "WSARewriteTo",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/URLRewritePolicy"
                                }
                            },
                            "summary": "Rewrite WS Addressing To Header",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSAMode",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "wsa2sync",
                                        "wsa2wsa"
                                    ]
                                }
                            },
                            "cli-alias": "wsa-to-rewrite",
                            "display": "Rewrite WS Addressing To Header",
                            "description": "&lt;p>Identifies the URL Rewrite Policy used to rewrite the contents of the WS-Addressing &lt;tt>To&lt;/tt> header of the SOAP request, if present.&lt;/p>&lt;p>You can use this property to modify the contents of an incoming WS-Addressing &lt;tt>To&lt;/tt> SOAP header that identifies the message destination. If dynamic routing is not in use, this will typically be used to change the &lt;tt>To&lt;/tt> header from an address that matches the front side of this service to one that addresses the back-side server.&lt;/p>&lt;p>If the &lt;tt>To&lt;/tt> header does not match any of the rewrite rules and the type is not dynamic-backend, the &lt;tt>To&lt;/tt> will be based on the backend URL.&lt;/p>&lt;p>This property is relevant when the WS-Addressing Mode is WS-Addressing to Traditional, or WS-Addressing to WS-Addressing.&lt;/p>&lt;p>Use the values-list to specify the URL Rewrite Policy used to manipulate the contents of the original &lt;tt>To&lt;/tt> header.&lt;/p>"
                        },
                        {
                            "name": "WSAStrip",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Remove incoming WSA headers before forwarding",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSAMode",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "wsa2sync",
                                        "sync2wsa"
                                    ]
                                }
                            },
                            "cli-alias": "wsa-strip-headers",
                            "display": "Strip WS-Addressing Headers",
                            "description": "&lt;p>Control whether to remove WS-Addressing headers when sending a request or response without using WS-Addressing.&lt;/p>&lt;ul>&lt;li>When on,the default setting, the WS-Addressing headers ( &lt;tt>To&lt;/tt> , &lt;tt>From&lt;/tt> , &lt;tt>ReplyTo&lt;/tt> , &lt;tt>FaultTo&lt;/tt> , &lt;tt>Action&lt;/tt> , &lt;tt>MessageID&lt;/tt> , and &lt;tt>RelatesTo&lt;/tt> ) are stripped when sending synchronously.&lt;/li>&lt;li>When off, the WS-Addressing headers will not be removed.&lt;/li>&lt;/ul>&lt;p>This property is relevant when the WS-Addressing Mode is WS-Addressing to Traditional, or Traditional to WS-Addressing.&lt;/p>&lt;p>If the WS-Addressing mode is WS-Addressing to Traditional and this is on, WS-Addressing headers are stripped from incoming client SOAP requests before they are sent to the server.&lt;/p>&lt;p>If the WS-Addressing mode is Traditional to WS-Addressing and this is on, WS-Addressing headers are stripped from incoming server SOAP responses before they are sent to the client.&lt;/p>"
                        },
                        {
                            "name": "WSADefaultReplyTo",
                            "default": "http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous",
                            "type": {
                                "href": "/mgmt/types/default/dmURL"
                            },
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSAMode",
                                            "evaluation": "property-value-not-in-list",
                                            "value": [
                                                "wsa2sync",
                                                "wsa2wsa"
                                            ]
                                        },
                                        {
                                            "property-name": "WSAForce",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "wsa-default-replyto",
                            "display": "Default WS-Addressing Reply-To",
                            "description": "&lt;p>Provide a default value of the WS-Addressing &lt;tt>ReplyTo&lt;/tt> SOAP header in request messages when Force Incoming WS-Addressing is enabled.&lt;/p>&lt;p>Because the WS-Addressing specifications do not require the inclusion of the &lt;tt>ReplyTo&lt;/tt> header, the service might receive WS-Addressing messages that do not contain a &lt;tt>ReplyTo&lt;/tt> header, or that contain the header with no value.&lt;/p>&lt;p>If the SOAP request has no WS-Addressing &lt;tt>ReplyTo&lt;/tt> or &lt;tt>From&lt;/tt> SOAP header, this will provide a default value of the &lt;tt>ReplyTo&lt;/tt> header. That header identifies the recipient endpoint of the response message.&lt;/p>&lt;p>When this happens, the service modifies the Web Service Addressing message to include a &lt;tt>ReplyTo&lt;/tt> header that contains the URL value specified by this property.&lt;/p>&lt;p>If a default recipient endpoint of response messages is not explicitly identified by this command, the default value is &lt;tt>http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous&lt;/tt> .&lt;/p>&lt;p>This property is relevant when the WS-Addressing Mode is WS-Addressing to Traditional or Traditional to WS-Addressing and Force Incoming WS-Addressing is enabled.&lt;/p>"
                        },
                        {
                            "name": "WSADefaultFaultTo",
                            "default": "http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous",
                            "type": {
                                "href": "/mgmt/types/default/dmURL"
                            },
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSAMode",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "wsa2sync",
                                        "wsa2wsa"
                                    ]
                                }
                            },
                            "cli-alias": "wsa-default-faultto",
                            "display": "Default WS-Addressing Fault-To",
                            "description": "&lt;p>Provide a default value of the WS-Addressing &lt;tt>FaultTo&lt;/tt> SOAP header in request messages.&lt;/p>&lt;p>Because the WS-Addressing specifications do not require the inclusion of the &lt;tt>FaultTo&lt;/tt> header, the service might receive WS-Addressing requests that do not contain a &lt;tt>FaultTo&lt;/tt> SOAP header, or that contain the header with no value.&lt;/p>&lt;p>If the SOAP request has no WS-Addressing &lt;tt>FaultTo&lt;/tt> , &lt;tt>ReplyTo&lt;/tt> , or &lt;tt>From&lt;/tt> SOAP header, this will provide a default value of the &lt;tt>FaultTo&lt;/tt> header. That header identifies the recipient endpoint of an error message.&lt;/p>&lt;p>If a default recipient endpoint of fault messages is not explicitly identified by this command, the default value is &lt;tt>http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous&lt;/tt>&lt;/p>&lt;p>This property is relevant when the WS-AddressingMode is WS-Addressing to Traditional, or Traditional to WS-Addressing.&lt;/p>"
                        },
                        {
                            "name": "WSAForce",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSAMode",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "wsa2sync",
                                        "wsa2wsa"
                                    ]
                                }
                            },
                            "cli-alias": "wsa-force",
                            "display": "Force Insertion of WS-Addressing Headers",
                            "description": "&lt;p>Force the insertion of WS-Addressing headers into traditionally addressed SOAP requests.&lt;/p>&lt;p>The service generally handles a mix of Web services addressed and traditionally addressed messages. You can use this property to ensure that all messages use WS-Addressing.&lt;/p>&lt;p>When enabled (on), the DataPower service converts traditionally addressed messages to the WS-Addressing format through the addition of &lt;tt>To&lt;/tt> , &lt;tt>ReplyTo&lt;/tt> , &lt;tt>FaultTo&lt;/tt> , and &lt;tt>MessageID&lt;/tt> WS-Addressing headers to the traditionally addressed message.&lt;/p>&lt;p>The &lt;tt>ReplyTo&lt;/tt> header will be that configured in the Default WS-Addressing Reply-To property. The &lt;tt>FaultTo&lt;/tt> header will be that configured in the Default WS-Addressing Fault-To property.&lt;/p>&lt;p>When disabled (off, the default), there is no insertion of WS-Addressing headers into traditionally addressed messages.&lt;/p>&lt;p>This property is relevant when the WS-Addressing Mode is WS-Addressing to Traditional, or Traditional to WS-Addressing.&lt;/p>"
                        },
                        {
                            "name": "WSAGenStyle",
                            "default": "sync",
                            "type": {
                                "href": "/mgmt/types/default/dmWSAOriginatedRequestType"
                            },
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSAMode",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "sync2wsa",
                                        "wsa2wsa"
                                    ]
                                }
                            },
                            "cli-alias": "wsa-genstyle",
                            "display": "WS-Addressing Message Generation Pattern",
                            "description": "&lt;p>Select the message exchange model between the DataPower service and a target server that uses WS-Addressing. The default is Synchronous.&lt;/p>&lt;p>This property is relevant when the WS-Addressing Mode is Traditional to WS-Addressing or WS-Addressing to WS-Addressing.&lt;/p>"
                        },
                        {
                            "name": "WSAHTTPAsyncResponseCode",
                            "default": 204,
                            "required-when": {
                                "condition": {
                                    "property-name": "WSAMode",
                                    "evaluation": "property-value-in-list",
                                    "value": [
                                        "wsa2sync",
                                        "wsa2wsa",
                                        "sync2wsa"
                                    ]
                                }
                            },
                            "maximum": 599,
                            "cli-alias": "wsa-http-async-response-code",
                            "minimum": 200,
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSAMode",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "wsa2sync",
                                        "wsa2wsa",
                                        "sync2wsa"
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmUInt16"
                            },
                            "display": "Asynchronous HTTP ResponseCode",
                            "description": "&lt;p>Specify the HTTP Response Code sent to a client device prior to transmitting the actual asynchronous server response.&lt;/p>&lt;p>If the server response to an HTTP client request is asynchronous, the DataPower service must close the original HTTP client channel with a valid response code. After the channel is closed, the DataPower service forwards the server-generated response or fault message to the client over a new channel.&lt;/p>&lt;p>Enter a value in the range 200 - 599. The default value is 204, which specifies the HTTP response code used to close the original client channel. While 204 is the default, 202 is more commonly required by current standards.&lt;/p>&lt;p>This property is relevant when the WS-Addressing mode is either Traditional to WS-Addressing or WS-Addressing to WS-Addressing.&lt;/p>"
                        },
                        {
                            "name": "WSABackProtocol",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "WSAGenStyle",
                                            "evaluation": "property-equals",
                                            "value": "async"
                                        },
                                        {
                                            "property-name": "WSAMode",
                                            "evaluation": "property-value-in-list",
                                            "value": [
                                                "wsa2sync",
                                                "wsa2wsa",
                                                "sync2wsa"
                                            ]
                                        }
                                    ]
                                }
                            },
                            "summary": "Specify the protocol handler that receives asynchronous server responses.",
                            "cli-alias": "wsa-back-protocol",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSAMode",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "wsa2sync",
                                        "wsa2wsa",
                                        "sync2wsa"
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "base-class": "SourceProtocolHandler"
                                }
                            },
                            "display": "WS-Addressing Reply Point",
                            "description": "&lt;p>Specify the protocol handler that receives asynchronous server responses and forward the response to the original client. This handler must be a protocol handler on which this DataPower service already listens.&lt;/p>&lt;p>The protocol handler specified by this property can be programmatically overridden by the &lt;tt>var://context/__WSA_REQUEST/replyto&lt;/tt> variable, which will change the WS-Addressing &lt;tt>ReplyTo&lt;/tt> header on the request to the server.&lt;/p>&lt;p>This property is relevant when the WS-Addressing mode is either Traditional to WS-Addressing or WS-Addressing to WS-Addressing and the message generation pattern is asynchronous.&lt;/p>"
                        },
                        {
                            "name": "WSATimeout",
                            "default": 120,
                            "cli-alias": "wsa-timeout",
                            "maximum": 4000000,
                            "summary": "Asynchronous timeout value",
                            "minimum": 1,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSAMode",
                                            "evaluation": "property-value-not-in-list",
                                            "value": [
                                                "wsa2wsa",
                                                "sync2wsa"
                                            ]
                                        },
                                        {
                                            "property-name": "WSAGenStyle",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "async"
                                        }
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "WS-Addressing Asynchronous Reply Timeout",
                            "description": "&lt;p>Specify the maximum period of time in seconds to wait for an asynchronous response from the server before abandoning the transaction with an error.&lt;/p>&lt;p>Use any value of 1 - 4000000. The default value is 120.&lt;/p>&lt;p>This value can be programmatically overridden by the &lt;tt>var://service/wsa/timeout&lt;/tt> variable.&lt;/p>&lt;p>The establishment of this timer can be programmatically overridden by the &lt;tt>var://service/soap-oneway-mep&lt;/tt> variable, which eliminates waiting for a response. This can be applied to messages known to use the SOAP 1.2 one-way message exchange pattern.&lt;/p>&lt;p>This property is relevant when the WS-Addressing mode is either Traditional to WS-Addressing WS-Addressing to WS-Addressing and the message generation pattern is asynchronous.&lt;/p>"
                        },
                        {
                            "name": "WSRMEnabled",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enable Web Services Reliable Messaging Mode",
                            "cli-alias": "wsrm",
                            "display": "WS-ReliableMessaging",
                            "description": "Enable the Web Services Reliable Messaging feature (WS-ReliableMessaging 1.1). WS-ReliableMessaging requires SOAP messages. The default is No WS-ReliableMessaging."
                        },
                        {
                            "name": "WSRMSequenceExpiration",
                            "default": 3600,
                            "cli-alias": "wsrm-sequence-expiration",
                            "maximum": 86400,
                            "summary": "Set target sequence expiration interval for RM Destination and RM Source",
                            "minimum": 10,
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSRMEnabled",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "on"
                                }
                            },
                            "units": "seconds",
                            "type": {
                                "href": "/mgmt/types/default/dmTimeInterval"
                            },
                            "display": "Target Sequence Expiration Interval",
                            "description": "&lt;p>Set the target expiration interval for all WS-ReliableMessaging Sequences. If an incoming CreateSequence SOAP message has an Expires interval longer than this configured value, it will be reduced to this value in the SequenceResponse SOAP message. The same applies to the Expires interval in any accepted Offer in an incoming CreateSequence. This is also used for the requested Expires value in any CreateSequence SOAP call made to the client or server from a RM Source.&lt;/p>&lt;p>This implementation will never request or accept a non-expiring sequence (the value \"PT0S\", representing zero seconds).&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging is enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMAAAPolicy",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/AAAPolicy"
                                }
                            },
                            "summary": "AAA policy for validating WS-ReliableMessaging control messages",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSRMEnabled",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "on"
                                }
                            },
                            "cli-alias": "wsrm-aaa-policy",
                            "display": "WS-RM AAA Policy",
                            "description": "&lt;p>Specify the AAA Policy to perform authentication of incoming WS-ReliableMessaging (WS-RM) messages. While this is focused on protecting the WS-RM control SOAP messages, such as CreateSequence and TerminateSequence, it is also run on incoming WS-RM data messages with a Sequence header. This prevents unauthorized clients from using system resources by issuing CreateSequence requests, or from disrupting existing WS-RM sequences using CloseSequence or TerminateSequence messages, or from falsely acknowledging messages using SequenceAcknowledgement messages. This would normally be the same AAA Policy used in later processing by the request or response rules, the results are cached so it is not evaluated again.&lt;/p>&lt;p>Note that this also applies to a CreateSequence request received from the server. If the server is not providing this authentication information, configure to have the RM Source make offers.&lt;/p>&lt;p>This property is relevant only when WS-RM is enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMDestinationAcceptCreateSequence",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enable or disable the creation of RM destinations on this service by incoming CreateSequence requests",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSRMEnabled",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "on"
                                }
                            },
                            "cli-alias": "wsrm-destination-accept-create-sequence",
                            "display": "Destination Accept Incoming CreateSequence",
                            "description": "&lt;p>Accept incoming WS-ReliableMessaging (WS-RM) &lt;tt>CreateSequence&lt;/tt> SOAP request, and create an RM Destination when one is received. If this is enabled, both the client and the server can use WS-RM to send messages to this gateway. If disabled, the client cannot use WS-RM to communicate with this DataPower service. If disabled, the only way that an RM Destination can be created on this service is if the RM Source was configured to make offers, in which case an &lt;tt>Offer&lt;/tt> and &lt;tt>Accept&lt;/tt> can create an RM Destination for the server to send WS-RM messages to.&lt;/p>&lt;p>This property is relevant only when WS-RM is enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMDestinationMaximumSequences",
                            "default": 400,
                            "cli-alias": "wsrm-destination-maximum-sequences",
                            "maximum": 2048,
                            "summary": "Set maximum simultaneous active Sequences to WS-RM destinations on this service",
                            "minimum": 1,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "property-name": "WSRMDestinationAcceptCreateSequence",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        }
                                    ]
                                }
                            },
                            "units": "sequences",
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "Destination Maximum Simultaneous Sequences",
                            "description": "&lt;p>Set a limit on the maximum number of WS-ReliableMessaging (WS-RM) destinations that can be created on this DataPower service by &lt;tt>CreateSequence&lt;/tt> SOAP requests. Attempts by clients to create sequences in excess of this limit will result in a SOAP Fault. This controls memory resource utilization.&lt;/p>&lt;p>This limit does not apply to WS-RM destinations that are created by peer acceptance of offers made in &lt;tt>CreateSequence&lt;/tt> SOAP requests sent by this DataPower service.&lt;/p>&lt;p>This property is relevant only when WS-RM and Destination Accept Incoming CreateSequence are enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMDestinationInOrder",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enable the InOrder delivery assurance for WS-RM destinations",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "WSRMDestinationAcceptCreateSequence",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                },
                                                {
                                                    "property-name": "WSRMSourceMakeOffer",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "wsrm-destination-inorder",
                            "display": "Destination InOrder Delivery Assurance",
                            "description": "&lt;p>Enable the &lt;tt>InOrder&lt;/tt> delivery assurance for WS-ReliableMessaging (WS-RM) destinations, in addition to the standard &lt;tt>ExactlyOnce&lt;/tt> delivery assurance. No messages will be passed from the receive queue for further processing unless their sequence number assigned by the client is one greater than the last one processed.&lt;/p>&lt;p>&lt;tt>InOrder&lt;/tt> delivery assurance increases memory and resource use by the WS-RM destination.&lt;/p>&lt;p>This property is relevant only when WS-RM is enabled and Destination Accept Incoming CreateSequence or Source Make Two-Way Offer are enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMDestinationMaximumInOrderQueueLength",
                            "default": 10,
                            "cli-alias": "wsrm-destination-maximum-inorder-queue-length",
                            "maximum": 256,
                            "summary": "Set maximum RM Destination queue length for InOrder Delivery Assurance",
                            "minimum": 1,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "property-name": "WSRMDestinationInOrder",
                                            "evaluation": "property-equals",
                                            "value": "off"
                                        }
                                    ]
                                }
                            },
                            "units": "messages",
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "Destination Maximum InOrder Queue Length",
                            "description": "Sets the maximum length of a RM Destination queue when Destination InOrder Delivery Service is enabled. This is the maximum number of messages held in the queue beyond a gap in the received sequence numbers. This controls memory use."
                        },
                        {
                            "name": "WSRMDestinationAcceptOffers",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enable accepting Offers in received CreateSequence",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "property-name": "WSRMDestinationAcceptCreateSequence",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "wsrm-destination-accept-offers",
                            "display": "Destination Accept Two-Way Offers",
                            "description": "&lt;p>Accept offers for two-way WS-ReliableMessaging (WS-RM) contained in CreateSequence SOAP request. If an offer is included, the creation of an WS-RM Destination will also result in the creation of an RM Source to reliably send responses to the client.&lt;/p>&lt;p>This property is relevant only when WS-RM and Destination Accept Incoming CreateSequence are enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMFrontForce",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Require WS-ReliableMessaging to be used on SOAP messages processed by the request rules",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "property-name": "WSRMDestinationAcceptCreateSequence",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "wsrm-request-force",
                            "display": "WS-RM Required on Request",
                            "description": "&lt;p>Require the use of WS-ReliableMessaging (WS-RM) for all SOAP messages being processed by the request rules. The client must establish a sequence using CreateSequence SOAP call and must include a Sequence in each SOAP header. Any SOAP request messages without a Sequence header will result in a SOAP fault.&lt;/p>&lt;p>This property is relevant only when WS-RM and Destination Accept Incoming CreateSequence are enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMBackForce",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Require WS-ReliableMessaging to be used on SOAP messages processed by the response rules",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "WSRMDestinationAcceptCreateSequence",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                },
                                                {
                                                    "property-name": "WSRMSourceMakeOffer",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "wsrm-response-force",
                            "display": "WS-RM Required on Response",
                            "description": "&lt;p>Require the use of WS-ReliableMessaging (WS-RM) for all SOAP messages being processed by the response rules. Any SOAP response messages without a Sequence header will result in a SOAP fault.&lt;/p>&lt;p>When WS-Addressing is in use, SOAP messages without a WS-Addressing RelatesTo SOAP Header will be processed by the request rule, not the response rule, even if they come from the back-side server.&lt;/p>&lt;p>This property is relevant only when WS-RM is enabled and Destination Accept Incoming CreateSequence or Source Make Two-Way Offer are enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMBackCreateSequence",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Create an RM Source for requests to server",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSRMEnabled",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "on"
                                }
                            },
                            "cli-alias": "wsrm-source-request-create-sequence",
                            "display": "Source Create Sequence on Request",
                            "description": "&lt;p>Create an RM Source from the back side to the server. The RM Source is creating by sending a CreateSequence SOAP request to the server address, when there is SOAP data to send and there is no RM Source that was created by a MakeOffer from the server.&lt;/p>&lt;p>This property is relevant only when WS-RM is enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMFrontCreateSequence",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Create an RM Source for responses to client",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "property-name": "WSAMode",
                                            "evaluation": "property-value-not-in-list",
                                            "value": [
                                                "wsa2sync",
                                                "wsa2wsa"
                                            ]
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "wsrm-source-response-create-sequence",
                            "display": "Source Create Sequence on Response",
                            "description": "&lt;p>Create an RM Source from the front side to the client. The RM Source is created by sending a CreateSequence SOAP request to the WS-Addressing &lt;tt>ReplyTo&lt;/tt> address, when there is SOAP data to sent to the client and there is no RM Source that was created by a MakeOffer from the client.&lt;/p>&lt;p>To create this two-way connection, WS-Addressing must be in use on the front side.&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging is enabled and the WS-Addressing mode is WS-Addressing to Traditional or WS-Addressing to WS-Addressing.&lt;/p>"
                        },
                        {
                            "name": "WSRMSourceMakeOffer",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Include offer for Two-Way WS-RM in CreateSequence",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "property-name": "WSRMBackCreateSequence",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "wsrm-source-make-offer",
                            "display": "Source Make Two-Way Offer",
                            "description": "&lt;p>Include an Offer for two-way WS-ReliableMessaging (WS-RM) in CreateSequence SOAP requests made to the server as a result of request processing. This may result in creating an RM Destination for the server to send responses on when the gateway creates an RM Source to send requests to the server.&lt;/p>&lt;p>If the server does not Accept the Offer, no RM Destination will be created.&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging and Source Create Sequence on Response are enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMUsesSequenceSSL",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Use SSL/TLS to protect sequence integrity",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "WSRMFrontCreateSequence",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                },
                                                {
                                                    "property-name": "WSRMBackCreateSequence",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                },
                                                {
                                                    "property-name": "WSRMDestinationAcceptOffers",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "wsrm-source-sequence-ssl",
                            "display": "Source use SSL/TLS Session Binding",
                            "description": "&lt;p>Use the WS-ReliableMessaging (WS-RM) SSL/TLS security model for protecting the integrity and security of messages sent from RM Sources for this gateway. This provides confidentiality (through SSL/TLS) and protects the WS-RM state from alteration by unauthorized parties.&lt;/p>&lt;p>Outgoing CreateSequence control messages will have the UsesSequenceTLS SOAP header block. This will tell the peer RM Destination that all control and data messages for this conversation must use the same SSL/TLS session. Any message to that RM Destination Identifier that is not associated with the same SSL/TLS session will be rejected.&lt;/p>&lt;p>The lifetime of a SSL/TLS protected Sequence will be limited by the lifetime of the SSL/TLS session that is used to protect that Sequence.&lt;/p>&lt;p>Acceptance and enforcement of UsesSequenceTLS on incoming WS-RM connections to RM Destinations is automatic if TLS is enabled.&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging and when Source Create Sequence on Request, Source Create Sequence on Response, or Destination Accept Two-Way Offers are enabled.&lt;/p>"
                        },
                        {
                            "description": "&lt;p>Selects a particular front-side protocol handler to request to receive asynchronous acknowledgments and control messages responses on the front side of the gateway. If not configured, they will be requested to be received at the URL of the original request message that causes the creation of the RM Source.&lt;/p>&lt;p>The handler must be one that is already configured as one of the active ones for this service. It can be the one that incoming requests are arriving on or can be any other one that the client WS-ReliableMessaging (WS-RM) implementation can reach.&lt;/p>&lt;p>An URL will be generated from the base URL of the protocol handler, which may also have a path added due to the WSDL describing the service.&lt;/p>&lt;p>This generated URL is used as the value of &lt;tt>CreateSequence/AcksTo&lt;/tt> when sending a Create Sequence SOAP request, it is used as the &lt;tt>CreateSequenceResponse/Accept/AcksTo&lt;/tt> when accepting an offer from the client. This generated URL is also used as the WS-Addressing &lt;tt>ReplyTo&lt;/tt> address for WS-RM control SOAP messages ( &lt;tt>CreateSequence&lt;/tt> , &lt;tt>CloseSequence&lt;/tt> , and &lt;tt>TerminateSequence&lt;/tt> ) sent by the RM Source to the client.&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging and when Source Create Sequence on Response or Destination Accept Two-Way Offers are enabled.&lt;/p>",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "base-class": "SourceProtocolHandler"
                                }
                            },
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "WSRMFrontCreateSequence",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                },
                                                {
                                                    "property-name": "WSRMDestinationAcceptOffers",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "wsrm-source-front-acks-to",
                            "display": "Source Front Reply Point",
                            "name": "WSRMFrontAcksTo"
                        },
                        {
                            "description": "&lt;p>Selects a particular handler to receive asynchronous WS-ReliableMessaging (WS-RM) &lt;tt>SequenceAcknowledgement&lt;/tt> messages. If this is not configured, but there is a WS-Addressing Reply Point configured, it will be used to receive &lt;tt>SequenceAcknowledgements&lt;/tt> . If neither is set, the back side RM Source will expect synchronous &lt;tt>SequenceAcknowledgments&lt;/tt> in response messages.&lt;/p>&lt;p>The handler must be one that is already configured as active for this DataPower service. It can be the one that incoming front side requests are arriving on or can be any other one that the server WS-RM implementation can reach.&lt;/p>&lt;p>When configured, the &lt;tt>AcksTo&lt;/tt> field in WS-RM &lt;tt>CreateSequence&lt;/tt> SOAP messages sent to the server will be the base URL of this handler. If not configured but WS-Addressing Reply Point is configured, the &lt;tt>AcksTo&lt;/tt> field will come from that handler.&lt;/p>&lt;p>If neither is configured, the &lt;tt>AcksTo&lt;/tt> field will be &lt;tt>http://www.w3.org/2005/08/addressing/anonymous&lt;/tt> .&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging and when Source Create Sequence on Request or Destination Accept Two-Way Offers are enabled.&lt;/p>",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "base-class": "SourceProtocolHandler"
                                }
                            },
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "WSRMBackCreateSequence",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                },
                                                {
                                                    "property-name": "WSRMDestinationAcceptOffers",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "wsrm-source-back-acks-to",
                            "display": "Source Back AcksTo Reply Point",
                            "name": "WSRMBackAcksTo"
                        },
                        {
                            "name": "WSRMSourceMaximumSequences",
                            "default": 400,
                            "cli-alias": "wsrm-source-maximum-sequences",
                            "maximum": 2048,
                            "summary": "Set maximum simultaneous active Sequences from RM Sources on this Gateway",
                            "minimum": 1,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "WSRMFrontCreateSequence",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                },
                                                {
                                                    "property-name": "WSRMBackCreateSequence",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "on"
                                                },
                                                {
                                                    "property-name": "WSRMDestinationAcceptOffers",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "units": "sequences",
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "Source Maximum Simultaneous Sequences",
                            "description": "&lt;p>Set a limit on the maximum number of simultaneously active Sequences from RM Sources of this Gateway. Each remote RM Destination Endpoint Reference (URL) requires one sequence. This controls memory resource utilization.&lt;/p>&lt;p>Transactions requiring to creating sequences in excess of this limit will result in a SOAP fault.&lt;/p>&lt;p>Incoming CreateSequence SOAP requests with an Offer will have the offer ignored if accepting the offer would exceed this limit.&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging and when Source Create Sequence on Request, Source Create Sequence on Response, or Destination Accept Two-Way Offers are enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMSourceRetransmissionInterval",
                            "default": 10,
                            "cli-alias": "wsrm-source-retransmission-interval",
                            "maximum": 600,
                            "summary": "How long RM Source waits for Ack before message retransmission",
                            "minimum": 2,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "WSRMDestinationAcceptOffers",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                },
                                                {
                                                    "property-name": "WSRMFrontCreateSequence",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                },
                                                {
                                                    "property-name": "WSRMBackCreateSequence",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "units": "seconds",
                            "type": {
                                "href": "/mgmt/types/default/dmTimeInterval"
                            },
                            "display": "Source Retransmission Interval",
                            "description": "&lt;p>How long a RM Source will wait for an Ack before retransmitting the message. This also applies to the retransmission of a CreateSequence, CloseSequence, or TerminateSequence SOAP requests. If Front Exponential Backoff is enabled, this is the initial timeout. Use any value of 2 - 600. The default is 10.&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging and when Source Create Sequence on Request, Source Create Sequence on Response, or Destination Accept Two-Way Offers are enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMSourceExponentialBackoff",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Whether RM Source uses exponential backoff for retransmission",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "WSRMDestinationAcceptOffers",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                },
                                                {
                                                    "property-name": "WSRMFrontCreateSequence",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                },
                                                {
                                                    "property-name": "WSRMBackCreateSequence",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "wsrm-source-exponential-backoff",
                            "display": "Source Exponential Backoff",
                            "description": "&lt;p>Controls whether exponential backoff is used to increase the interval between subsequent retransmissions on unacknowledged messages by a RM Source.&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging and when Source Create Sequence on Request, Source Create Sequence on Response, or Destination Accept Two-Way Offers are enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMSourceMaximumRetransmissions",
                            "default": 4,
                            "cli-alias": "wsrm-source-retransmit-count",
                            "maximum": 256,
                            "summary": "How many times a RM Source will retransmit a message before declaring a failure",
                            "minimum": 1,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "WSRMDestinationAcceptOffers",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                },
                                                {
                                                    "property-name": "WSRMFrontCreateSequence",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                },
                                                {
                                                    "property-name": "WSRMBackCreateSequence",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "Source Maximum Retransmissions",
                            "description": "&lt;p>How many times a RM Source will retransmit a message before declaring a failure. This also controls retransmission of CreateSequence, CloseSequence, and TerminateSequence SOAP requests.&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging and when Source Create Sequence on Request, Source Create Sequence on Response, or Destination Accept Two-Way Offers are enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMSourceMaximumQueueLength",
                            "default": 30,
                            "cli-alias": "wsrm-source-maximum-queue-length",
                            "maximum": 256,
                            "summary": "How many messages a RM Source will hold waiting for Acks",
                            "minimum": 1,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "WSRMDestinationAcceptOffers",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                },
                                                {
                                                    "property-name": "WSRMFrontCreateSequence",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                },
                                                {
                                                    "property-name": "WSRMBackCreateSequence",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "units": "messages",
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "Source Maximum Queue Length",
                            "description": "&lt;p>Maximum length of a RM Source queue for responses. This is the maximum number of messages held in the queue awaiting Ack messages. This controls memory use.&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging and when Source Create Sequence on Request, Source Create Sequence on Response, or Destination Accept Two-Way Offers are enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMSourceRequestAckCount",
                            "default": 1,
                            "cli-alias": "wsrm-source-request-ack-count",
                            "maximum": 256,
                            "summary": "Set how many messages sent by a RM Source before requesting Ack",
                            "minimum": 1,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "WSRMDestinationAcceptOffers",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                },
                                                {
                                                    "property-name": "WSRMFrontCreateSequence",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                },
                                                {
                                                    "property-name": "WSRMBackCreateSequence",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "units": "messages",
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "Source Request Ack Count",
                            "description": "&lt;p>How many messages the a RM Source will send before including the AckRequested SOAP header to request an acknowledgment. The AckRequested SOAP header is always included when a message is retransmitted.&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging and when Source Create Sequence on Request, Source Create Sequence on Response, or Destination Accept Two-Way Offers are enabled.&lt;/p>"
                        },
                        {
                            "name": "WSRMSourceInactivityClose",
                            "default": 360,
                            "cli-alias": "wsrm-source-inactivity-close-interval",
                            "maximum": 3600,
                            "summary": "How long a RM Source waits for more messages before closing sequence",
                            "minimum": 10,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "WSRMEnabled",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "on"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "WSRMDestinationAcceptOffers",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                },
                                                {
                                                    "property-name": "WSRMFrontCreateSequence",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                },
                                                {
                                                    "property-name": "WSRMBackCreateSequence",
                                                    "evaluation": "property-equals",
                                                    "value": "off"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "units": "seconds",
                            "type": {
                                "href": "/mgmt/types/default/dmTimeInterval"
                            },
                            "display": "Source Inactivity Close Interval",
                            "description": "&lt;p>How long the a RM Source will wait for an another message to be sent before closing the sequence by sending a CloseSequence or TerminateSequence SOAP message. Use any value of 10 - 3600. The default is 10.&lt;/p>&lt;p>CloseSequence is sent when the inactivity timer expires if there are outstanding unacknowledged messages, otherwise Terminate sequence is sent.&lt;/p>&lt;p>This property is relevant only when WS-ReliableMessaging and when Source Create Sequence on Request, Source Create Sequence on Response, or Destination Accept Two-Way Offers are enabled.&lt;/p>"
                        },
                        {
                            "name": "ForcePolicyExec",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Bypasses the one way exchange pattern",
                            "cli-alias": "force-policy-exec",
                            "display": "Process Messages Whose Body Is Empty",
                            "description": "&lt;p>Some message patterns could include bodyless request and response messages. This approach is common with RESTful Web services where messages might not include a body but still requires the processing policy to run. To enable this capability for services whose request and response type is XML, JSON, or marked as non-XML, set this option to 'on'. By doing so, the processing policy rules will always be run.&lt;/p>"
                        },
                        {
                            "name": "RewriteErrors",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Whether to rewrite error messages to avoid providing a padding oracle.",
                            "cli-alias": "rewrite-errors",
                            "display": "Rewrite Error Messages",
                            "description": "Error messages after a decryption action can provide an attacker who is using the padding oracle attack method with enough information to determine the contents of the plain-text data. When enabled, the default, the client receives error messages without the internal information that could lead to a discovery. When disabled, the client receives the original message with this information."
                        },
                        {
                            "name": "DelayErrors",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Whether to delay error messages to avoid providing a padding oracle.",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "RewriteErrors",
                                    "evaluation": "property-does-not-equal",
                                    "value": "on"
                                }
                            },
                            "cli-alias": "delay-errors",
                            "display": "Delay Error Messages",
                            "description": "The timing difference of the error messages returned after a decryption action can provide an attacker with enough information to determine the contents of the plain-text data. When enabled, the default, the DataPower Gateway delays error messages for the defined duration. When disabled, the DataPower Gateway does not delay error messages."
                        },
                        {
                            "name": "DelayErrorsDuration",
                            "default": 1000,
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "DelayErrors",
                                            "evaluation": "property-equals",
                                            "value": "on"
                                        },
                                        {
                                            "property-name": "RewriteErrors",
                                            "evaluation": "property-equals",
                                            "value": "on"
                                        }
                                    ]
                                }
                            },
                            "maximum": 300000,
                            "summary": "How long to delay error messages from the start of the transaction.",
                            "cli-alias": "delay-errors-duration",
                            "minimum": 250,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "units": "ms",
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "Duration to Delay Error Messages",
                            "description": "When enabling the delay of error messages, specify the delay duration in milliseconds. If delaying messages for 3000ms, the DataPower Gateway will not send error messages to the client until 3 seconds have elapsed since the DataPower Gateway performed decryption on the requests. Enter a value in the range 250 - 300000. The default value is 1000."
                        },
                        {
                            "name": "RequestType",
                            "default": "soap",
                            "type": {
                                "href": "/mgmt/types/default/dmXMLReqRespType1"
                            },
                            "summary": "Characterize client-originated traffic",
                            "cli-alias": "request-type",
                            "display": "Request Type",
                            "description": "Characterizes the traffic that originates from the client. The default is SOAP."
                        },
                        {
                            "name": "ResponseType",
                            "default": "soap",
                            "type": {
                                "href": "/mgmt/types/default/dmXMLReqRespType1"
                            },
                            "summary": "Characterize server-originated traffic",
                            "cli-alias": "response-type",
                            "display": "Response Type",
                            "description": "Characterizes the traffic that originates from the server. The default is SOAP."
                        },
                        {
                            "name": "FollowRedirects",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enable/Disable gateway redirect resolution",
                            "cli-alias": "follow-redirects",
                            "display": "Follow Redirects",
                            "description": "Some protocols generate redirects as part of the protocol - for example HTTP response code 302. If this property is enabled the gateway will try and transparently resolve those redirects."
                        },
                        {
                            "name": "AllowCompression",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enable/Disable GZIP compression functionality on the backside",
                            "cli-alias": "compression",
                            "display": "Compression",
                            "description": "Specify whether to enable or disable the GZIP compression functionality on the backside."
                        },
                        {
                            "name": "EnableCompressedPayloadPassthrough",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enable or disable the decompression of the response payload when the backside response is compressed",
                            "cli-alias": "enable-compressed-payload-passthrough",
                            "display": "Enable passthrough of compressed payload",
                            "description": "Specify whether to enable or disable the decompression of the response payload when the backside response is compressed. When enabled, the payload is not decompressed but passed through compressed."
                        },
                        {
                            "name": "Type",
                            "default": "static-from-wsdl",
                            "type": {
                                "href": "/mgmt/types/default/dmWSGatewayType"
                            },
                            "required": "true",
                            "summary": "Mode for proxy operation",
                            "cli-alias": "type",
                            "display": "Type",
                            "description": "Select the mode of operation for the Web Service Proxy. The default is Static from WSDL."
                        },
                        {
                            "name": "AutoCreateSources",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Automatically create missing source protocols",
                            "cli-alias": "autocreate-sources",
                            "display": "Auto-create Source Protocols",
                            "description": "The front side ports that accept connections must have configured Front Side Protocol Source Handlers. If no Front Side Protocol Handler is configured and auto-create is enabled, a default Protocol Handler will be created. Currently only auto-creates HTTP sources."
                        },
                        {
                            "name": "SSLServerConfigType",
                            "default": "proxy",
                            "type": {
                                "href": "/mgmt/types/default/dmSSLConfigType"
                            },
                            "summary": "Set the TLS profile type to secure connections between clients and the DataPower Gateway",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "AutoCreateSources",
                                    "evaluation": "property-equals",
                                    "value": "off"
                                }
                            },
                            "cli-alias": "ssl-config-type",
                            "display": "TLS server type",
                            "description": "The TLS profile type to secure connections between clients and the DataPower Gateway."
                        },
                        {
                            "name": "SSLServer",
                            "default": "",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/SSLServerProfile"
                                }
                            },
                            "summary": "Set the TLS server profile to secure connections between clients and the DataPower Gateway",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "AutoCreateSources",
                                            "evaluation": "property-equals",
                                            "value": "off"
                                        },
                                        {
                                            "property-name": "SSLServerConfigType",
                                            "evaluation": "property-does-not-equal",
                                            "value": "server"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "ssl-server",
                            "display": "TLS server profile",
                            "description": "the TLS server profile to secure connections between clients and the DataPower Gateway."
                        },
                        {
                            "name": "SSLSNIServer",
                            "default": "",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/SSLSNIServerProfile"
                                }
                            },
                            "summary": "Set the TLS SNI server profile to secure connections between clients and the DataPower Gateway",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "AutoCreateSources",
                                            "evaluation": "property-equals",
                                            "value": "off"
                                        },
                                        {
                                            "property-name": "SSLServerConfigType",
                                            "evaluation": "property-does-not-equal",
                                            "value": "sni"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "ssl-sni-server",
                            "display": "TLS SNI server profile",
                            "description": "The TLS SNI server profile to secure connections between clients and the DataPower Gateway."
                        },
                        {
                            "description": "&lt;p>An Endpoint Rewrite Policy determines the URL that clients use to send requests for the services described in the WSDL file(s); the URL published to directory services; and can also determine the URL of the back end application services.&lt;/p>&lt;p>This policy allows you to define service endpoint URLs for more than one local interface. You can define the URLs published to directory services, which may be different than the locally defined interface when load balancers are used. You can override the URLS defined in the WSDL files for the Web Services endpoints, redefining these URLS to a different location. This is useful for maintenance windows.&lt;/p>&lt;p>A configured Endpoint Rewrite Policy takes precedence over any Local Endpoint Rewrite and Remote Endpoint Rewrite policies.&lt;/p>",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/WSEndpointRewritePolicy"
                                }
                            },
                            "summary": "Endpoint Rewrite Policy",
                            "cli-alias": "endpoint-rewrite-policy",
                            "display": "Endpoint Rewrite Policy",
                            "name": "EndpointRewritePolicy"
                        },
                        {
                            "description": "&lt;p>Specify a URL Rewrite Policy used to modify the wsdl:port address specified in the source WSDL when the service is loaded. If no URL Rewrite Policy is specified, the default local address is the IP address of the device and the relative URI and the original port number from the wsdl:port address used in the source WSDL.&lt;/p>&lt;p>For example, the WSDL may specify &lt;tt>*:2100/search/find&lt;/tt> and this URL Rewrite Policy might rewrite it to &lt;tt>*:2100/searchsvc/find&lt;/tt> . Client requests to the web service would be rewritten to &lt;tt>http://dpdeviceaddr:2100/searchsvc/find&lt;/tt> .&lt;/p>",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/URLRewritePolicy"
                                }
                            },
                            "summary": "URL rewrite policy to rewrite the wsdl:port address",
                            "cli-alias": "frontside-port-rewrite",
                            "display": "Local endpoint rewrite",
                            "name": "LocalEndpointRewrite"
                        },
                        {
                            "description": "&lt;p>Specify a URL Rewrite Policy used to modify the wsdl:port address specified in the source WSDL when the service is loaded. If no URL Rewrite Policy is specified, the default remote address is exactly the same wsdl:port address used in the source WSDL.&lt;/p>&lt;p>For example, the WSDL may specify &lt;tt>http://api.beagle.com:2100/search/find\"&lt;/tt> and this URL Rewrite Policy might rewrite it to &lt;tt>http://192.168.2.21:2000/search/find\"&lt;/tt> .&lt;/p>",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/URLRewritePolicy"
                                }
                            },
                            "summary": "URL Rewrite Policy to rewrite the remote wsdl:port address",
                            "cli-alias": "backside-port-rewrite",
                            "display": "Remote endpoint rewrite",
                            "name": "RemoteEndpointRewrite"
                        },
                        {
                            "description": "Specify the AAA policy to provide only authentication and authorization to all messages that the service endpoints handle. Unlike a AAA policy in the processing policy that can modify messages and perform postprocessing, this AAA policy does not employ any selective matching rules. Therefore, this AAA policy processes all messages.",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/AAAPolicy"
                                }
                            },
                            "summary": "Service-wide AAA policy",
                            "cli-alias": "aaa-policy",
                            "display": "Authorization AAA Policy",
                            "name": "AAAPolicy"
                        },
                        {
                            "name": "StylePolicy",
                            "default": "default",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/WSStylePolicy"
                                }
                            },
                            "required": "true",
                            "summary": "Custom processing policy",
                            "cli-alias": "stylepolicy",
                            "display": "Processing Policy",
                            "description": "&lt;p>The service can apply a user-defined processing policy to messages processed by the service. This policy may take a wide range of action on messages. Matching rules select messages for particular processing actions, as with a firewall or proxy service. This policy takes effect in addition to the processing applied automatically by the service.&lt;/p>&lt;p>Select an existing policy from the list or click the + button to create a new policy.&lt;/p>&lt;p>&lt;b>Note:&lt;/b> The processing policy for a Web Service Proxy works with only Web Service Proxy services, not any other service type on the DataPower Gateway.&lt;/p>"
                        },
                        {
                            "type": {
                                "href": "/mgmt/types/default/dmNetworkRetry"
                            },
                            "display": "Remote Fetch Retry",
                            "cli-alias": "remote-retry",
                            "name": "RemoteFetchRetry",
                            "summary": "Policy for controlling how a remote WSDL should be fetched."
                        },
                        {
                            "name": "WSDLCachePolicy",
                            "type": {
                                "href": "/mgmt/types/default/dmWSDLCachePolicy"
                            },
                            "summary": "WSDL Cache Policy",
                            "array": "true",
                            "cli-alias": "wsdl-cache-policy",
                            "display": "WSDL Cache Policy",
                            "description": "A WSDL that is part of the cache policy is refreshed when its TTL to is reached. Refresh retrieves the WSDL from the source location and refreshes the web service proxy state. Depending upon the changes in the WSDL file itself, the Proxy may reconfigure itself in any number of ways, including adding new endpoints or removing existing endpoints."
                        },
                        {
                            "name": "BaseWSDL",
                            "type": {
                                "href": "/mgmt/types/default/dmWSBaseWSDL"
                            },
                            "summary": "WSDL File for this WS-Proxy",
                            "array": "true",
                            "cli-alias": "wsdl",
                            "display": "WSDL File",
                            "description": "A proxy may use one or more WSDL files to define the service the proxy handles. Those WSDL files are defined on this page."
                        },
                        {
                            "name": "UserToggles",
                            "type": {
                                "href": "/mgmt/types/default/dmWSUserToggles"
                            },
                            "summary": "Component level user configuration",
                            "array": "true",
                            "cli-alias": "user-policy",
                            "display": "User policy",
                            "description": "&lt;p>Each WSDL Operation of the web service proxied by a Web Service Proxy can have a user policy defined for that component.&lt;/p>&lt;p>Components are specified by the combination of Target Namespace, WSDL file, Service, PortType, Binding and Operation. For example, to specify all operations in the target namespace MySvc, enter \"MySvc\" in the Target Namespace field and set all other inputs to *. To specify only one particular operation, named GetLottoPick for example, enter \"wsdl:definitions//wsdl:operation/@GetLottoPick\" in the Operations field and set all others to *.&lt;/p>&lt;p>The policy applied to the specified component consists of six options: Enable, Publish, Validate Faults, Validate Headers, Validate Requests and Validate Responses. See below for more information about policy options.&lt;/p>"
                        },
                        {
                            "description": "Specify the full name of the client principal when the Web Services Proxy needs to decrypt automatically encrypted requests. Use this property when the encryption uses a Kerberos session key or uses a key that was derived from the session key.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Full name of Kerberos client principal",
                            "cli-alias": "client-principal",
                            "display": "Kerberos Encryptor Principal",
                            "name": "ClientPrincipal"
                        },
                        {
                            "description": "Specify the full name of the server principal when the Web Services Proxy needs to decrypt automatically encrypted requests. Use this property when the encryption uses a Kerberos session key or uses a key that was derived from the session key.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Full name of Kerberos server principal",
                            "cli-alias": "server-principal",
                            "display": "Kerberos Decryptor Principal",
                            "name": "ServerPrincipal"
                        },
                        {
                            "description": "Select the Kerberos keytab file that contains the principals that the Web Services Proxy uses to decrypt automatically encrypted requests.",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/CryptoKerberosKeytab"
                                }
                            },
                            "summary": "Kerberos keytab",
                            "cli-alias": "kerberos-keytab",
                            "display": "Kerberos Keytab",
                            "name": "KerberosKeytab"
                        },
                        {
                            "description": "The ws-proxy will automatically decrypt encrypted requests. Configure the decrypt key to explicitly select the private key used in the decryption.",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/CryptoKey"
                                }
                            },
                            "summary": "Crypto key that decrypts encrypted operations",
                            "cli-alias": "decrypt-key",
                            "display": "Decrypt Key",
                            "name": "DecryptKey"
                        },
                        {
                            "name": "EncryptedKeySHA1CacheLifeTime",
                            "default": 0,
                            "cli-alias": "wssec11-enckey-cache",
                            "maximum": 604800,
                            "summary": "Cache Lifetime for decrypted generated key",
                            "minimum": 0,
                            "type": {
                                "href": "/mgmt/types/default/dmTimeInterval"
                            },
                            "display": "EncryptedKeySHA1 Cache Lifetime",
                            "description": "This is the Cache Lifetime for the decrypted generated key. Setting the value to 0 means the decrypted generated key will not be cached."
                        },
                        {
                            "name": "PreserveKeyChain",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Control the output of xenc:EncryptedKey after the decrypt action",
                            "cli-alias": "preserve-key-chain",
                            "display": "Preserve EncryptedKey Chain",
                            "description": "Select 'on' to output the chain of elements being used by the decrypted Encrypted Data, such as xenc:EncryptedKey, wsc:DerivedKeyToken. Otherwise all the xenc:EncryptedKey elements will be removed after decryption, even some of the Encrypted Data may not be decrypted successfully."
                        },
                        {
                            "name": "DecryptWithKeyFromED",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Attempts to decrypt with the key present inside the EncryptedData element",
                            "cli-alias": "decrypt-with-key-from-ed",
                            "display": "Decrypt with Key from EncryptedData",
                            "description": "In scenarios where the key is inside an EncryptedData element (such as 'encrypted SAML Assertion'), the decrypt action cannot locate the key to decrypt the corresponding EncryptedData elements. Select 'on', to enable decrypt action to attempt decryption with the key that is inside the EncryptedData element."
                        },
                        {
                            "description": "Select how to handle the SOAPAction HTTP header.",
                            "default": "lax",
                            "type": {
                                "href": "/mgmt/types/default/dmSOAPActionMatchPolicy"
                            },
                            "cli-alias": "soap-action-policy",
                            "display": "SOAPAction Policy",
                            "name": "SOAPActionPolicy"
                        },
                        {
                            "name": "UDDISubscriptions",
                            "type": {
                                "href": "/mgmt/types/default/dmUDDIWSDLSource"
                            },
                            "summary": "Obtain web services via a UDDI subscription",
                            "array": "true",
                            "cli-alias": "uddi-subscription",
                            "display": "UDDI Subscriptions (deprecated)",
                            "description": "Load and proxy services obtained via these subscriptions."
                        },
                        {
                            "name": "WSRRSubscriptions",
                            "type": {
                                "href": "/mgmt/types/default/dmWSRRWSDLSource"
                            },
                            "summary": "Obtain web services via a WSRR subscription",
                            "array": "true",
                            "cli-alias": "wsrr-subscription",
                            "display": "WSRR Subscriptions",
                            "description": "Load and proxy services obtained via these subscriptions."
                        },
                        {
                            "name": "WSRRSavedSearchSubscriptions",
                            "type": {
                                "href": "/mgmt/types/default/dmWSRRSavedSearchWSDLSource"
                            },
                            "summary": "Obtain web services via a WSRR saved search subscription",
                            "array": "true",
                            "cli-alias": "wsrr-saved-search-subscription",
                            "display": "WSRR Saved Search Subscriptions",
                            "description": "The Web Service Proxy virtualizes Web service endpoints based on the WSDL files returned by the saved search."
                        },
                        {
                            "name": "OperationPriority",
                            "type": {
                                "href": "/mgmt/types/default/dmWSOperationSchedulerPriority"
                            },
                            "summary": "Control the scheduling priority and resource allocation for a specified web service operation",
                            "array": "true",
                            "cli-alias": "operation-priority",
                            "display": "Operation Priority",
                            "description": "Operation Priority"
                        },
                        {
                            "name": "OperationConformancePolicy",
                            "type": {
                                "href": "/mgmt/types/default/dmWSOperationConformancePolicy"
                            },
                            "summary": "Configuration of conformance checking of received messages for a specified web service operation",
                            "array": "true",
                            "cli-alias": "operation-conformance",
                            "display": "Operation Conformance Policy",
                            "description": "Operation Conformance Policy"
                        },
                        {
                            "name": "OperationPolicySubjectOptOut",
                            "type": {
                                "href": "/mgmt/types/default/dmWSOperationPolicySubjectOptOut"
                            },
                            "summary": "Configuration to ignore one or more policy subjects for a web service operation",
                            "array": "true",
                            "cli-alias": "operation-policy-opt-out",
                            "display": "Operation Policy Subject Opt Out",
                            "description": "Operation Policy Subject Opt Out"
                        },
                        {
                            "name": "PolicyParameter",
                            "type": {
                                "href": "/mgmt/types/default/dmWSPolicyParameters"
                            },
                            "summary": "Controls the assignment of policy parameters to WSDL files",
                            "array": "true",
                            "cli-alias": "policy-parameters",
                            "display": "Policy Parameters",
                            "description": "Policy Parameters"
                        },
                        {
                            "name": "ReliableMessaging",
                            "type": {
                                "href": "/mgmt/types/default/dmWSOperationReliableMessaging"
                            },
                            "summary": "Control reliable messaging properties for a specified web service operation",
                            "array": "true",
                            "cli-alias": "reliable-messaging",
                            "display": "Reliable Messaging",
                            "description": "Reliable Messaging"
                        },
                        {
                            "name": "WSMAgentMonitor",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Collect records for monitoring with Web Services Management agent",
                            "cli-alias": "wsmagent-monitor",
                            "display": "Monitor with Web Services Management Agent",
                            "description": "Control the collection of monitoring records for this service."
                        },
                        {
                            "name": "WSMAgentMonitorPCM",
                            "default": "all-messages",
                            "type": {
                                "href": "/mgmt/types/default/dmWSMPayloadCaptureMode"
                            },
                            "summary": "Captures the message for monitoring records with Web Services Management agent",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "WSMAgentMonitor",
                                    "evaluation": "property-equals",
                                    "value": "off"
                                }
                            },
                            "cli-alias": "wsmagent-monitor-capture-mode",
                            "display": "Message capture with Web Services Management Agent",
                            "description": "&lt;p>Select messages to capture for analysis.&lt;/p>&lt;p>Because not all Web Services Management protocols can accommodate full message-capture, configure this property only if the spooler can forward full messages.&lt;/p>&lt;p>Full message-capture incurs a performance penalty.&lt;/p>"
                        },
                        {
                            "name": "ProcessRespRulesOnOneWayMEP",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Allows the processing of response rules for one-way WSDLs.",
                            "cli-alias": "process-response-rule-for-oneway-wsdls",
                            "display": "Enable response rule processing for one-way WSDLs.",
                            "description": ""
                        }
                    ]
                },
                "description": "&lt;p>A Web Service Proxy virtualizes web services described by WSDL files. The Proxy provides alternate endpoint URLs, message validation, service level monitoring and automatic updating when provided with only one or more WSDL files.&lt;/p>"
            },
            "_links": {
                "doc": {
                    "href": "/mgmt/docs/metadata/WSGateway"
                },
                "self": {
                    "href": "/mgmt/metadata/default/WSGateway"
                }
            }
        }
    }
}