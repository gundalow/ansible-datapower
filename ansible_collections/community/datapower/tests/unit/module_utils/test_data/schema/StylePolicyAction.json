{
    "schema": {
        "types": [
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmAdminState"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmAdminState"
                    }
                },
                "type": {
                    "cli-arg": "enabled | disabled",
                    "name": "dmAdminState",
                    "value-list": {
                        "value": [
                            {
                                "name": "enabled",
                                "display": "enabled"
                            },
                            {
                                "name": "disabled",
                                "display": "disabled"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                },
                "type": {
                    "cli-arg": "string",
                    "name": "dmString"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmStyleActionType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmStyleActionType"
                    }
                },
                "type": {
                    "display": "Stylesheet Action Type",
                    "name": "dmStyleActionType",
                    "value-list": {
                        "value": [
                            {
                                "display": "Validate",
                                "description": "Performs schema-based validation against XML documents using a user-specified method.",
                                "name": "validate",
                                "summary": "Add a validate action"
                            },
                            {
                                "services": {
                                    "service": "XSLCoprocService"
                                },
                                "display": "Filter",
                                "description": "Accepts or rejects check on incoming documents.",
                                "name": "filter",
                                "summary": "Add a filter action"
                            },
                            {
                                "services": {
                                    "service": "XSLCoprocService"
                                },
                                "display": "Route using Stylesheet or XPath Expression",
                                "description": "Performs stylesheet-based routing or XPath expression-based routing. For stylesheet-based routing, provide the dynamic stylesheet that specifies the destination. For XPath expression-based routing, provide the XPath Routing Map that specifies the destination.",
                                "name": "route-action",
                                "summary": "Add a route-action action"
                            },
                            {
                                "services": {
                                    "service": [
                                        "XSLCoprocService",
                                        "XSLProxyService"
                                    ]
                                },
                                "display": "AAA",
                                "description": "Invokes an Access control policy. An access control policy identifies a set of resources and procedures that determine whether a requesting client is granted access to a specific service, file, or document. Access control policies are filters in that they accept or deny requests for specific clients.",
                                "name": "aaa",
                                "summary": "Add an aaa action"
                            },
                            {
                                "display": "Transform with Processing Instruction",
                                "description": "Uses a processing instruction in an XML document to transform that XML document. This action passes embedded parameters to the specified XSLT stylesheet. The stylesheets and parameters are embedded in the document to be processed.",
                                "name": "xformpi",
                                "summary": "Add an xformpi action"
                            },
                            {
                                "display": "Transform Binary",
                                "description": "Transforms a non-XML document, such as binary or flat text, using an XSL stylesheet. The stylesheet, in turn, uses a flat file descriptor (FFD) file.",
                                "name": "xformbin",
                                "summary": "Add an xformbin action"
                            },
                            {
                                "display": "Crypto Binary",
                                "description": "Signs, verifies, encrypts, or decrypts binary data. This action uses the syntax and methodologies described in RFC 2311, S/MIME Version 2 Message Specification, dated March, 1988, and RFC 2315, PKCS #7: Cryptographic Message Syntax 1.5, dated March, 1998.",
                                "name": "cryptobin",
                                "summary": "Add a cryptobin action"
                            },
                            {
                                "display": "Transform with XSLT",
                                "description": "Transforms an XML document using a specified XSLT stylesheet.",
                                "name": "xform",
                                "summary": "Add an xform action"
                            },
                            {
                                "services": {
                                    "service": "XSLCoprocService"
                                },
                                "display": "Convert Query Parameters to XML",
                                "description": "Converts non-XML CGI-encoded input (an HTTP POST, an HTML form, or URI parameters) into an equivalent XML message. This action in the active rule alerts the service to treat input as non-XML CGI-encoded input. For a service to use this action, the request type for that service must be set to XML.",
                                "name": "convert-http",
                                "summary": "Add a convert-http action"
                            },
                            {
                                "display": "Log",
                                "description": "Sends the contents of the input context as a log message to the identified location. The contents are sent with the log level and log type that are specified. The response, if any, is stored in the output context, if defined. When no output context is defined, this action sends the contents and does not wait for a response.",
                                "name": "log",
                                "summary": "Add a log action"
                            },
                            {
                                "display": "Results",
                                "description": "Sends a message to a URL. A results action can optionally specify a context in which to store the response.",
                                "name": "results",
                                "summary": "Add a results action"
                            },
                            {
                                "display": "Results Asynchronous",
                                "description": "Asynchronously sends a message to a URL. This action does not support sending a message to an output context. With this action, processing continues without waiting for a response.",
                                "name": "results-async",
                                "summary": "Add a results-async action"
                            },
                            {
                                "display": "Set Variable",
                                "description": "Creates a variable for use in subsequent processing in a specified context. Variables are expressed in the var://URL format. Variables cannot be set when the context is the PIPE keyword.",
                                "name": "setvar",
                                "summary": "Add a setvar action"
                            },
                            {
                                "display": "Fetch",
                                "description": "Uses a user agent to retrieve a document from a specified location.",
                                "name": "fetch",
                                "summary": "Add a fetch action"
                            },
                            {
                                "display": "Extract using XPath",
                                "description": "Applies an XPath expression to a specified context and stores the result in another context.",
                                "name": "extract",
                                "summary": "Add an extract action"
                            },
                            {
                                "services": {
                                    "service": "XSLCoprocService"
                                },
                                "display": "Rewrite Header",
                                "description": "Rewrites HTTP headers or URLs using a URL rewrite policy.",
                                "name": "rewrite",
                                "summary": "Add a rewrite action"
                            },
                            {
                                "services": {
                                    "service": "XSLCoprocService"
                                },
                                "display": "Route using Variables",
                                "description": "Performs dynamic, variable-based routing.",
                                "name": "route-set",
                                "summary": "Add a route-set action"
                            },
                            {
                                "services": {
                                    "service": [
                                        "XSLCoprocService",
                                        "XSLProxyService"
                                    ]
                                },
                                "display": "Strip Attachments",
                                "description": "Removes all or specified MIME attachments from a specified context.",
                                "name": "strip-attachments",
                                "summary": "Add a strip-attachments action"
                            },
                            {
                                "display": "Call Processing Rule",
                                "description": "Invokes a named, reusable rule. After the action completes, processing continues to the next action, if any.",
                                "name": "call",
                                "summary": "Add a call action"
                            },
                            {
                                "display": "On Error",
                                "description": "&lt;p>Defines a named rule that enables user-defined error handling when subsequent processing encounters errors. The on-error action either stops processing or continues to the next processing step. Optional, the action calls the named rule to handle the error condition. Without an on-error action, the default error handling is to stop processing and log a message.&lt;/p>&lt;p>A processing rule can contain one or more on-error actions. Each action defines error handling for subsequent actions until another on-error action is found. When another action is found, error-handling procedures are set to the new on-error action. As such, this action enables conditional error handling in a procssing context.&lt;/p>&lt;p>Note that a processing policy can contain on-error actions and an error rule. When a processing policy contains both on-error actions and an error rule, the on-error action overrides the error rule. An error rule, if the processing policy contains one, is invoked when an error occurs during processing. In this case, the error rule acts as an error handler.&lt;/p>",
                                "name": "on-error",
                                "summary": "Add an on-error action"
                            },
                            {
                                "services": {
                                    "service": "WSGateway"
                                },
                                "display": "Checkpoint Event",
                                "description": "Collects information for WS-Management agents and Service Level Monitors.",
                                "name": "checkpoint",
                                "summary": "Add a checkpoint action"
                            },
                            {
                                "services": {
                                    "service": [
                                        "XSLCoprocService",
                                        "XSLProxyService",
                                        "XMLFirewallService"
                                    ]
                                },
                                "display": "SLM",
                                "description": "Assigns and enforces an SLM Policy Statement to a processing rule. The SLM Policy operates on the Input context.",
                                "name": "slm",
                                "summary": "Enforce an SLM policy statement"
                            },
                            {
                                "services": {
                                    "service": [
                                        "XSLCoprocService",
                                        "XSLProxyService"
                                    ]
                                },
                                "display": "SQL",
                                "description": "Establishes a connection to a configured database and runs SQL statements against the configured SQL data source. The results can be used for further processing.",
                                "name": "sql",
                                "summary": "Run an SQL statement"
                            },
                            {
                                "services": {
                                    "service": [
                                        "XSLCoprocService",
                                        "XSLProxyService"
                                    ]
                                },
                                "display": "Conditional",
                                "description": "Evaluates a list of XPath expressions against the input context, and then runs the action that is associated with the first one that matches.",
                                "name": "conditional",
                                "summary": "Add a conditional action"
                            },
                            {
                                "services": {
                                    "service": [
                                        "XSLCoprocService",
                                        "XSLProxyService"
                                    ]
                                },
                                "display": "For Each",
                                "description": "Loops through either all of the nodes in a nodeset or otherwise all of the natural numbers through the upper count limit. For each loop iteration, it runs the LoopAction.",
                                "name": "for-each",
                                "summary": "Add a for-each action"
                            },
                            {
                                "services": {
                                    "service": [
                                        "XSLCoprocService",
                                        "XSLProxyService"
                                    ]
                                },
                                "display": "Event Sink",
                                "description": "Looks through the list of named actions and waits for each of them to complete asynchronously in this session at least once. Once they all have, then if any of them failed, then this action will fail with one of their errors. If they all eventually finish and succeeded, then this action will succeed, and control flow will continue. If this instruction times out while waiting for them to all finish (or even to be started), then this instruction will fail. This instruction can not be Asynchronous, it is inherently part of synchronous processing of asynchronous actions.",
                                "name": "event-sink",
                                "summary": "Add an event-sink action"
                            },
                            {
                                "services": {
                                    "service": "XSLCoprocService"
                                },
                                "display": "Method Rewrite",
                                "description": "Rewrites the HTTP method to a new method type.",
                                "name": "method-rewrite",
                                "summary": "Add an HTTP method rewrite action"
                            },
                            {
                                "display": "Transform",
                                "description": "Transforms an input document (XML or non-XML, such as binary or flat text), using an optional processing control file.",
                                "name": "xformng",
                                "summary": "Add a Transform action"
                            },
                            {
                                "services": {
                                    "service": "XSLCoprocService"
                                },
                                "display": "GatewayScript",
                                "description": "Executes a GatewayScript",
                                "name": "gatewayscript",
                                "summary": "Add a GatewayScript action"
                            },
                            {
                                "services": {
                                    "service": "XSLCoprocService"
                                },
                                "display": "JSON Web Sign",
                                "description": "Sign a message using JSON Web Signature standard",
                                "name": "jose-sign",
                                "summary": "Add a JSON Web Sign action"
                            },
                            {
                                "services": {
                                    "service": "XSLCoprocService"
                                },
                                "display": "JSON Web Verify",
                                "description": "Verify a JSON Web Signature message",
                                "name": "jose-verify",
                                "summary": "Add a JSON Web Verify action"
                            },
                            {
                                "services": {
                                    "service": "XSLCoprocService"
                                },
                                "display": "JSON Web Encrypt",
                                "description": "Encrypt a message using JSON Web Encryption standard",
                                "name": "jose-encrypt",
                                "summary": "Add a JSON Web Encrypt action"
                            },
                            {
                                "services": {
                                    "service": "XSLCoprocService"
                                },
                                "display": "JSON Web Decrypt",
                                "description": "Decrypt a JSON Web Encryption message",
                                "name": "jose-decrypt",
                                "summary": "Add a JSON Web Decrypt action"
                            },
                            {
                                "display": "Parse",
                                "description": "Parse a payload and apply threat protection settings.",
                                "name": "parse",
                                "summary": "Parse a payload"
                            }
                        ]
                    },
                    "summary": "Stylesheet Action Type"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmDynamicParseSettingsReference"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmDynamicParseSettingsReference"
                    }
                },
                "type": {
                    "name": "dmDynamicParseSettingsReference",
                    "properties": {
                        "property": [
                            {
                                "name": "URL",
                                "cli-alias": "url",
                                "summary": "Specifies the URL of a resource with one or more properties for the dynamic object",
                                "subtype": "dmURLorContext",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "display": "URL reference",
                                "description": "Specifies a URL to a file that contains serialized XML or JSON properties to be merged into the dynamic object. These properties override any existing literal or default properties. The URL can contain variable references, and fields within the associated file can also contain variable references."
                            },
                            {
                                "description": "Specifies a literal string that defines serialized XML or JSON properties for merging into the dynamic object. These properties override the existing default properties. The literal string can contain variable references.",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "summary": "Specifies a literal configuration string with one or more properties for the dynamic object",
                                "cli-alias": "literal",
                                "display": "Literal configuration",
                                "name": "Literal"
                            },
                            {
                                "description": "Specifies an existing object from which to retrieve default property values for the dynamic object. If an object is not specified, then the URL reference, the literal configuration, or the combination of URL reference and literal configuration fully define the action.",
                                "type": {
                                    "href": "/mgmt/types/default/dmReference",
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/ParseSettings"
                                    }
                                },
                                "summary": "Specifies an existing object with default property values for the dynamic object",
                                "cli-alias": "default",
                                "display": "Object reference",
                                "name": "Default"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmParseMetricsResultType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmParseMetricsResultType"
                    }
                },
                "type": {
                    "display": "Parse metrics result type",
                    "name": "dmParseMetricsResultType",
                    "value-list": {
                        "value": [
                            {
                                "display": "None",
                                "description": "When set to 'None', the metrics for the parse result are not saved in a context.",
                                "name": "none",
                                "summary": "Do not save metrics in a context."
                            },
                            {
                                "display": "XML",
                                "description": "When set to 'XML', the metrics for the parse result are saved in the specified context in XML format.",
                                "name": "xml",
                                "summary": "Save result metrics in XML format."
                            },
                            {
                                "display": "JSON",
                                "description": "When set to 'JSON', the metrics for the parse result are saved in the specified context in JSON format.",
                                "name": "json",
                                "summary": "Save result metrics in JSON format."
                            },
                            {
                                "display": "GraphQL",
                                "description": "When set to 'GraphQL', the metrics for the parse result are saved in the specified context in GraphQL format.",
                                "name": "graphql",
                                "summary": "Save result metrics in GraphQL format."
                            }
                        ]
                    },
                    "summary": "Language format to save parse metrics result"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                },
                "type": {
                    "cli-arg": "object",
                    "name": "dmReference"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmXformNGBinaryInputLanguage"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmXformNGBinaryInputLanguage"
                    }
                },
                "type": {
                    "value-list": {
                        "value": [
                            {
                                "display": "XML",
                                "description": ">The XML option specifies that the relevant data, either an input or output to this transform action, is in XML format. It must be well-formed XML, and can be parsed as XML, but will not be understood according to a XML Schema by this transform action.",
                                "name": "xml",
                                "summary": "Format is XML"
                            },
                            {
                                "display": "DFDL",
                                "description": "The DFDL option specifies that the relevant data, either an input or output to this transform action, has a format that is specified by a DFDL Schema. Types should be understood per the DFDL Schema. A DFDL Schema must be specified.",
                                "name": "dfdl",
                                "summary": "Format is DFDL"
                            },
                            {
                                "display": "XSD",
                                "description": "The XSD option specifies that the relevant data, either an input or output to this transform action, has a format that is XML as specified by a W3C XML Schema. Types should be understood per the XML Schema. An XML Schema must be specified.",
                                "name": "xsd",
                                "summary": "Format is XSD"
                            },
                            {
                                "display": "JSON",
                                "description": "The JSON option specifies that the relevant data, either an input or output to this transform action, is in JSON format. It must be well-formed JSON, and can be parsed as JSON, but will not be type assessed.",
                                "name": "json",
                                "summary": "Format is JSON"
                            }
                        ]
                    },
                    "display": "Input Language",
                    "description": "Specify the input language for the transformation. If the relevant data is a parsed XML or JSON tree, the transformation accepts it regardless of its language.",
                    "name": "dmXformNGBinaryInputLanguage",
                    "summary": "Binary input specification language"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmURL"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmURL"
                    }
                },
                "type": {
                    "cli-arg": "url",
                    "name": "dmURL"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmXformNGTransformLanguage"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmXformNGTransformLanguage"
                    }
                },
                "type": {
                    "value-list": {
                        "value": [
                            {
                                "display": "None (Identity)",
                                "description": "Input and output mappings may be specified but no additional transformation is applicable.",
                                "name": "none",
                                "summary": "No additional transformation is specified"
                            },
                            {
                                "display": "XQuery",
                                "description": "The XQuery option specifies that the transform is specified as an XQuery file.",
                                "name": "xquery",
                                "summary": "Format is XQuery"
                            }
                        ]
                    },
                    "display": "Transform Language",
                    "description": "Specify the transformation language.",
                    "name": "dmXformNGTransformLanguage",
                    "summary": "Transform specification language"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmXformNGBinaryOutputLanguage"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmXformNGBinaryOutputLanguage"
                    }
                },
                "type": {
                    "value-list": {
                        "value": [
                            {
                                "display": "Default",
                                "description": "The Default option specifies that the output to this transform action, has a format that will default based on the transformation. It is allowed only on output, not for input.",
                                "name": "default",
                                "summary": "Format Defaults based on the transformation"
                            },
                            {
                                "display": "DFDL",
                                "description": "The DFDL option specifies that the relevant data, either an input or output to this transform action, has a format that is specified by a DFDL Schema. Types should be understood per the DFDL Schema. A DFDL Schema must be specified.",
                                "name": "dfdl",
                                "summary": "Format is DFDL"
                            }
                        ]
                    },
                    "display": "Output Language",
                    "description": "Specify the output language for the transformation.",
                    "name": "dmXformNGBinaryOutputLanguage",
                    "summary": "Binary output specification language"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                },
                "type": {
                    "cli-arg": "on | off",
                    "name": "dmToggle",
                    "value-list": {
                        "value": [
                            {
                                "name": "on",
                                "display": "on"
                            },
                            {
                                "name": "off",
                                "display": "off"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmTxMode"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmTxMode"
                    }
                },
                "type": {
                    "display": "ITX Map Mode",
                    "name": "dmTxMode",
                    "value-list": {
                        "value": [
                            {
                                "display": "Exported Files (Deprecated)",
                                "description": "Processes the map that are in exported files without special options. The map file must be an exported XML file from Design Studio.",
                                "name": "default",
                                "summary": "Process the map provided in exported files"
                            },
                            {
                                "display": "Exported Files - Mapping Logic Disabled (Deprecated)",
                                "description": "&lt;p>This option is only valid with maps that have exactly one input card and one output card. Further, the type of at least one of the cards must have XML intent. Note that, while legal, if both cards have XML intent, this option disables all transformation, which effectively makes the map an identity transform.&lt;/p>&lt;p>If the input is non-XML, the input TypeTree alone is used to transform the input to an XML representation of the underlying binary format. That XML representation is then be sent directly to the output context without transformation. Note that the format of the XML representation corresponds to the &lt;i>input&lt;/i> TypeTree and might not match the XML format described by the output TypeTree.&lt;/p>&lt;p>If the output is non-XML, the output TypeTree alone is used to transform the XML input to the output binary format. Note that the format of the XML input must correspond to the &lt;i>output&lt;/i> TypeTree and might not match the XML format described by the input TypeTree.&lt;/p>&lt;p>The XML format produced or consumed by the binary-to-XML transformation corresponds directly to the relevant input or output TypeTree, where each ITEM or GROUP is represented by an element whose name is the absolute name of the type. Spaces are replaced by two dashes and other non-NCName characters are escaped as \"-nn-\", where nn is the decimal value of the character's code-point without leading zeros. If the first character in the name, after any escaping, is not an XML letter or underscore, the name is preceded by an underscore. Therefore, a Type named &lt;tt>Foo Bar Root&lt;/tt> corresponds to an element named &lt;tt>Foo--Bar--Root&lt;/tt> , a Type named &lt;tt>Foo_Bar Baz? Root&lt;/tt> corresponds to an element named &lt;tt>Foo_Bar--Baz-63---Root&lt;/tt> , and a Type named &lt;tt>#93 Root&lt;/tt> corresponds to an element named &lt;tt>_-35-93--Root&lt;/tt> .&lt;/p>&lt;p>Only concrete, or unpartitioned, ITEM or GROUP is represented in the XML format. When a binary input ITEM or GROUP is partitioned, the XML representation that is produced has an element corresponding to the actual partition that is seen in the input, not the partitioned base type. When a binary output ITEM or GROUP is partitioned, the input XML must contain an element that corresponds to the actual partition to produce, not the partitioned base type.&lt;/p>",
                                "name": "no-map",
                                "summary": "Process only input/output TypeTrees without mapping logic"
                            },
                            {
                                "display": "DPA",
                                "description": "Processes map in DPA file without special options. The map file must be a map file that was created in Design Studio with the DataPower option and must be compiled in Design Studio before it is transferred to the DataPower Gateway. The map file has the .dpa file extension.",
                                "name": "dpa",
                                "summary": "Process map in DPA file"
                            }
                        ]
                    },
                    "summary": "ITX mapping behavior"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmNamedInOutLocationType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmNamedInOutLocationType"
                    }
                },
                "type": {
                    "display": "Locate Named Inputs and Outputs",
                    "name": "dmNamedInOutLocationType",
                    "value-list": {
                        "value": [
                            {
                                "display": "Default",
                                "description": "The action uses the input and output contexts that are defined for the action. This value works when the map defines only one input and only one output.",
                                "name": "default",
                                "summary": "Uses input and output contexts defined at action level"
                            },
                            {
                                "display": "Explicit",
                                "description": "The action uses the contexts that are explicitly defined for the action. The input and output contexts that are defined at the action level are ignored.",
                                "name": "explicit",
                                "summary": "Uses explicitly defined named inputs and named outputs"
                            },
                            {
                                "display": "Dynamic (Deprecated)",
                                "description": "Used by IBM Transformation Extender Design Studio to test its generated maps against a DataPower Gateway. This value is not valid for use on the DataPower Gateway during service or action development. In other words, do not use this value in a development, test, or production environment on a DataPower Gateway.",
                                "name": "dynamic",
                                "summary": "For Design Studio testing purposes only (Deprecated)."
                            }
                        ]
                    },
                    "summary": "Named inputs and outputs can be specified explicitly or dynamically, or can default to the unnamed regular input and output."
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmNamedInOut"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmNamedInOut"
                    }
                },
                "type": {
                    "name": "dmNamedInOut",
                    "properties": {
                        "property": [
                            {
                                "display": "Name",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "&lt;p>Enter the name of an input or output expected by the map. This must be the same as a cardname identified in the map file. For example, \"cardnum1\".&lt;/p>",
                                "name": "Name"
                            },
                            {
                                "display": "Context",
                                "required": "true",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "Enter the name of the DataPower processing context that contains the input data or will contain the output data corresponding to the input or output expected by the map. Use INPUT to designate the context containing the original request. Use OUTPUT to designate the standard DataPower output context.",
                                "name": "Context"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmXPathExpr"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmXPathExpr"
                    }
                },
                "type": {
                    "cli-arg": "xpath",
                    "name": "dmXPathExpr"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmSSLClientConfigType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmSSLClientConfigType"
                    }
                },
                "type": {
                    "name": "dmSSLClientConfigType",
                    "value-list": {
                        "value": [
                            {
                                "name": "proxy",
                                "display": "Proxy Profile"
                            },
                            {
                                "name": "client",
                                "display": "Client Profile"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmStylesheetParameter"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmStylesheetParameter"
                    }
                },
                "type": {
                    "name": "dmStylesheetParameter",
                    "properties": {
                        "property": [
                            {
                                "display": "Parameter Name",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "description": "&lt;p>Specify the name for the stylesheet parameter. The following list identifies common stylesheet parameters:&lt;/p>&lt;ul>&lt;li>decrypt-key: For decryption operations, the name of the Key object to be used.&lt;/li>&lt;li>keypair-key: For signing operations, the name of the Key object to be used.&lt;/li>&lt;li>keypair-cert: For signing operations, the name of the Certificate object to be used.&lt;/li>&lt;li>recipient: For encryption operations, the name of the Certificate object for the intended recipient.&lt;/li>&lt;li>valcred: For authentication, the name of the Validation Credentials object to be used.&lt;/li>&lt;/ul>",
                                "name": "ParameterName",
                                "summary": "Name of stylesheet parameter"
                            },
                            {
                                "description": "Specify the value for the parameter. Typically, the value is the name of a configuration object.",
                                "required": "true",
                                "summary": "Value for stylesheet parameter",
                                "type": {
                                    "href": "/mgmt/types/default/dmString"
                                },
                                "display": "Parameter Value",
                                "name": "ParameterValue"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmStyleErrorMode"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmStyleErrorMode"
                    }
                },
                "type": {
                    "display": "Error Mode",
                    "name": "dmStyleErrorMode",
                    "value-list": {
                        "value": [
                            {
                                "display": "Cancel",
                                "name": "abort",
                                "summary": "Cancel the processing of the current rule"
                            },
                            {
                                "display": "Continue",
                                "name": "continue",
                                "summary": "Continue processing the rule"
                            },
                            {
                                "display": "Alternative",
                                "name": "alternative",
                                "summary": "Invoke alternative rule"
                            }
                        ]
                    },
                    "summary": "Action to take on error"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmActionOutputType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmActionOutputType"
                    }
                },
                "type": {
                    "display": "Action Output Type",
                    "name": "dmActionOutputType",
                    "value-list": {
                        "value": [
                            {
                                "display": "Default",
                                "description": "Examines the content-type in the response. If it indicates XML or is not provided, parse the response as XML. For any other value, store the response without parsing.",
                                "name": "default",
                                "summary": "Examine the content-type and determine whether to parse the response."
                            },
                            {
                                "display": "Binary",
                                "description": "Stores the response without parsing.",
                                "name": "binary",
                                "summary": "Store without parsing"
                            },
                            {
                                "display": "XML",
                                "description": "Parses the response as XML.",
                                "name": "xml",
                                "summary": "Parse as XML"
                            }
                        ]
                    },
                    "summary": "Action Output Type"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmLogLevel"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmLogLevel"
                    }
                },
                "type": {
                    "display": "Log Level",
                    "name": "dmLogLevel",
                    "value-list": {
                        "value": [
                            {
                                "display": "emergency",
                                "description": "An emergency-level message. The system is unusable.",
                                "name": "emerg",
                                "summary": "System unusable"
                            },
                            {
                                "display": "alert",
                                "description": "An alert-level message. Immediate action must be taken.",
                                "name": "alert",
                                "summary": "Immediate action required"
                            },
                            {
                                "display": "critical",
                                "description": "A critical message. Immediate action should be taken.",
                                "name": "critic",
                                "summary": "Critical condition"
                            },
                            {
                                "display": "error",
                                "description": "An error message. Processing might continue, but action should be taken.",
                                "name": "error",
                                "summary": "Error condition"
                            },
                            {
                                "display": "warning",
                                "description": "A warning message. Processing should continue, but action should be taken.",
                                "name": "warn",
                                "summary": "Warning condition"
                            },
                            {
                                "display": "notice",
                                "description": "A notice message. Processing continues, but action might need to be taken.",
                                "name": "notice",
                                "summary": "Normal but significant condition"
                            },
                            {
                                "display": "information",
                                "description": "An information message. No action required.",
                                "name": "info",
                                "summary": "Informational message"
                            },
                            {
                                "display": "debug",
                                "description": "A debug message for processing information to help during troubleshooting.",
                                "name": "debug",
                                "summary": "Debug message"
                            }
                        ]
                    },
                    "summary": "Log level"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmCheckpointEvent"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmCheckpointEvent"
                    }
                },
                "type": {
                    "name": "dmCheckpointEvent",
                    "value-list": {
                        "value": [
                            {
                                "display": "Request",
                                "description": "Signifies the input of a server-originated document.",
                                "name": "Request"
                            },
                            {
                                "display": "Response",
                                "description": "Signifies the input of a client-originated document.",
                                "name": "Response"
                            },
                            {
                                "display": "Fault",
                                "description": "Signifies a fault condition.",
                                "name": "Fault"
                            },
                            {
                                "display": "Authentication Complete",
                                "description": "Signifies the completion of an authentication process.",
                                "name": "AuthComplete"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmSOAPValidation"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmSOAPValidation"
                    }
                },
                "type": {
                    "display": "SOAP Validation",
                    "name": "dmSOAPValidation",
                    "value-list": {
                        "value": [
                            {
                                "display": "Body",
                                "description": "Validate only the contents of the SOAP Body element. Do not apply special processing to SOAP faults.",
                                "name": "body",
                                "summary": "Validate Body"
                            },
                            {
                                "display": "Body or Details",
                                "description": "If the document is a SOAP fault, validate the contents of the detail element for SOAP faults. If the document is not a SOAP fault, validate the contents of the Body element.",
                                "name": "body-or-detail",
                                "summary": "Validate detail for faults"
                            },
                            {
                                "display": "Ignore Faults",
                                "description": "If the document is a SOAP fault, pass it through without validation. If the document is not a SOAP fault, validate the contents of the SOAP Body element.",
                                "name": "ignore-faults",
                                "summary": "Do not validate faults"
                            },
                            {
                                "display": "Envelope",
                                "description": "Validate the entire message, including the SOAP Envelope (or other wrapper).",
                                "name": "envelope",
                                "summary": "Validate entire message"
                            }
                        ]
                    },
                    "summary": "How to validate SOAP documents and faults"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmSQLSourceType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmSQLSourceType"
                    }
                },
                "type": {
                    "display": "SQL Source",
                    "description": "",
                    "value-list": {
                        "value": [
                            {
                                "display": "Static",
                                "description": "Run a predefined, static SQL query. The SQL statement is identical each time the action is invoked.",
                                "name": "static"
                            },
                            {
                                "display": "Variable",
                                "description": "Run an SQL statement that is stored in a named variable. This variable must be set earlier in the processing.",
                                "name": "variable"
                            },
                            {
                                "display": "Stylesheet",
                                "description": "Run an SQL statement that is constructed as the result of processing a stylesheet against the input to the action.",
                                "name": "stylesheet"
                            }
                        ]
                    },
                    "name": "dmSQLSourceType"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmJOSESerialization"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmJOSESerialization"
                    }
                },
                "type": {
                    "value-list": {
                        "value": [
                            {
                                "display": "Compact",
                                "description": "Compact serialization",
                                "name": "compact",
                                "summary": "Compact serialization"
                            },
                            {
                                "display": "General JSON",
                                "description": "General JSON serialization",
                                "name": "json",
                                "summary": "General JSON serialization"
                            },
                            {
                                "display": "Flattened JSON",
                                "description": "Flattened JSON serialization",
                                "name": "json_flat",
                                "summary": "Flattened JSON serialization"
                            }
                        ]
                    },
                    "display": "JSON serialization",
                    "description": "The JSON serialization format in the JSON Web Sign and the JSON Web Encrypt actions.",
                    "name": "dmJOSESerialization",
                    "summary": "JSON serialization"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmJWEEncAlgorithm"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmJWEEncAlgorithm"
                    }
                },
                "type": {
                    "value-list": {
                        "value": [
                            {
                                "display": "A128CBC-HS256",
                                "description": "AES_128_CBC_HMAC_SHA_256 authenticated encryption algorithm",
                                "name": "A128CBC-HS256",
                                "summary": "AES_128_CBC_HMAC_SHA_256 authenticated encryption algorithm"
                            },
                            {
                                "display": "A192CBC-HS384",
                                "description": "AES_192_CBC_HMAC_SHA_384 authenticated encryption algorithm",
                                "name": "A192CBC-HS384",
                                "summary": "AES_192_CBC_HMAC_SHA_384 authenticated encryption algorithm"
                            },
                            {
                                "display": "A256CBC-HS512",
                                "description": "AES_256_CBC_HMAC_SHA_512 authenticated encryption algorithm",
                                "name": "A256CBC-HS512",
                                "summary": "AES_256_CBC_HMAC_SHA_512 authenticated encryption algorithm"
                            },
                            {
                                "display": "A128GCM",
                                "description": "AES GCM using 128-bit key",
                                "name": "A128GCM",
                                "summary": "AES GCM using 128-bit key"
                            },
                            {
                                "display": "A192GCM",
                                "description": "AES GCM using 192-bit key",
                                "name": "A192GCM",
                                "summary": "AES GCM using 192-bit key"
                            },
                            {
                                "display": "A256GCM",
                                "description": "AES GCM using 256-bit key",
                                "name": "A256GCM",
                                "summary": "AES GCM using 256-bit key"
                            }
                        ]
                    },
                    "display": "JSON Web Encrypt cryptographic algorithm",
                    "description": "Cryptographic algorithm for JSON Web Encrypt.",
                    "name": "dmJWEEncAlgorithm",
                    "summary": "JSON Web Encrypt cryptographic algorithm"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmJOSEVerifyType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmJOSEVerifyType"
                    }
                },
                "type": {
                    "display": "Identifier Type",
                    "name": "dmJOSEVerifyType",
                    "value-list": {
                        "value": [
                            {
                                "display": "Signature Identifiers",
                                "description": "Use Signature Identifiers property",
                                "name": "identifiers",
                                "summary": "Use Signature Identifiers property"
                            },
                            {
                                "display": "Single Identifier - Certificate",
                                "description": "Use Single Identifier - Certificate property",
                                "name": "single-cert",
                                "summary": "Use Single Identifier - Certificate property"
                            },
                            {
                                "display": "Single Identifier - Shared Secret Key",
                                "description": "Use Single Identifier - Shared Secret Key property",
                                "name": "single-sskey",
                                "summary": "Use Single Identifier - Shared Secret Key property"
                            }
                        ]
                    },
                    "summary": "Identifier Type"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmJOSEDecryptType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmJOSEDecryptType"
                    }
                },
                "type": {
                    "display": "Identifier Type",
                    "name": "dmJOSEDecryptType",
                    "value-list": {
                        "value": [
                            {
                                "display": "Recipient Identifiers",
                                "description": "Use Recipient Identifier property",
                                "name": "identifiers",
                                "summary": "Use Recipient Identifiers property"
                            },
                            {
                                "display": "Single Identifier - Private Key",
                                "description": "Use Single Identifier - Private Key property",
                                "name": "single-key",
                                "summary": "Use Single Identifier - Private Key property"
                            },
                            {
                                "display": "Single Identifier - Shared Secret Key",
                                "description": "Use Single Identifier - Shared Secret Key property",
                                "name": "single-sskey",
                                "summary": "Use Single Identifier - Shared Secret Key property"
                            },
                            {
                                "display": "Direct Key",
                                "description": "Use Direct Key property",
                                "name": "direct-key",
                                "summary": "Use Direct Key property"
                            }
                        ]
                    },
                    "summary": "Identifier Type"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmCondition"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmCondition"
                    }
                },
                "type": {
                    "properties": {
                        "property": [
                            {
                                "display": "XPath expression",
                                "required": "true",
                                "type": {
                                    "href": "/mgmt/types/default/dmXPathExpr"
                                },
                                "name": "Expression",
                                "summary": "The expression to check for this conditional"
                            },
                            {
                                "name": "ConditionAction",
                                "required": "true",
                                "summary": "The action to run if the expression was matched",
                                "subtype": "dmReference",
                                "type": {
                                    "href": "/mgmt/types/default/dmString",
                                    "reference-to": {
                                        "href": "/mgmt/metadata/default/StylePolicyAction"
                                    }
                                },
                                "display": "Action"
                            }
                        ]
                    },
                    "summary": "XPath condition to check and action to run if it is found.",
                    "description": "Used for the conditional action, this is a single condition which maps an XPath condition to search for in the input context to an action to run if it is found. If it is not found, then other conditions can be checked.",
                    "name": "dmCondition",
                    "display": "Map XPath condition to Action to run"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmResultsMultiWayMode"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmResultsMultiWayMode"
                    }
                },
                "type": {
                    "display": "Results Multi-Way Mode",
                    "name": "dmResultsMultiWayMode",
                    "value-list": {
                        "value": [
                            {
                                "display": "First Available",
                                "name": "first-available",
                                "summary": "Send to only the first available target"
                            },
                            {
                                "display": "Require All",
                                "name": "require-all",
                                "summary": "Send to all targets, all must succeed"
                            },
                            {
                                "display": "Attempt All",
                                "name": "attempt-all",
                                "summary": "Send to all targets, errors are non-fatal"
                            }
                        ]
                    },
                    "summary": "Method to handle multiple targets in a results action"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmUInt32"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmUInt32"
                    }
                },
                "type": {
                    "cli-arg": "number",
                    "minimum": 0,
                    "name": "dmUInt32",
                    "maximum": "0xFFFFFFFF"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmTimeIntervalMillis"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmTimeIntervalMillis"
                    }
                },
                "type": {
                    "cli-arg": "milliseconds",
                    "minimum": 0,
                    "name": "dmTimeIntervalMillis",
                    "maximum": "0xFFFFFFFF"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmIteratorType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmIteratorType"
                    }
                },
                "type": {
                    "display": "Iterator Type",
                    "name": "dmIteratorType",
                    "value-list": {
                        "value": [
                            {
                                "display": "XPath Expression",
                                "name": "XPATH",
                                "summary": "XPath Expression which is applied against input context to derive a nodeset of nodes, then loop with one iteration per node in the nodeset."
                            },
                            {
                                "display": "Count",
                                "name": "COUNT",
                                "summary": "Integer count, there is one loop iteration for each number from one (1) through the count, inclusive."
                            }
                        ]
                    },
                    "summary": "Type of loop iteration"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmHTTPMethodRESTType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmHTTPMethodRESTType"
                    }
                },
                "type": {
                    "display": "HTTP method",
                    "name": "dmHTTPMethodRESTType",
                    "value-list": {
                        "value": [
                            {
                                "display": "POST",
                                "name": "POST",
                                "summary": "Specifies the HTTP POST method type"
                            },
                            {
                                "display": "GET",
                                "name": "GET",
                                "summary": "Specifies the HTTP GET method type"
                            },
                            {
                                "display": "PUT",
                                "name": "PUT",
                                "summary": "Specifies the HTTP PUT method type"
                            },
                            {
                                "display": "DELETE",
                                "name": "DELETE",
                                "summary": "Specifies the HTTP DELETE method type"
                            },
                            {
                                "display": "HEAD",
                                "name": "HEAD",
                                "summary": "Specifies the HTTP HEAD method type"
                            }
                        ]
                    },
                    "summary": "HTTP method types"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmHTTPMethodRESTType2"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmHTTPMethodRESTType2"
                    }
                },
                "type": {
                    "display": "HTTP method",
                    "name": "dmHTTPMethodRESTType2",
                    "value-list": {
                        "value": [
                            {
                                "display": "POST",
                                "name": "POST",
                                "summary": "Specifies the HTTP POST method type"
                            },
                            {
                                "display": "PUT",
                                "name": "PUT",
                                "summary": "Specifies the HTTP PUT method type"
                            },
                            {
                                "display": "DELETE",
                                "name": "DELETE",
                                "summary": "Specifies the HTTP DELETE method type"
                            }
                        ]
                    },
                    "summary": "HTTP method types"
                }
            }
        ],
        "metadata": {
            "object": {
                "licensed-feature": "IDG",
                "name": "StylePolicyAction",
                "property-group": [
                    {
                        "member": [
                            {
                                "name": "UserSummary"
                            },
                            {
                                "name": "Type"
                            }
                        ],
                        "name": "summary"
                    },
                    {
                        "member": {
                            "name": "ParseSettingsReference"
                        },
                        "display": "Parse Settings",
                        "description": "There are three pieces of the Parse Settings. &lt;ul>&lt;li>&lt;b>Default&lt;/b>: A static Parse Settings object for defaults.&lt;/li>&lt;li>&lt;b>Literal&lt;/b>: A literal XML or JSON string with overrides. Use this to avoid duplicating static objects when there's only a small change.&lt;/li>&lt;li>&lt;b>URL&lt;/b>: A URL to XML or JSON definition of dynamic override properties.&lt;/li>&lt;/ul>",
                        "name": "parsesettings",
                        "summary": "The static and dynamic pieces of the parse settings."
                    }
                ],
                "uri": "xml/action",
                "actions": {
                    "action": {
                        "name": "TestURLRewrite",
                        "parameters": {
                            "parameter": {
                                "name": "URLRewritePolicy",
                                "select": "Policy"
                            }
                        },
                        "display": "Test URL"
                    }
                },
                "display": "Processing Action",
                "cmd-group": "stylesheetaction",
                "cli-alias": "action",
                "properties": {
                    "property": [
                        {
                            "name": "mAdminState",
                            "default": "enabled",
                            "type": {
                                "href": "/mgmt/types/default/dmAdminState"
                            },
                            "label": "Enable administrative state",
                            "summary": "Set the administrative state of this configuration.",
                            "cli-alias": "admin-state",
                            "display": "Administrative state",
                            "hoverhelp": "&lt;p>Set the administrative state of the configuration.&lt;/p>&lt;ul>&lt;li>To make active, set the check box.&lt;/li>&lt;li>To make inactive, clear the check box.&lt;/li>&lt;/ul>",
                            "description": "&lt;p>The administrative state of the configuration.&lt;/p>&lt;ul>&lt;li>To make active, set to enabled.&lt;/li>&lt;li>To make inactive, set to disabled.&lt;/li>&lt;/ul>"
                        },
                        {
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Comments",
                            "cli-alias": "summary",
                            "name": "UserSummary",
                            "summary": "Brief summary for user annotation."
                        },
                        {
                            "name": "Type",
                            "default": "xform",
                            "type": {
                                "href": "/mgmt/types/default/dmStyleActionType"
                            },
                            "required": "true",
                            "summary": "Action",
                            "cli-alias": "type",
                            "display": "Action Type",
                            "description": "Select an action to be performed by the processing rule. The default is Transform."
                        },
                        {
                            "name": "Input",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "rewrite",
                                        "route-set",
                                        "on-error",
                                        "method-rewrite"
                                    ]
                                }
                            },
                            "summary": "The target context",
                            "cli-alias": "input",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Input",
                            "description": "Input identifies the context that contains the document acted upon by this action. Enter the context name or string PIPE used for streaming execution mode, or the string INPUT which identifies the original input into this policy rule. &lt;p>Not used when the action type is rewrite, method-rewrite, or route-set and otherwise required.&lt;/p>"
                        },
                        {
                            "name": "Transform",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-in-list",
                                            "value": [
                                                "filter",
                                                "cryptobin"
                                            ]
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "Type",
                                                    "evaluation": "property-equals",
                                                    "value": "xformng"
                                                },
                                                {
                                                    "property-name": "TransformLanguage",
                                                    "evaluation": "property-does-not-equal",
                                                    "value": "none"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "summary": "Location of the XSL stylesheet or transform file",
                            "cli-alias": "transform",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "Type",
                                                    "evaluation": "property-equals",
                                                    "value": "xformng"
                                                },
                                                {
                                                    "property-name": "TransformLanguage",
                                                    "evaluation": "property-equals",
                                                    "value": "none"
                                                }
                                            ]
                                        },
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-not-in-list",
                                            "value": [
                                                "route-action",
                                                "xformpi",
                                                "xformbin",
                                                "xformng",
                                                "xform",
                                                "sql"
                                            ]
                                        }
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Transform File",
                            "description": "&lt;p>Specify the location of the XSL stylesheet or transform file to use for document filtering or transformations. Specify the location with one of the following formats: &lt;ul>&lt;li>Use a URL, for example, &lt;tt>store:///myTest.xsl&lt;/tt>&lt;/li>&lt;li>Use a context variable that expands to a URL, for example, &lt;tt>var://context/contextName/varName&lt;/tt>&lt;/li>&lt;li>Use a context, for example, &lt;tt>var://context/Name&lt;/tt> or &lt;tt>var://context/Name/&lt;/tt> . The context runs as a stylesheet.&lt;/li>&lt;/ul>&lt;/p>"
                        },
                        {
                            "name": "ParseSettingsReference",
                            "type": {
                                "href": "/mgmt/types/default/dmDynamicParseSettingsReference"
                            },
                            "summary": "Use any or all of the following ways to define the parse settings configuration for the parse action.",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "parse"
                                }
                            },
                            "cli-alias": "parse-settings-reference",
                            "display": "Parse settings",
                            "description": "A parse settings configuration defines the constraints on the documents to parse. You can configure the constraints by specifying a URL reference from which to retrieve the constraints definition. You can also specify a literal configuration string in XML management interface or REST management interface format that contains the constraints definition. You can also select a parse settings configuration object from the list in Object reference to retrieve constraints definition. Precedence rules apply when the constraint for the same aspect of an input document is configured with more than one method."
                        },
                        {
                            "name": "ParseMetricsResultType",
                            "default": "none",
                            "type": {
                                "href": "/mgmt/types/default/dmParseMetricsResultType"
                            },
                            "summary": "Specifies the language format to save the parse metrics results",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "parse"
                                }
                            },
                            "cli-alias": "parse-settings-result-type",
                            "display": "Parse metrics result type",
                            "description": "Specifies the language format to save the parse metrics results."
                        },
                        {
                            "name": "ParseMetricsResultLocation",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-in-list",
                                            "value": "parse"
                                        },
                                        {
                                            "property-name": "ParseMetricsResultType",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "none"
                                        }
                                    ]
                                }
                            },
                            "summary": "Specifies the name of the context to save parse metrics results",
                            "cli-alias": "parse-settings-result-location",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "parse"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Parse metrics result location",
                            "description": "When \"XML\" or \"JSON\" is specified for parse metrics result type, the parse metrics results are saved in the specified context in the requested language format."
                        },
                        {
                            "name": "DFDLSettingsReference",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/DFDLSettings"
                                }
                            },
                            "summary": "Specify the DFDL Settings to use when processing binary content with DFDL schemas.",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "evaluation": "logical-or",
                                            "condition": [
                                                {
                                                    "property-name": "Type",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "xformng"
                                                },
                                                {
                                                    "property-name": "InputLanguage",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "dfdl"
                                                }
                                            ]
                                        },
                                        {
                                            "evaluation": "logical-or",
                                            "condition": [
                                                {
                                                    "property-name": "Type",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "xformng"
                                                },
                                                {
                                                    "property-name": "OutputLanguage",
                                                    "evaluation": "property-value-not-in-list",
                                                    "value": "dfdl"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "dfdl-settings-reference",
                            "display": "DFDL Settings",
                            "description": "Identifies the DFDL Settings used by this action when processing data as understood by a DFDL schema. This reference, if provided, overrides the reference on the XML manager. If no DFDL Settings are specified on both objects, the default values are applied."
                        },
                        {
                            "name": "InputLanguage",
                            "default": "none",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": "xformng"
                                }
                            },
                            "summary": "Language of input to the transformation",
                            "cli-alias": "input-language",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "xformng"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmXformNGBinaryInputLanguage"
                            },
                            "display": "Input Language"
                        },
                        {
                            "name": "DFDLInputRootName",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Set the root element in the DFDL model from which to start a parse.",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "xformng"
                                        },
                                        {
                                            "property-name": "InputLanguage",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "dfdl"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "input-root-name",
                            "display": "DFDL Input Root Name",
                            "description": "&lt;p>Set the root element in the DFDL model from which to start a parse. This property is only meaningful in the context of a DFDL parse.&lt;/p>&lt;p>For the input root name, specify the global xsd:element in the XSD file to use to begin parsing the binary input. The input root name can be selected from the specified XSD file or specified as a variable. If a variable is used, it must resolve to a valid namespace URL written with the name between braces ({}) as a prefix to the local part.&lt;/p>&lt;p>For instance, if in the DFDL Schema, the target namespace is \"http://example.com/messages\" and the local element is &amp;lt;xsd:element name=\"Message\">...&amp;lt;/xsd:element>, the variable must resolve to {http://example.com/messages}Message.&lt;/p>&lt;p>The schema author might specify the root parse element by using the ibmSchExtn:docRoot=\"true\" element within the schema. For instance, &amp;lt;xsd:element ibmSchExtn:docRoot=\"true\" name=\"Message\">...&amp;lt;/xsd:element>. In this case, the input root name shows in the selection as the element name followed by (@ibmSchExtn:docRoot=\"true\"). Use of another value for the DFDL input root name overrides the value that is specified in the schema.&lt;/p>"
                        },
                        {
                            "name": "InputDescriptor",
                            "type": {
                                "href": "/mgmt/types/default/dmURL"
                            },
                            "summary": "Descriptor of the input to the transformation as understood according to the input language",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "xformng"
                                        },
                                        {
                                            "property-name": "InputLanguage",
                                            "evaluation": "property-value-not-in-list",
                                            "value": [
                                                "xsd",
                                                "dfdl"
                                            ]
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "input-descriptor",
                            "display": "Input Descriptor",
                            "description": "&lt;p>Specify the input descriptor, understood according to the input language.&lt;/p>&lt;ul>&lt;li>If input language is DFDL, the input descriptor must be a URL to a schema file that defines the input. The input descriptor can be a URL to a directory from which you can select a schema file, or the input descriptor can be a variable that resolves to a schema at run time.&lt;/li>&lt;li>If input language is XML, do not specify an input descriptor because the input is not type-assessed.&lt;/li>&lt;li>If input language is XSD, the input descriptor must be a URL to an XML schema for type assessing the input to the transformation.&lt;/li>&lt;li>If input language is JSON, do not specify an input descriptor because the input is not type-assessed.&lt;/li>&lt;/ul>"
                        },
                        {
                            "name": "OutputDescriptor",
                            "type": {
                                "href": "/mgmt/types/default/dmURL"
                            },
                            "summary": "Descriptor of the output from the transformation as understood according to the output language",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "xformng"
                                        },
                                        {
                                            "property-name": "OutputLanguage",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "dfdl"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "output-descriptor",
                            "display": "Output Descriptor",
                            "description": "Specify the output descriptor, understood according to the output language. If output language is DFDL, then output descriptor must be a URL to a DFDL schema for serializing the output from the transformation."
                        },
                        {
                            "name": "TransformLanguage",
                            "default": "none",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": "xformng"
                                }
                            },
                            "summary": "Language of the transformation",
                            "cli-alias": "transform-language",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "xformng"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmXformNGTransformLanguage"
                            },
                            "display": "Transform Language",
                            "description": "&lt;p>Specifies that the transform is specified either as an XQuery file or as None to indicate an identity transformation that is only changing the message via input or output descriptors.&lt;/p>&lt;ul>&lt;li>If transform language is None, do not specify a Transform.&lt;/li>&lt;li>If transform language is XQuery, then specify a way to find that XQuery script in the Transform property.&lt;/li>&lt;/ul>"
                        },
                        {
                            "name": "OutputLanguage",
                            "default": "none",
                            "type": {
                                "href": "/mgmt/types/default/dmXformNGBinaryOutputLanguage"
                            },
                            "summary": "Language of output from the transformation",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "xformng"
                                }
                            },
                            "cli-alias": "output-language",
                            "display": "Output Language",
                            "description": "&lt;p>Specify the output language, to Default or DFDL.&lt;/p>"
                        },
                        {
                            "name": "TxMap",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Location of Transformation Extender map file",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "xformbin"
                                }
                            },
                            "cli-alias": "tx-map",
                            "display": "ITX Map file",
                            "description": "&lt;p>Enter the URL of the IBM Transformation Extender map file for the transform. You must create the map file by exporting the file from Design Studio. In DPA mode, the generated map file is hosted locally on the DataPower Gateway or on a remote HTTP or HTTPS server. Use one of the following formats.&lt;/p>&lt;ul>&lt;li>When the file is local, use &amp;lt;directory>:///&amp;lt;file>&lt;/li>&lt;li>When the file is remote, use HTTP://&amp;lt;path_qualified_file> or HTTPS://&amp;lt;path_qualified_file>&lt;/li>&lt;/ul>&lt;p>Do not specify an XSL stylesheet when you use a map file.&lt;/p>"
                        },
                        {
                            "name": "GatewayScriptLocation",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": [
                                        "gatewayscript",
                                        "jose-sign",
                                        "jose-verify",
                                        "jose-encrypt",
                                        "jose-decrypt"
                                    ]
                                }
                            },
                            "summary": "Location of the GatewayScript file",
                            "cli-alias": "gatewayscript-location",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "GatewayScript file",
                            "description": "&lt;p>Specify the location of the GatewayScript file. The file location can be specified in one of the following formats.&lt;/p>&lt;ul>&lt;li>Use a URL. Select the local:, store:, or temporary: directory, and select, upload, or fetch the script file.&lt;/li>&lt;li>Use a context variable that expands to a URL, such as &lt;tt>var://context/contextName/varName&lt;/tt> .&lt;/li>&lt;li>Use a context, for example, &lt;tt>var://context/Name&lt;/tt> or &lt;tt>var://context/Name/&lt;/tt> . The context content runs as GatewayScript.&lt;/li>&lt;/ul>"
                        },
                        {
                            "name": "ActionDebug",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Enable GatewayScript Debug",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "gatewayscript"
                                }
                            },
                            "cli-alias": "debug",
                            "display": "Enable GatewayScript Debug",
                            "description": ""
                        },
                        {
                            "name": "TxTopLevelMap",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Name of the Transformation Extender map to run",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "xformbin"
                                        },
                                        {
                                            "property-name": "TxMode",
                                            "evaluation": "property-value-in-list",
                                            "value": "dpa"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "tx-tlm",
                            "display": "Top-Level Map Name",
                            "description": "Enter the name of the specific IBM Transformation Extender map in the map file for the transform. A map file might contain more than one map. When not specified, the transform uses the first map in the file."
                        },
                        {
                            "name": "TxMode",
                            "type": {
                                "href": "/mgmt/types/default/dmTxMode"
                            },
                            "summary": "Transformation Extender mode in which to run the map",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "xformbin"
                                }
                            },
                            "cli-alias": "tx-mode",
                            "display": "ITX Map Mode",
                            "description": "Select the IBM Transformation Extender mode in which to run the map. DPA is the recommended mode."
                        },
                        {
                            "name": "TxAuditLog",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The context name to save the Transformation Extender audit log",
                            "cli-alias": "tx-audit-log",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "xformbin"
                                        },
                                        {
                                            "property-name": "TxMode",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "dpa"
                                        }
                                    ]
                                }
                            },
                            "maximum-length": 30,
                            "valid-regexp": "^[_a-zA-Z0-9-]+$",
                            "display": "ITX Audit Log",
                            "description": "Enter the context name to save the IBM Transformation Extender audit log. This property is valid only in DPA mode."
                        },
                        {
                            "name": "Output",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": [
                                        "xformpi",
                                        "xformbin",
                                        "xformng",
                                        "cryptobin",
                                        "xform",
                                        "convert-http",
                                        "fetch",
                                        "extract",
                                        "call",
                                        "gatewayscript",
                                        "jose-sign",
                                        "jose-verify",
                                        "jose-encrypt",
                                        "jose-decrypt"
                                    ]
                                }
                            },
                            "summary": "The destination context",
                            "cli-alias": "output",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": [
                                        "results-async",
                                        "setvar",
                                        "rewrite",
                                        "route-set",
                                        "strip-attachments",
                                        "on-error",
                                        "checkpoint",
                                        "conditional",
                                        "event-sink",
                                        "method-rewrite"
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Output",
                            "description": "Output identifies the destination context that receives the document upon completion of the specified action. Enter the context name or string PIPE used for streaming execution mode (except for the last action), or the string OUTPUT which identifies the final input output from this policy rule. Depending on the rule's direction, OUTPUT specifies the transmission to the requesting client or responding server. If the action type is results, and no output is specified, the target context is transmitted to OUTPUT."
                        },
                        {
                            "name": "NoTranscodeUtf8",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Whether the output from the convert action retains the input encoding or uses ISO 8859-1",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "convert-http"
                                }
                            },
                            "cli-alias": "charset-transparency",
                            "display": "Retain input encoding",
                            "description": "Control whether the output from the convert action retains the input encoding or is converted to ISO 8859-1. An encoding is also known as a character set. For illustrative purposes, assume UTF-8 is the input encoding. &lt;ul>&lt;li>When enabled and the input encoding is UTF-8, the output is UTF-8.&lt;/li>&lt;li>When disabled and the input encoding is UTF-8, the output is ISO 8859-1. This behavior is the default behavior.&lt;/li>&lt;/ul>"
                        },
                        {
                            "name": "NamedInOutLocationType",
                            "default": "default",
                            "type": {
                                "href": "/mgmt/types/default/dmNamedInOutLocationType"
                            },
                            "summary": "Locate Named Inputs and Outputs",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "xformbin"
                                }
                            },
                            "cli-alias": "named-inouts",
                            "display": "Locate Named Inputs and Outputs",
                            "description": "Named Inputs and Outputs can be specified explicitly or dynamically, or can default to the unnamed regular input and output. Select the value appropriate for your IBM Transformation Extender configuration."
                        },
                        {
                            "name": "NamedInputs",
                            "type": {
                                "href": "/mgmt/types/default/dmNamedInOut"
                            },
                            "summary": "Create all of the named inputs needed for the Transformation Extender transform.",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "NamedInOutLocationType",
                                            "evaluation": "property-does-not-equal",
                                            "value": "explicit"
                                        },
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-does-not-equal",
                                            "value": "xformbin"
                                        }
                                    ]
                                }
                            },
                            "array": "true",
                            "cli-alias": "named-input",
                            "display": "Named Inputs",
                            "description": "Create all of the named inputs that are needed for the IBM Transformation Extender transform."
                        },
                        {
                            "name": "NamedOutputs",
                            "type": {
                                "href": "/mgmt/types/default/dmNamedInOut"
                            },
                            "summary": "Create all of the named outputs needed for the Transformation Extender transform.",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "NamedInOutLocationType",
                                            "evaluation": "property-does-not-equal",
                                            "value": "explicit"
                                        },
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-does-not-equal",
                                            "value": "xformbin"
                                        }
                                    ]
                                }
                            },
                            "array": "true",
                            "cli-alias": "named-output",
                            "display": "Named Outputs",
                            "description": "Create all of the named outputs that are needed for the IBM Transformation Extender transform."
                        },
                        {
                            "name": "Destination",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": [
                                        "results-async",
                                        "fetch",
                                        "route-set"
                                    ]
                                }
                            },
                            "summary": "A remote URL",
                            "cli-alias": "destination",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "results",
                                        "log"
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmURL"
                            },
                            "display": "External URL",
                            "description": "&lt;p>Specify the location of the resource (source or destination). Specify the location as either a URL or as a variable that expands to a URL. If a variable, use the var://context/name form.&lt;/p>&lt;p>Required for a fetch, log, results-async, or route-set action. Optional for a results action. When not defined for a results action, the input context is written to the output context. Not used for all other actions.&lt;/p>&lt;ul>&lt;li>For fetch, specify the source.&lt;/li>&lt;li>For route-set, specify the destination.&lt;/li>&lt;li>For log, results, and results-async, specify the destination (a foreign server to which to send the data).&lt;/li>&lt;/ul>"
                        },
                        {
                            "name": "SchemaURL",
                            "type": {
                                "href": "/mgmt/types/default/dmURL"
                            },
                            "summary": "An XML schema",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "validate"
                                }
                            },
                            "cli-alias": "schema-url",
                            "display": "Schema URL",
                            "description": "&lt;p>Used only when the action type is validate, identifies an XML schema used for document validation regardless of any &lt;tt>xsi:schemaLocation&lt;/tt> attributes contained with the document. Identify the schema with one of the following formats.&lt;/p>&lt;ul>&lt;li>Use a URL, for example, &lt;tt>store:///valHigh.xsd&lt;/tt>&lt;/li>&lt;li>Use a context variable that expands to a URL, for example, &lt;tt>var://context/contextName/varName&lt;/tt>&lt;/li>&lt;li>Use a context, for example, &lt;tt>var://context/Name&lt;/tt> or &lt;tt>var://context/Name/&lt;/tt> . The context runs as a schema validation.&lt;/li>&lt;/ul>"
                        },
                        {
                            "name": "JSONSchemaURL",
                            "type": {
                                "href": "/mgmt/types/default/dmURL"
                            },
                            "summary": "A JSON schema",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "validate"
                                }
                            },
                            "cli-alias": "json-schema-url",
                            "display": "JSON Schema URL",
                            "description": "&lt;p>Used only when the action type is validate, identifies a JSON schema used for JSON document validation. Identify the schema with one of the following formats.&lt;/p>&lt;ul>&lt;li>Use a URL, for example, &lt;tt>local:///valHigh.jsv&lt;/tt>&lt;/li>&lt;li>Use a context variable that expands to a URL, for example, &lt;tt>var://context/contextName/varName&lt;/tt>&lt;/li>&lt;li>Use a context, for example, &lt;tt>var://context/Name&lt;/tt> or &lt;tt>var://context/Name/&lt;/tt> . The context runs as a JSON schema validation.&lt;/li>&lt;/ul>"
                        },
                        {
                            "name": "WsdlURL",
                            "type": {
                                "href": "/mgmt/types/default/dmURL"
                            },
                            "summary": "The URL of the WSDL file",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "validate"
                                }
                            },
                            "cli-alias": "wsdl-url",
                            "display": "WSDL URL",
                            "description": "&lt;p>The URL of the WSDL file that defines the operations to use during the validate action. The WSDL file can reside on the local system or on the network. By default, the WSDL validation always applies to the entire input message. This can be modified by compile options on the XML manager.&lt;/p>&lt;p>Identify the WSDL with one of the following formats.&lt;/p>&lt;ul>&lt;li>Use a URL, for example, &lt;tt>local:///myTest.wsdl&lt;/tt>&lt;/li>&lt;li>Use a context variable that expands to a URL, for example, &lt;tt>var://context/contextName/varName&lt;/tt>&lt;/li>&lt;li>Use a context, for example, &lt;tt>var://context/Name&lt;/tt> or &lt;tt>var://context/Name/&lt;/tt> . The context runs as a WSDL validation.&lt;/li>&lt;/ul>"
                        },
                        {
                            "name": "Policy",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-equals",
                                    "value": "rewrite"
                                }
                            },
                            "summary": "A URL Rewrite Policy",
                            "cli-alias": "urlrewrite-policy",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "validate",
                                        "xformpi",
                                        "xformbin",
                                        "xformng",
                                        "xform"
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/URLRewritePolicy"
                                }
                            },
                            "display": "URL Rewrite Policy",
                            "description": "Specifies the URL rewrite policy to change the active URL of the current transaction."
                        },
                        {
                            "name": "AAA",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-equals",
                                    "value": "aaa"
                                }
                            },
                            "summary": "AAA policy to use",
                            "cli-alias": "aaa-policy",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/AAAPolicy"
                                }
                            },
                            "display": "AAA Policy",
                            "description": "Select an AAA Policy to assign the authentication and authorization policy to the DataPower service."
                        },
                        {
                            "name": "DynamicSchema",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "base-class": "DynamicSchema"
                                }
                            },
                            "summary": "A dynamic schema",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "validate"
                                }
                            },
                            "cli-alias": "dynamic-schema",
                            "display": "Dynamic Schema",
                            "description": "Select a dynamic schema from the values list."
                        },
                        {
                            "name": "DynamicStylesheet",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "base-class": "DynamicStylesheet"
                                }
                            },
                            "summary": "Dynamic stylesheet",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "filter",
                                        "route-action",
                                        "xformpi",
                                        "xformbin",
                                        "xformng",
                                        "xform"
                                    ]
                                }
                            },
                            "cli-alias": "dynamic-stylesheet",
                            "display": "Dynamic Stylesheet",
                            "description": "Specifies the dynamic stylesheet to transform an input document."
                        },
                        {
                            "name": "InputConversion",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/HTTPInputConversionMap"
                                }
                            },
                            "summary": "An HTTP Input Conversion Map",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "convert-http"
                                }
                            },
                            "cli-alias": "input-conversion",
                            "display": "Input Conversion",
                            "description": "Select an HTTP Input Conversion Map that provides encoding rules."
                        },
                        {
                            "name": "XPath",
                            "type": {
                                "href": "/mgmt/types/default/dmXPathExpr"
                            },
                            "summary": "An XPath expression",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "extract"
                                }
                            },
                            "cli-alias": "xpath",
                            "display": "XPath",
                            "description": "Specifies the XPath expression that is applied to the context identified by Input. Enter the XPath expression or a variable in the form var://context/name which expands to an XPath expression."
                        },
                        {
                            "name": "Variable",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Create a variable",
                            "cli-alias": "variable",
                            "example": "var://context/CONTEXT-NAME/VAR-NAME",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-not-in-list",
                                            "value": [
                                                "extract",
                                                "setvar",
                                                "sql"
                                            ]
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "Type",
                                                    "evaluation": "property-equals",
                                                    "value": "sql"
                                                },
                                                {
                                                    "property-name": "SQLSourceType",
                                                    "evaluation": "property-does-not-equal",
                                                    "value": "variable"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "valid-regexp": "^var://(context/[^/ ]+(/[^/ ][^ ]*)+|(system/[^/ ]+|local|service)/[^/ ][^ ]*)$",
                            "display": "Variable Name",
                            "description": "&lt;p>Enter the variable URL, in one of the following forms. &lt;ul>&lt;li>var://context/CONTEXT-NAME/VAR-NAME&lt;/li>&lt;li>var://local/VAR-NAME&lt;/li>&lt;li>var://system/CONTEXT-NAME/VAR-NAME&lt;/li>&lt;li>var://service/SERVICE-NAME&lt;/li>&lt;/ul>&lt;/p>&lt;p>var://context/CONTEXT-NAME/VAR-NAME is the primary way to reference variables. var://context/CONTEXT-NAME/_roottree is a special variable that holds the value of the context when used as an input to an action. var://context/CONTEXT-NAME (or var://context/CONTEXT-NAME/) is treated as shorthand for var://context/CONTEXT-NAME/_roottree.&lt;/p>&lt;p>var://local/VAR-NAME can be used to reference variables in the Input context for this action (when reading the variable) or in the Output context for this action (when writing the variable). Because this reference is context-sensitive, The use of var://context/CONTEXT-NAME/VAR-NAME is recommended.&lt;/p>&lt;p>var://system/CONTEXT-NAME/VAR-NAME is used to reference global variables. These variables are rarely used.&lt;/p>&lt;p>var://service/SERVICE-NAME is used to reference certain internal state variables. These variables are defined by the firmware and cannot be created by users. Refer to the manuals or the resource CD for details.&lt;/p>"
                        },
                        {
                            "name": "Value",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Assigns a value to Variable Name",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "setvar"
                                }
                            },
                            "cli-alias": "value",
                            "display": "Variable Assignment",
                            "description": "Enter the variable value. The value can be a number, a string (for example, a URL), or another variable URL in one of the formats that is described in the help for the Variable property."
                        },
                        {
                            "name": "SSLCred",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The TLS credential is deprecated. Use a TLS client credential.",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-does-not-equal",
                                            "value": "route-set"
                                        },
                                        {
                                            "property-name": "SSLClientConfigType",
                                            "evaluation": "property-does-not-equal",
                                            "value": "proxy"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "sslcred",
                            "display": "TLS Credential (deprecated)",
                            "description": "Specifies a TLS Proxy Profile used to establish a secure connection with the destination URL. Enter the name of a TLS Proxy Profile."
                        },
                        {
                            "name": "SSLClientConfigType",
                            "default": "proxy",
                            "type": {
                                "href": "/mgmt/types/default/dmSSLClientConfigType"
                            },
                            "summary": "Set the TLS profile type to secure connections between the DataPower Gateway and its targets",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "route-set"
                                }
                            },
                            "cli-alias": "ssl-client-type",
                            "display": "TLS client type",
                            "description": "The TLS profile type to secure connections between the DataPower Gateway and its targets."
                        },
                        {
                            "name": "SSLClientCred",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/SSLClientProfile"
                                }
                            },
                            "summary": "TLS client profile",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-does-not-equal",
                                            "value": "route-set"
                                        },
                                        {
                                            "property-name": "SSLClientConfigType",
                                            "evaluation": "property-does-not-equal",
                                            "value": "client"
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "ssl-client",
                            "display": "TLS Client Credential",
                            "description": "Specifies a TLS Client Profile to establish a secure connection with the destination URL. Enter the name of a TLS client profile."
                        },
                        {
                            "name": "AttachmentURI",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "URI specifying an attachment",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "strip-attachments"
                                }
                            },
                            "cli-alias": "attachment-uri",
                            "display": "Attachment URI",
                            "description": "This specifies which attachment to strip. If omitted, all attachments are stripped from the specified context."
                        },
                        {
                            "name": "StylesheetParameters",
                            "type": {
                                "href": "/mgmt/types/default/dmStylesheetParameter"
                            },
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "filter",
                                        "route-action",
                                        "xformpi",
                                        "xformbin",
                                        "xformng",
                                        "cryptobin",
                                        "xform",
                                        "gatewayscript"
                                    ]
                                }
                            },
                            "array": "true",
                            "cli-alias": "parameter",
                            "display": "Stylesheet Parameter",
                            "description": "Stylesheets used in Processing Policies can take stylesheet parameters. These parameters can be passed in by this object. More than one parameter can be defined."
                        },
                        {
                            "name": "ErrorMode",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-equals",
                                    "value": "on-error"
                                }
                            },
                            "cli-alias": "error-mode",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmStyleErrorMode"
                            },
                            "display": "Error Mode",
                            "description": "Select whether to continue on error."
                        },
                        {
                            "description": "The input context for the error rule.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "on-error"
                                }
                            },
                            "cli-alias": "error-input",
                            "display": "Error Input",
                            "name": "ErrorInput"
                        },
                        {
                            "description": "The output context for the error rule.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "on-error"
                                }
                            },
                            "cli-alias": "error-output",
                            "display": "Error Output",
                            "name": "ErrorOutput"
                        },
                        {
                            "name": "Rule",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-equals",
                                    "value": "call"
                                }
                            },
                            "summary": "Processing Rule to call",
                            "cli-alias": "rule",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "on-error"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmString",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/StylePolicyRule"
                                }
                            },
                            "display": "Processing Rule",
                            "description": "Specify which rule to call."
                        },
                        {
                            "name": "OutputType",
                            "type": {
                                "href": "/mgmt/types/default/dmActionOutputType"
                            },
                            "summary": "How to interpret a server response",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "xformpi",
                                        "xformbin",
                                        "xformng",
                                        "xform",
                                        "results",
                                        "log",
                                        "fetch"
                                    ]
                                }
                            },
                            "cli-alias": "output-type",
                            "display": "Output Type",
                            "description": "Select how to interpret the response from the server, if any."
                        },
                        {
                            "name": "LogLevel",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-equals",
                                    "value": "log"
                                }
                            },
                            "summary": "Log Level",
                            "cli-alias": "log-level",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmLogLevel"
                            },
                            "display": "Log Level",
                            "description": "The log levels of the messages that was generated by the operation."
                        },
                        {
                            "name": "LogType",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-equals",
                                    "value": "log"
                                }
                            },
                            "summary": "Log Type",
                            "cli-alias": "log-type",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/LogLabel"
                                }
                            },
                            "display": "Log Type",
                            "description": "This is the log type of the messages generated by the log operation."
                        },
                        {
                            "name": "Transactional",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Transactional Asynchronous Operation",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "results",
                                        "results-async"
                                    ]
                                }
                            },
                            "cli-alias": "transactional",
                            "display": "Transactional",
                            "description": "Defines if the asynchronous operation should be committed or rolled back as part of the entire session transaction."
                        },
                        {
                            "name": "CheckpointEvent",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-equals",
                                    "value": "checkpoint"
                                }
                            },
                            "summary": "Event that triggers the checkpoint",
                            "cli-alias": "event",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmCheckpointEvent"
                            },
                            "display": "Event",
                            "description": "Select the event that triggers the checkpoint action."
                        },
                        {
                            "name": "SLMPolicy",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-equals",
                                    "value": "slm"
                                }
                            },
                            "summary": "SLM policy to enforce",
                            "cli-alias": "slm",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmString",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/SLMPolicy"
                                }
                            },
                            "display": "SLM Policy",
                            "description": "Configure the Service Level Monitoring policy to enforce."
                        },
                        {
                            "name": "SQLDataSource",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-equals",
                                    "value": "sql"
                                }
                            },
                            "summary": "SQL Data Source",
                            "cli-alias": "sql-source",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/SQLDataSource"
                                }
                            },
                            "display": "SQL Data Source",
                            "description": "The SQL Data Source object to use when executing this action."
                        },
                        {
                            "name": "SQLText",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "SQLSourceType",
                                            "evaluation": "property-equals",
                                            "value": "static"
                                        },
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-equals",
                                            "value": "sql"
                                        }
                                    ]
                                }
                            },
                            "summary": "SQL Text",
                            "cli-alias": "sql-text",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-does-not-equal",
                                            "value": "sql"
                                        },
                                        {
                                            "property-name": "SQLSourceType",
                                            "evaluation": "property-value-in-list",
                                            "value": [
                                                "stylesheet",
                                                "variable"
                                            ]
                                        }
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "SQL Text",
                            "description": "When the SQL input method is static, enter the literal text of the SQL statement that the SQL action runs."
                        },
                        {
                            "name": "SOAPValidation",
                            "default": "body",
                            "type": {
                                "href": "/mgmt/types/default/dmSOAPValidation"
                            },
                            "summary": "Method to validate SOAP documents and faults",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-does-not-equal",
                                            "value": "validate"
                                        },
                                        {
                                            "property-name": "WsdlURL",
                                            "evaluation": "property-does-not-equal",
                                            "value": ""
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "soap-validation",
                            "display": "SOAP Validation",
                            "description": "&lt;p>Select which parts of the SOAP message to validate.&lt;/p>&lt;p>This setting does not affect validating the input context to ensure that it is a valid document. If you are validating an intermediate context, such as the result of a transform or a fetched document, this setting is not implicitly validated as SOAP. You might want to select validate the entire document.&lt;/p>&lt;p>Similarly, WSDL validation always applies to the entire document, except as modified by WSDL compiler options.&lt;/p>"
                        },
                        {
                            "name": "SQLSourceType",
                            "default": "static",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-equals",
                                    "value": "sql"
                                }
                            },
                            "summary": "Select the SQL input source",
                            "cli-alias": "sql-source-type",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "sql"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmSQLSourceType"
                            },
                            "display": "SQL Input Method",
                            "description": "Select the source of the SQL statement for the SQL action."
                        },
                        {
                            "name": "JOSESerializationType",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": [
                                        "jose-sign",
                                        "jose-encrypt"
                                    ]
                                }
                            },
                            "summary": "JSON Web Serialization format",
                            "cli-alias": "serialization",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmJOSESerialization"
                            },
                            "display": "Serialization",
                            "description": "The JSON Web Serialization format in the JSON Web Sign and the JSON Web Encrypt actions."
                        },
                        {
                            "name": "JWEEncAlgorithm",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": "jose-encrypt"
                                }
                            },
                            "summary": "JWE encrypt algorithm",
                            "cli-alias": "jwe-enc",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmJWEEncAlgorithm"
                            },
                            "display": "Algorithm",
                            "description": "Assign a JWE encrypt algorithm in the JSON Web Encrypt action."
                        },
                        {
                            "name": "JWSSignatureObject",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": "jose-sign"
                                }
                            },
                            "summary": "Add a JWS signature object to the JSON Web Sign action",
                            "cli-alias": "jws-signature",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/JWSSignature"
                                }
                            },
                            "display": "Signature",
                            "description": "Add a JWS signature object to the JSON Web Sign action."
                        },
                        {
                            "name": "JWEHeaderObject",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": "jose-encrypt"
                                }
                            },
                            "summary": "Add a JWE header object to the JSON Encrypt action",
                            "cli-alias": "jwe-header",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/JWEHeader"
                                }
                            },
                            "display": "JWE Header",
                            "description": "Add a JWE header object to the JSON Encrypt action."
                        },
                        {
                            "name": "JOSEVerifyType",
                            "type": {
                                "href": "/mgmt/types/default/dmJOSEVerifyType"
                            },
                            "summary": "The identifier type used to verify the signature in the JSON Web Verify action",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "jose-verify"
                                }
                            },
                            "cli-alias": "jose-verify-type",
                            "display": "Identifier Type",
                            "description": "The identifier type used to verify the signature in the JSON Web Verify action."
                        },
                        {
                            "name": "JOSEDecryptType",
                            "type": {
                                "href": "/mgmt/types/default/dmJOSEDecryptType"
                            },
                            "summary": "The identifier type used to verify the recipient in the JSON Web Decrypt action",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "jose-decrypt"
                                }
                            },
                            "cli-alias": "jose-decrypt-type",
                            "display": "Identifier Type",
                            "description": "The identifier type used to verify the recipient in the JSON Web Decrypt action."
                        },
                        {
                            "name": "SignatureIdentifier",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-in-list",
                                            "value": "jose-verify"
                                        },
                                        {
                                            "property-name": "JOSEVerifyType",
                                            "evaluation": "property-value-in-list",
                                            "value": "identifiers"
                                        }
                                    ]
                                }
                            },
                            "summary": "Add a signature identifier object to the JSON Web Verify action",
                            "cli-alias": "signature-identifier",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "array": "true",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/JOSESignatureIdentifier"
                                }
                            },
                            "display": "Signature Identifiers",
                            "description": "Add a signature identifier object to the JSON Web Verify action. This property is mutually exclusive from Single Identifier - Certificate and Single Identifier - Shared Secret Key."
                        },
                        {
                            "name": "RecipientIdentifier",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-in-list",
                                            "value": "jose-decrypt"
                                        },
                                        {
                                            "property-name": "JOSEDecryptType",
                                            "evaluation": "property-value-in-list",
                                            "value": "identifiers"
                                        }
                                    ]
                                }
                            },
                            "summary": "Add a recipient identifier object to the JSON Web Decrypt action",
                            "cli-alias": "recipient-identifier",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "array": "true",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/JOSERecipientIdentifier"
                                }
                            },
                            "display": "Recipient Identifiers",
                            "description": "Add a recipient identifier object to the JSON Web Decrypt action. This property is mutually exclusive from Single Identifier - Private Key, Single Identifier - Shared Secret Key and Direct Key."
                        },
                        {
                            "name": "SingleCertificate",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-in-list",
                                            "value": "jose-verify"
                                        },
                                        {
                                            "property-name": "JOSEVerifyType",
                                            "evaluation": "property-value-in-list",
                                            "value": "single-cert"
                                        }
                                    ]
                                }
                            },
                            "summary": "Add a certificate object to the JSON Web Verify action",
                            "cli-alias": "single-cert",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/CryptoCertificate"
                                }
                            },
                            "display": "Certificate",
                            "description": "Add a certificate object to the JSON Web Verify action. This property is mutually exclusive from Signature Identifiers and Single Identifier - Shared Secret Key."
                        },
                        {
                            "name": "SingleKey",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-in-list",
                                            "value": "jose-decrypt"
                                        },
                                        {
                                            "property-name": "JOSEDecryptType",
                                            "evaluation": "property-value-in-list",
                                            "value": "single-key"
                                        }
                                    ]
                                }
                            },
                            "summary": "Add a private key object to the JSON Web Decrypt",
                            "cli-alias": "single-key",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/CryptoKey"
                                }
                            },
                            "display": "Private Key",
                            "description": "Add a private key object to the JSON Web Decrypt. This property is mutually exclusive from Recipient Identifiers, Single Identifier - Shared Secret Key and Direct Key."
                        },
                        {
                            "name": "SingleSSKey",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "Type",
                                                    "evaluation": "property-value-in-list",
                                                    "value": "jose-decrypt"
                                                },
                                                {
                                                    "property-name": "JOSEDecryptType",
                                                    "evaluation": "property-value-in-list",
                                                    "value": "single-sskey"
                                                }
                                            ]
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "Type",
                                                    "evaluation": "property-value-in-list",
                                                    "value": "jose-verify"
                                                },
                                                {
                                                    "property-name": "JOSEVerifyType",
                                                    "evaluation": "property-value-in-list",
                                                    "value": "single-sskey"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "summary": "Add a shared secret key object to the JSON Web Decrypt or the JSON Web Verify action",
                            "cli-alias": "single-sskey",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/CryptoSSKey"
                                }
                            },
                            "display": "Shared Secret Key",
                            "description": "Add a shared secret key object to the JSON Web Decrypt or the JSON Web Verify action. The JSON Web Verify action is mutually exclusive from Signature Identifiers and Single Identifier - Certificate. The JSON Web Decrypt action is mutually exclusive from Recipient Identifiers, Single Identifier - Private Key and Direct Key."
                        },
                        {
                            "name": "JWEDirectKeyObject",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-in-list",
                                            "value": "jose-decrypt"
                                        },
                                        {
                                            "property-name": "JOSEDecryptType",
                                            "evaluation": "property-value-in-list",
                                            "value": "direct-key"
                                        }
                                    ]
                                }
                            },
                            "summary": "Add a shared secret key object to the JSON Web Decrypt action",
                            "cli-alias": "direct-key",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/CryptoSSKey"
                                }
                            },
                            "display": "Direct Key",
                            "description": "Add a shared secret key object to the JSON Web Decrypt action. This property is mutually exclusive from Recipient Identifiers, Single Identifier - Private Key and Single Identifier - Shared Secret Key. This property is used when the algorithm is 'dir'."
                        },
                        {
                            "name": "JWSVerifyStripSignature",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Write the payload in the JWS object to the output context",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "jose-verify"
                                }
                            },
                            "cli-alias": "strip-signature",
                            "display": "Strip Signature",
                            "description": "Write the payload in the JWS object to the output context."
                        },
                        {
                            "name": "Asynchronous",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Marks this action as asynchronous",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": [
                                        "results-async",
                                        "event-sink",
                                        "method-rewrite",
                                        "gatewayscript",
                                        "jose-sign",
                                        "jose-verify",
                                        "jose-encrypt",
                                        "jose-decrypt"
                                    ]
                                }
                            },
                            "cli-alias": "asynchronous",
                            "display": "Asynchronous",
                            "description": "Marks this action as asynchronous. It will not need to complete for the next action to begin."
                        },
                        {
                            "name": "Condition",
                            "type": {
                                "href": "/mgmt/types/default/dmCondition"
                            },
                            "summary": "XPath condition to check and action to run if it is found.",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "conditional"
                                }
                            },
                            "array": "true",
                            "cli-alias": "condition",
                            "display": "Condition",
                            "description": "A single condition which maps an XPath condition to search for in the input context to an action to run if it is found. If it is not found, then other conditions can be checked."
                        },
                        {
                            "name": "ResultsMode",
                            "default": "first-available",
                            "type": {
                                "href": "/mgmt/types/default/dmResultsMultiWayMode"
                            },
                            "summary": "How to handle multiple results targets",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "results",
                                        "results-async"
                                    ]
                                }
                            },
                            "cli-alias": "results-mode",
                            "display": "Multi-Way Results Mode",
                            "description": "&lt;p>Specify whether to use the first available target from the target list or to try to send to all targets. If \"first-available\", the action sends to potential targets one at a time, and stops with success when the input has been sent to any single target. If \"require-all\", the action sends to all of the potential targets, and fails if any one of the targets fails. If \"attempt-all\", the action succeeds even if some or all of the targets fail.&lt;/p>"
                        },
                        {
                            "name": "RetryCount",
                            "default": 0,
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "summary": "Number of times to retry the operation",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "results",
                                        "results-async"
                                    ]
                                }
                            },
                            "cli-alias": "retry-count",
                            "display": "Number of Retries",
                            "description": "&lt;p>If connecting to a target fails, the connection attempt may be retried after an interval. This indicates the number of retry attempts; the default is 0, which indicates that the operation fails immediately if the connection fails.&lt;/p>"
                        },
                        {
                            "name": "RetryInterval",
                            "default": 1000,
                            "cli-alias": "retry-interval",
                            "summary": "Time between operation retries",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "results",
                                        "results-async"
                                    ]
                                }
                            },
                            "units": "ms",
                            "type": {
                                "href": "/mgmt/types/default/dmTimeIntervalMillis"
                            },
                            "display": "Retry Interval",
                            "description": "&lt;p>If connecting to a target fails, the connection attempt may be retried after an interval. This indicates the time between retries in milliseconds. The default value is 1000.&lt;/p>"
                        },
                        {
                            "name": "MultipleOutputs",
                            "default": "off",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "summary": "Place parallel outputs into separate contexts",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-not-in-list",
                                            "value": [
                                                "results",
                                                "for-each"
                                            ]
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "Type",
                                                    "evaluation": "property-equals",
                                                    "value": "results"
                                                },
                                                {
                                                    "property-name": "Destination",
                                                    "evaluation": "property-equals",
                                                    "value": ""
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "cli-alias": "multiple-outputs",
                            "display": "Use Multiple Outputs",
                            "description": "&lt;p>A results action can target several targets simultaneously by specifying a variable containing an XML node-set as the results target. If this option is true, the context named as the output context of the action is ignored, but the status of individual attempts to reach the targets are recorded in separate contexts by appending a number to the provided name, resulting in context names such as \"ctx_1\" for an output context name of \"ctx\". If this option is false, only one result is kept: in require-all mode, it is the first target to have failed and have no retries left, or the last target on success; in attempt-all mode, the last target to be attempted; in first-available mode, the first target to succeed or the last failing target.&lt;/p>"
                        },
                        {
                            "name": "IteratorType",
                            "default": "XPATH",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": "for-each"
                                }
                            },
                            "summary": "Type of iterator, an XPath expression or a loop count",
                            "cli-alias": "iterator-type",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "for-each"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmIteratorType"
                            },
                            "display": "Iterator Type",
                            "description": "Specify the type of the iterator. It will either be an XPath expression or a number designating the number of times to execute the loop."
                        },
                        {
                            "name": "IteratorExpression",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-in-list",
                                            "value": "for-each"
                                        },
                                        {
                                            "property-name": "IteratorType",
                                            "evaluation": "property-value-in-list",
                                            "value": "XPATH"
                                        }
                                    ]
                                }
                            },
                            "summary": "Iterator to operate on: an XPath expression",
                            "cli-alias": "iterator-expression",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "for-each"
                                        },
                                        {
                                            "property-name": "IteratorType",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "XPATH"
                                        }
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmXPathExpr"
                            },
                            "display": "XPath Expression",
                            "description": "An XPath expression defining the content to iterate on."
                        },
                        {
                            "name": "IteratorCount",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-and",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-in-list",
                                            "value": "for-each"
                                        },
                                        {
                                            "property-name": "IteratorType",
                                            "evaluation": "property-value-in-list",
                                            "value": "COUNT"
                                        }
                                    ]
                                }
                            },
                            "maximum": 32768,
                            "summary": "Number of times to run the loop action",
                            "cli-alias": "iterator-count",
                            "minimum": 1,
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "for-each"
                                        },
                                        {
                                            "property-name": "IteratorType",
                                            "evaluation": "property-value-not-in-list",
                                            "value": "COUNT"
                                        }
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmUInt32"
                            },
                            "display": "Iterator Count",
                            "description": "Specify the number of times to run the loop action. Enter a value in the range 1 - 32768."
                        },
                        {
                            "name": "LoopAction",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": "for-each"
                                }
                            },
                            "summary": "The action to execute within the loop",
                            "cli-alias": "loop-action",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmString",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/StylePolicyAction"
                                }
                            },
                            "display": "Loop Action"
                        },
                        {
                            "name": "AsyncAction",
                            "type": {
                                "href": "/mgmt/types/default/dmString",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/StylePolicyAction"
                                }
                            },
                            "summary": "List of asynchronous actions to wait for",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "event-sink"
                                }
                            },
                            "array": "true",
                            "cli-alias": "async-action",
                            "display": "Async Action"
                        },
                        {
                            "name": "Timeout",
                            "default": 0,
                            "cli-alias": "timeout",
                            "summary": "The time in milliseconds to wait for asynchronous actions to complete",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "event-sink"
                                }
                            },
                            "units": "ms",
                            "type": {
                                "href": "/mgmt/types/default/dmTimeIntervalMillis"
                            },
                            "display": "Timeout",
                            "description": "Wait for this number of milliseconds for listed asynchronous actions to complete. Time out after this period and raise an error. Enter 0 to wait forever."
                        },
                        {
                            "name": "WSDLPortQName",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Validate messages from a specific wsdl:port",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "validate"
                                }
                            },
                            "cli-alias": "wsdl-port",
                            "display": "WSDL Port QName",
                            "description": "The QName of the WSDL port that defines the service traffic to validate. The value should be a QName in the form \"{namespace-uri}local-part\" or \"*\" for all ports that are defined in the WSDL file. If specified and not \"*\", only messages that are defined for the named port are considered valid."
                        },
                        {
                            "name": "WSDLOperationName",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Validate messages that match the specified wsdl:operation",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "validate"
                                }
                            },
                            "cli-alias": "wsdl-operation",
                            "display": "WSDL Operation Name",
                            "description": "The name of the WSDL operation that defines the service traffic to validate. The value should be the unqualified name of the operation or \"*\" for all operations that are defined in the WSDL file. If specified and not \"*\", only messages that are defined for operations that match the specified name are considered valid."
                        },
                        {
                            "name": "WSDLMessageDirectionOrName",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Validate messages from wsdl:input, wsdl:output, or wsdl:faults that match the given name or direction",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "validate"
                                }
                            },
                            "cli-alias": "wsdl-message-direction-or-name",
                            "display": "WSDL Message Direction or Name",
                            "description": "&lt;p>The name or direction of the WSDL input, output, or fault that defines the service traffic to validate. Use one of the following values.&lt;/p>&lt;ul>&lt;li>The name of one or more WSDL input, output, or fault components.&lt;/li>&lt;ul>&lt;li>&lt;tt>&lt;i>operation&lt;/i> Request&lt;/tt> for a specific request.&lt;/li>&lt;li>&lt;tt>&lt;i>operation&lt;/i> Response\"&lt;/tt> for a specific response.&lt;/li>&lt;li>The value of the &lt;tt>name&lt;/tt> attribute for the &lt;tt>&amp;lt;fault>&lt;/tt> element.&lt;/li>&lt;/ul>&lt;li>&lt;tt>#input&lt;/tt> for the request direction in the WSDL file.&lt;/li>&lt;li>&lt;tt>#output&lt;/tt> for the response direction in the WSDL file.&lt;/li>&lt;li>&lt;tt>*&lt;/tt> for all inputs, outputs, and faults in the WSDL file.&lt;/li>&lt;/ul>&lt;p>When specified and not *, only messages that are defined for inputs, outputs, and faults that match the specified name or direction are considered valid. Faults are considered valid for the response direction.&lt;/p>"
                        },
                        {
                            "name": "WSDLAttachmentPart",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Validate messages defined by mime:content in the WSDL that match the specified message part name",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-does-not-equal",
                                    "value": "validate"
                                }
                            },
                            "cli-alias": "wsdl-attachment-part",
                            "display": "WSDL Attachment Part Name",
                            "description": "The name of the WSDL message part that defines the content of a MIME attachment (mime:content/@part). The value should be the unqualified name of the message part. The name is the same as the part attribute on the corresponding mime:content component in the WSDL file. When this property is not defined or has the special value \"*\", the root MIME part is validated. The root MIME part is bound to a soap:body."
                        },
                        {
                            "name": "MethodRewriteType",
                            "default": "GET",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": [
                                        "method-rewrite",
                                        "fetch"
                                    ]
                                }
                            },
                            "summary": "The HTTP method type",
                            "cli-alias": "http-method",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": [
                                        "method-rewrite",
                                        "fetch"
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmHTTPMethodRESTType"
                            },
                            "display": "Method",
                            "description": "The HTTP method type to use."
                        },
                        {
                            "name": "MethodType",
                            "default": "POST",
                            "required-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-equals",
                                            "value": "results-async"
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "Type",
                                                    "evaluation": "property-equals",
                                                    "value": "results"
                                                },
                                                {
                                                    "property-name": "Destination",
                                                    "evaluation": "property-does-not-equal",
                                                    "value": ""
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "summary": "The HTTP method type",
                            "cli-alias": "http-method-limited",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-or",
                                    "condition": [
                                        {
                                            "property-name": "Type",
                                            "evaluation": "property-value-not-in-list",
                                            "value": [
                                                "results",
                                                "results-async"
                                            ]
                                        },
                                        {
                                            "evaluation": "logical-and",
                                            "condition": [
                                                {
                                                    "property-name": "Type",
                                                    "evaluation": "property-equals",
                                                    "value": "results"
                                                },
                                                {
                                                    "property-name": "Destination",
                                                    "evaluation": "property-equals",
                                                    "value": ""
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmHTTPMethodRESTType"
                            },
                            "display": "Method",
                            "description": "The HTTP method type to use."
                        },
                        {
                            "name": "MethodType2",
                            "default": "POST",
                            "required-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-in-list",
                                    "value": "log"
                                }
                            },
                            "summary": "The HTTP method type",
                            "cli-alias": "http-method-limited2",
                            "ignored-when": {
                                "condition": {
                                    "property-name": "Type",
                                    "evaluation": "property-value-not-in-list",
                                    "value": "log"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmHTTPMethodRESTType2"
                            },
                            "display": "Method",
                            "description": "The HTTP method type to use."
                        },
                        {
                            "description": "&lt;b>Do not modify this value.&lt;/b> The DataPower Gateway uses this identifier to store the output from the action. The output can be used for external monitoring by products such as Tivoli Composite Application Manager.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "Identifier that associates action output for external monitoring",
                            "cli-alias": "policy-key",
                            "display": "Policy identifier (for internal use)",
                            "name": "PolicyKey"
                        }
                    ]
                },
                "description": "Define XSL filters and/or transformations"
            },
            "_links": {
                "doc": {
                    "href": "/mgmt/docs/metadata/StylePolicyAction"
                },
                "self": {
                    "href": "/mgmt/metadata/default/StylePolicyAction"
                }
            }
        }
    }
}