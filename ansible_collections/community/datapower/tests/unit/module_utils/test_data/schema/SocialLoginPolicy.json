{
    "schema": {
        "types": [
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmAdminState"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmAdminState"
                    }
                },
                "type": {
                    "cli-arg": "enabled | disabled",
                    "name": "dmAdminState",
                    "value-list": {
                        "value": [
                            {
                                "name": "enabled",
                                "display": "enabled"
                            },
                            {
                                "name": "disabled",
                                "display": "disabled"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmString"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmString"
                    }
                },
                "type": {
                    "cli-arg": "string",
                    "name": "dmString"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmClientGrantType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmClientGrantType"
                    }
                },
                "type": {
                    "name": "dmClientGrantType",
                    "value-list": {
                        "value": [
                            {
                                "display": "Authorization Code",
                                "description": "Uses the authorization code grant type to obtain authorization. When selected, the authorization request uses the &lt;tt>response_type=code&lt;/tt> parameter.",
                                "name": "code",
                                "summary": "Use the authorization code grant type to obtain authorization."
                            },
                            {
                                "display": "Authorization Code with ID Token Response",
                                "description": "Uses the authorization code grant type to obtain an access token and an ID token. When selected, the authorization request uses the &lt;tt>response_type=code id_token&lt;/tt> parameter.",
                                "name": "code-id_token",
                                "summary": "Use the authorization code grant type to obtain an access token and an ID token."
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmReference"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmReference"
                    }
                },
                "type": {
                    "cli-arg": "object",
                    "name": "dmReference"
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmProviderType"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmProviderType"
                    }
                },
                "type": {
                    "name": "dmProviderType",
                    "value-list": {
                        "value": [
                            {
                                "display": "Google",
                                "description": "Uses Google as the social login provider. When selected, DataPower processes OIDC transactions as specified by Google in https://developers.google.com/identity/protocols/OpenIDConnect",
                                "name": "google",
                                "summary": "Use Google as the social login provider"
                            },
                            {
                                "display": "OpenID Connect",
                                "description": "Use a social login provider that implements the OIDC specification, which is similar to Google.",
                                "name": "oidc",
                                "summary": "Use a social login provider that implements the OIDC specification"
                            }
                        ]
                    }
                }
            },
            {
                "_links": {
                    "doc": {
                        "href": "/mgmt/docs/types/dmToggle"
                    },
                    "self": {
                        "href": "/mgmt/types/default/dmToggle"
                    }
                },
                "type": {
                    "cli-arg": "on | off",
                    "name": "dmToggle",
                    "value-list": {
                        "value": [
                            {
                                "name": "on",
                                "display": "on"
                            },
                            {
                                "name": "off",
                                "display": "off"
                            }
                        ]
                    }
                }
            }
        ],
        "metadata": {
            "object": {
                "licensed-feature": "IDG",
                "name": "SocialLoginPolicy",
                "display": "Social Login Policy",
                "property-group": {
                    "property-group": [
                        {
                            "member": [
                                {
                                    "name": "mAdminState"
                                },
                                {
                                    "name": "UserSummary"
                                }
                            ],
                            "name": "general",
                            "display": "General"
                        },
                        {
                            "member": [
                                {
                                    "name": "ClientID"
                                },
                                {
                                    "name": "ClientSecret"
                                },
                                {
                                    "name": "ClientGrant"
                                },
                                {
                                    "name": "ClientScope"
                                },
                                {
                                    "name": "ClientRedirectURI"
                                },
                                {
                                    "name": "ClientOptionalQueryParams"
                                },
                                {
                                    "name": "ClientSSLProfile"
                                }
                            ],
                            "name": "client",
                            "display": "Client Settings"
                        },
                        {
                            "member": [
                                {
                                    "name": "Provider"
                                },
                                {
                                    "name": "ProviderAZEndpoint"
                                },
                                {
                                    "name": "ProviderTokenEndpoint"
                                }
                            ],
                            "name": "provider",
                            "display": "Social Login Provider Settings"
                        },
                        {
                            "member": [
                                {
                                    "name": "ValidateJWTToken"
                                },
                                {
                                    "name": "JWTValidator"
                                }
                            ],
                            "name": "processing",
                            "display": "Token Processing Settings"
                        }
                    ],
                    "name": "main",
                    "display": "Main"
                },
                "uri": "crypto/social-login-policy",
                "summary": "Configure and manage the policy that defines social login behavior",
                "cmd-group": "crypto",
                "cli-alias": "social-login-policy",
                "properties": {
                    "property": [
                        {
                            "name": "mAdminState",
                            "default": "enabled",
                            "type": {
                                "href": "/mgmt/types/default/dmAdminState"
                            },
                            "label": "Enable administrative state",
                            "summary": "Set the administrative state of this configuration.",
                            "cli-alias": "admin-state",
                            "display": "Administrative state",
                            "hoverhelp": "&lt;p>Set the administrative state of the configuration.&lt;/p>&lt;ul>&lt;li>To make active, set the check box.&lt;/li>&lt;li>To make inactive, clear the check box.&lt;/li>&lt;/ul>",
                            "description": "&lt;p>The administrative state of the configuration.&lt;/p>&lt;ul>&lt;li>To make active, set to enabled.&lt;/li>&lt;li>To make inactive, set to disabled.&lt;/li>&lt;/ul>"
                        },
                        {
                            "description": "Enter a descriptive summary for the configuration.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "A brief descriptive summary for the configuration.",
                            "cli-alias": "summary",
                            "display": "Comments",
                            "name": "UserSummary"
                        },
                        {
                            "name": "ClientID",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "required": "true",
                            "summary": "The ID of DataPower that is registered with the social login provider",
                            "cli-alias": "client-id",
                            "display": "Client ID",
                            "description": "Specify the ID of DataPower that is registered with the social login provider."
                        },
                        {
                            "name": "ClientSecret",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "required": "true",
                            "summary": "The secret of DataPower that is registered with the social login provider",
                            "cli-alias": "client-secret",
                            "display": "Client secret",
                            "description": "Specify the secret of DataPower that is registered with the social login provider."
                        },
                        {
                            "description": "Controls how DataPower generates the client request to the social login provider.",
                            "type": {
                                "href": "/mgmt/types/default/dmClientGrantType"
                            },
                            "summary": "How to generate the client request to the social login provider",
                            "cli-alias": "client-grant",
                            "display": "Client grant type",
                            "name": "ClientGrant"
                        },
                        {
                            "description": "Specifies the scope value that defines what access privileges are requested for access tokens, ID tokens, or both. Use space separated strings. For example, &lt;tt>openid email&lt;/tt> .",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "What access privileges are requested",
                            "cli-alias": "client-scope",
                            "display": "Scope",
                            "name": "ClientScope"
                        },
                        {
                            "description": "&lt;p>Specifies the URI that the social login policy redirects the client to after the client obtains a code or an access token. The URI must match with what is registered at the social login provider for DataPower as the OAuth/OIDC client. The URI is included in the OAuth/OIDC client request that DataPower generates.&lt;/p>&lt;p>Note that the social login provider Google mandates that the redirect URI must be a fully qualified host name instead of an IP address.&lt;/p>&lt;p>Note that the redirect URI should end with the suffix '/social-login-callback' in the pathname in order to differentiate between the callback requests and other types of requests coming into the service.&lt;/p>&lt;p>You can specify the value of this redirect URI in the following forms.&lt;/p>&lt;ul>&lt;li>Static string. Enter a static string as the redirect URI. Must end with the suffix '/social-login-callback'.&lt;/li>&lt;li>URL-in/suffix. In this case, it takes the value from the inbound URL service variable var://service/URL-in and then suffixes the value with whatever is specified after &lt;tt>URL-in&lt;/tt> as the redirect URI. For example, the value of this property is 'URL-in/social-login-callback' and the incoming URL is 'https://datapower.ibm.com:10087/getresources', then the redirect URI is constructed as 'https://datapower.ibm.com:10087/getresources/social-login-callback'.&lt;/li>&lt;li>Context variable. You can set a context variable before you invoke this AAA action and specify the context variable name for this value. For example, var://context/AAA/social-login-redirect-uri&lt;/li>&lt;/ul>",
                            "name": "ClientRedirectURI",
                            "minimum-length": 1,
                            "default": "URL-in/social-login-callback",
                            "valid-regexp": "(^var://)|(/social-login-callback$)",
                            "summary": "Where the user is redirected back to DataPower to process the code or access token from the social login provider",
                            "cli-alias": "client-redirect-uri",
                            "example": "https://datapower.ibm.com:10087/social-login-callback or URL-in/social-login-callback or var://service/URL-in",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Client redirection URI",
                            "maximum-length": 255
                        },
                        {
                            "description": "Specifies the optional query parameters to include in the initial OAuth/OIDC request that DataPower sends to the social login provider. Enter the optional query parameters as name=value pairs and separate each pair with an ampersand. For example, prompt=consent&amp;amp;login_hint=jsmith@example.com&amp;amp;openid.realm=example.comi&amp;amp;hd=example.com.",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "summary": "The optional query parameters to include in the initial OAuth/OIDC request that DataPower sends to the social login provider",
                            "cli-alias": "client-opt-query-params",
                            "display": "Client Optional Query Parameters",
                            "name": "ClientOptionalQueryParams"
                        },
                        {
                            "name": "ClientSSLProfile",
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/SSLClientProfile"
                                }
                            },
                            "required": "true",
                            "summary": "The TLS client profile to secure connections with the social login provider",
                            "cli-alias": "client-ssl",
                            "display": "TLS client profile",
                            "description": "Specifies the TLS client profile to secure connections when DataPower obtains an access token from the social login provider."
                        },
                        {
                            "name": "Provider",
                            "type": {
                                "href": "/mgmt/types/default/dmProviderType"
                            },
                            "required": "true",
                            "summary": "Which social login provider to use",
                            "cli-alias": "provider",
                            "display": "Social login provider",
                            "description": "Controls which social login provider to use."
                        },
                        {
                            "description": "Specify the provider's endpoint URL that accepts an authorization request from a client to perform social login with the provider. When the provider is Google, you can retrieve the authorization endpoint URL from the Discovery document for Google's OpenID Connect service.",
                            "name": "ProviderAZEndpoint",
                            "minimum-length": 7,
                            "valid-regexp": "^https?://\\[?[-_a-z0-9A-Z.:]+\\]?(:[0-9]+)?/[ -~]*$",
                            "required": "true",
                            "summary": "The provider's endpoint URL that accepts an authorization request from a client to perform social login with the provider",
                            "cli-alias": "provider-az-endpoint",
                            "example": "https://example.com/auth",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Authorization endpoint URL",
                            "maximum-length": 255
                        },
                        {
                            "description": "Specify the provider's endpoint URL that accepts an authorization grant, or code, from a client in exchange for an access token from the social login provider. When the provider is Google, you can retrieve the token endpoint URL from the Discovery document for Google's OpenID Connect service.",
                            "name": "ProviderTokenEndpoint",
                            "minimum-length": 7,
                            "valid-regexp": "^https?://\\[?[-_a-z0-9A-Z.:]+\\]?(:[0-9]+)?/[ -~]*$",
                            "required": "true",
                            "summary": "The provider's endpoint URL that accepts an authorization grant, or code, from a client in exchange for an access token from the social login provider",
                            "cli-alias": "provider-token-endpoint",
                            "example": "https://example.com/token",
                            "type": {
                                "href": "/mgmt/types/default/dmString"
                            },
                            "display": "Token endpoint URL",
                            "maximum-length": 255
                        },
                        {
                            "name": "ValidateJWTToken",
                            "default": "on",
                            "type": {
                                "href": "/mgmt/types/default/dmToggle"
                            },
                            "required": "true",
                            "summary": "Whether to validate the JWT token from the provider",
                            "cli-alias": "validate-jwt-token",
                            "display": "Enable JWT token validation",
                            "description": "&lt;p>Controls whether to validate the JWT token (ID token)from the provider. If yes, it is recommended that you validate the ID token that is obtained from Google by defining the following settings in the JWT Validator configuration.&lt;/p>&lt;p>&lt;ol>&lt;li>Verify the signature by fetching the certs from https://www.googleapis.com/oauth2/v3/certs&lt;/li>&lt;li>Verify that the &lt;tt>aud&lt;/tt> claim matches the client ID of DataPower.&lt;/li>&lt;li>Verify that the &lt;tt>iss&lt;/tt> claim matches accounts.google.com or https://accounts.google.com&lt;/li>&lt;/ol>&lt;/p>&lt;p>For other recommendations on validating the ID token from Google, see https://developers.google.com/identity/protocols/OpenIDConnect.&lt;/p>"
                        },
                        {
                            "name": "JWTValidator",
                            "required-when": {
                                "condition": {
                                    "property-name": "ValidateJWTToken",
                                    "evaluation": "property-equals",
                                    "value": "on"
                                }
                            },
                            "summary": "The JWT Validator configuration",
                            "cli-alias": "jwt-validator",
                            "ignored-when": {
                                "condition": {
                                    "evaluation": "logical-true"
                                }
                            },
                            "type": {
                                "href": "/mgmt/types/default/dmReference",
                                "reference-to": {
                                    "href": "/mgmt/metadata/default/AAAJWTValidator"
                                }
                            },
                            "display": "JWT Validator",
                            "description": "Specify the JWT Validator configuration that defines how to validate and verify the ID token."
                        }
                    ]
                },
                "description": "DataPower can act as an OpenID Connect client. In this case, a social login policy enables DataPower to redirect the user to a social login provider like Google for user authentication and consent for authorization."
            },
            "_links": {
                "doc": {
                    "href": "/mgmt/docs/metadata/SocialLoginPolicy"
                },
                "self": {
                    "href": "/mgmt/metadata/default/SocialLoginPolicy"
                }
            }
        }
    }
}